<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.1.0"><dataflow id="b723f162-8980-4902-9f44-6756910c88af" role="top"><name>SBML_model_optimisation</name><inputPorts><port><name>sbml</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;sbml xmlns="http://www.sbml.org/sbml/level2/version3" level="2" version="3"&gt;
  &lt;model id="Taverna1" name="Test model"&gt;
    &lt;listOfUnitDefinitions&gt;
      &lt;unitDefinition id="U/mg" name="U/mg"&gt;
        &lt;listOfUnits&gt;
          &lt;unit kind="katal" scale="-9" multiplier="16.6669998168945"/&gt;
          &lt;unit kind="gram" exponent="-1" scale="-3"/&gt;
        &lt;/listOfUnits&gt;
      &lt;/unitDefinition&gt;
      &lt;unitDefinition id="U/ml" name="U/ml"&gt;
        &lt;listOfUnits&gt;
          &lt;unit kind="katal" scale="-9" multiplier="16.6669998168945"/&gt;
          &lt;unit kind="litre" exponent="-1" scale="-3"/&gt;
        &lt;/listOfUnits&gt;
      &lt;/unitDefinition&gt;
      &lt;unitDefinition id="mM" name="millimolar"&gt;
        &lt;listOfUnits&gt;
          &lt;unit kind="litre" exponent="-1"/&gt;
          &lt;unit kind="mole" scale="-3"/&gt;
        &lt;/listOfUnits&gt;
      &lt;/unitDefinition&gt;
      &lt;unitDefinition id="micromolar" name="micromolar"&gt;
        &lt;listOfUnits&gt;
          &lt;unit kind="litre" exponent="-1"/&gt;
          &lt;unit kind="mole" scale="-6"/&gt;
        &lt;/listOfUnits&gt;
      &lt;/unitDefinition&gt;
      &lt;unitDefinition id="per_second" name="per_second"&gt;
        &lt;listOfUnits&gt;
          &lt;unit kind="second" exponent="-1"/&gt;
        &lt;/listOfUnits&gt;
      &lt;/unitDefinition&gt;
    &lt;/listOfUnitDefinitions&gt;
    &lt;listOfCompartments&gt;
      &lt;compartment metaid="meta_C_1" id="C_1" name="Cytoplasm" size="1" outside="C_10" sboTerm="SBO:0000290"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_C_1"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.go:GO:0005737"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/compartment&gt;
      &lt;compartment metaid="meta_C_10" id="C_10" name="Plasma membrane" size="1" outside="C_2" sboTerm="SBO:0000290"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_C_10"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.go:GO:0005886"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/compartment&gt;
      &lt;compartment metaid="meta_C_2" id="C_2" name="Extracellular" size="1" sboTerm="SBO:0000290"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_C_2"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.go:GO:0005576"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/compartment&gt;
    &lt;/listOfCompartments&gt;
    &lt;listOfSpecies&gt;
      &lt;species metaid="meta_M_276" id="M_276" name="D-Fructose 1,6-bisphosphate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_276_inchi"&gt;InChI=1/C6H14O12P2/c7-3(1-17-19(11,12)13)5(9)6(10)4(8)2-18-20(14,15)16/h3,5-7,9-10H,1-2H2,(H2,11,12,13)(H2,14,15,16)/t3-,5-,6-/m1/s1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_276"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_276"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:16905"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_172" id="M_172" name="ATP" compartment="C_1" initialConcentration="3.5" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_172_inchi"&gt;InChI=1/C10H16N5O13P3/c11-8-5-9(13-2-12-8)15(3-14-5)10-7(17)6(16)4(26-10)1-25-30(21,22)28-31(23,24)27-29(18,19)20/h2-4,6-7,10,16-17H,1H2,(H,21,22)(H,23,24)(H2,11,12,13)(H2,18,19,20)/t4-,6-,7-,10-/m1/s1/f/h18-19,21,23H,11H2&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_172"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_172"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15422"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_273" id="M_273" name="D-Fructose 6-phosphate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_273_inchi"&gt;InChI=1/C6H13O9P/c7-1-3(8)5(10)6(11)4(9)2-15-16(12,13)14/h4-7,9-11H,1-2H2,(H2,12,13,14)/t4-,5-,6-/m1/s1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_273"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_273"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15946"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_292" id="M_292" name="D-Glucose 6-phosphate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_292_inchi"&gt;InChI=1/C6H13O9P/c7-1-3(8)5(10)6(11)4(9)2-15-16(12,13)14/h1,3-6,8-11H,2H2,(H2,12,13,14)/t3-,4+,5+,6+/m0/s1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_292"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_292"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15954"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_4" id="M_4" name="3-Phospho-D-glyceroyl phosphate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_4_inchi"&gt;InChI=1/C3H8O10P2/c4-2(1-12-14(6,7)8)3(5)13-15(9,10)11/h2,4H,1H2,(H2,6,7,8)(H2,9,10,11)/t2-/m1/s1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_4"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_4"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:16001"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_135" id="M_135" name="ADP" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_135_inchi"&gt;InChI=1/C10H15N5O10P2/c11-8-5-9(13-2-12-8)15(3-14-5)10-7(17)6(16)4(24-10)1-23-27(21,22)25-26(18,19)20/h2-4,6-7,10,16-17H,1H2,(H,21,22)(H2,11,12,13)(H2,18,19,20)/t4-,6-,7-,10-/m1/s1/f/h18-19,21H,11H2&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_135"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_135"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:16761"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_36" id="M_36" name="D-Glycerate 2-phosphate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_36_inchi"&gt;InChI=1/C3H7O7P/c4-1-2(3(5)6)10-11(7,8)9/h2,4H,1H2,(H,5,6)(H2,7,8,9)/t2-/m1/s1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_36"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_36"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:17835"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_289" id="M_289" name="Glyceraldehyde 3-phosphate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_289_inchi"&gt;InChI=1/C3H7O6P/c4-1-3(5)2-9-10(6,7)8/h1,3,5H,2H2,(H2,6,7,8)&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_289"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_289"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:29052"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_411" id="M_411" name="Nicotinamide adenine dinucleotide" compartment="C_1" initialConcentration="4" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_411_inchi"&gt;InChI=1/C21H27N7O14P2/c22-17-12-19(25-7-24-17)28(8-26-12)21-16(32)14(30)11(41-21)6-39-44(36,37)42-43(34,35)38-5-10-13(29)15(31)20(40-10)27-3-1-2-9(4-27)18(23)33/h1-4,7-8,10-11,13-16,20-21,29-32H,5-6H2,(H5-,22,23,24,25,33,34,35,36,37)/p+1/t10-,11-,13-,14-,15-,16-,20-,21-/m1/s1/fC21H28N7O14P2/h34,36H,22-23H2/q+1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_411"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_411"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15846"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_454" id="M_454" name="Phosphate" compartment="C_1" initialConcentration="4" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_454_inchi"&gt;InChI=1/H3O4P/c1-5(2,3)4/h(H3,1,2,3,4)/p-3/fO4P/q-3&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_454"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_454"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:18367"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_304" id="M_304" name="D-Glucose" compartment="C_1" initialConcentration="50" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_304"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:17634"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_57" id="M_57" name="3-Phospho-D-glycerate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_57_inchi"&gt;InChI=1/C3H7O7P/c4-2(3(5)6)1-10-11(7,8)9/h2,4H,1H2,(H,5,6)(H2,7,8,9)/t2-/m1/s1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_57"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_57"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:17794"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_329" id="M_329" name="H+" compartment="C_1" initialConcentration="4" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_329_inchi"&gt;InChI=1/p+1/fH/q+1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_329"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_329"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15378"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_446" id="M_446" name="Phosphoenolpyruvate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_446_inchi"&gt;InChI=1/C3H5O6P/c1-2(3(4)5)9-10(6,7)8/h1H2,(H,4,5)(H2,6,7,8)/p-1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_446"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_446"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:18021"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_483" id="M_483" name="Pyruvate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_483_inchi"&gt;InChI=1/C3H4O3/c1-2(4)3(5)6/h1H3,(H,5,6)/p-1/fC3H3O3/q-1&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_483"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_483"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15361"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_234" id="M_234" name="Dihydroxyacetone phosphate" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_234_inchi"&gt;InChI=1/C3H7O6P/c4-1-3(5)2-9-10(6,7)8/h4H,1-2H2,(H2,6,7,8)/f/h6-7H&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_234"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_234"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:16108"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_330" id="M_330" name="H2O" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_330_inchi"&gt;InChI=1/H2O/h1H2&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_330"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_330"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15377"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_412" id="M_412" name="Nicotinamide adenine dinucleotide - reduced" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_412_inchi"&gt;InChI=1/C21H29N7O14P2/c22-17-12-19(25-7-24-17)28(8-26-12)21-16(32)14(30)11(41-21)6-39-44(36,37)42-43(34,35)38-5-10-13(29)15(31)20(40-10)27-3-1-2-9(4-27)18(23)33/h1,3-4,7-8,10-11,13-16,20-21,29-32H,2,5-6H2,(H2,23,33)(H,34,35)(H,36,37)(H2,22,24,25)/t10-,11-,13-,14-,15-,16-,20-,21-/m1/s1/f/h34,36H,22-23H2&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_412"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_412"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:16908"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_121" id="M_121" name="Acetaldehyde" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_121_inchi"&gt;InChI=1/C2H4O/c1-2-3/h2H,1H3&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_121"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_121"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:15343"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_M_203" id="M_203" name="CO2" compartment="C_1" initialConcentration="0" sboTerm="SBO:0000299"&gt;
        &lt;annotation&gt;
          &lt;in:inchi xmlns:in="http://biomodels.net/inchi" metaid="meta_M_203_inchi"&gt;InChI=1/CO2/c2-1-3&lt;/in:inchi&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_M_203"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="#meta_M_203"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:obo.chebi:CHEBI:16526"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_375" id="E_375" name="YKL060C" compartment="C_1" initialConcentration="0.189150466680615" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_375"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000001543"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P14540"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_Cx_40" id="Cx_40" name="YGR240C:YMR205C" compartment="C_1" initialConcentration="0.00337856838202656" sboTerm="SBO:0000297"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_Cx_40"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P16861"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P16862"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_417" id="E_417" name="YBR196C" compartment="C_1" initialConcentration="0.0110396686481593" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_417"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000000400"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P12709"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_670" id="E_670" name="YCR012W" compartment="C_1" initialConcentration="0.055110250684886" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_670"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000000605"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P00560"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_352" id="E_352" name="YGR254W" compartment="C_1" initialConcentration="0.0925997002145096" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_352"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000003486"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P00924"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_426" id="E_426" name="YJL052W" compartment="C_1" initialConcentration="0.0345345244515535" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_426"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000003588"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P00360"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_502" id="E_502" name="YFR053C" compartment="C_1" initialConcentration="0.00166468793544766" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_502"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000001949"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P04806"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_336" id="E_336" name="YKL152C" compartment="C_1" initialConcentration="0.0632293930179762" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_336"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000001635"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P00950"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_726" id="E_726" name="YAL038W" compartment="C_1" initialConcentration="0.297886720740557" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_726"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000000036"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P00549"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
      &lt;species metaid="meta_E_24" id="E_24" name="YLR044C" compartment="C_1" initialConcentration="0.0952086884800322" sboTerm="SBO:0000014"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_E_24"&gt;
              &lt;bqbiol:is&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:sgd:S000004034"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:uniprot:P06169"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:is&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
      &lt;/species&gt;
    &lt;/listOfSpecies&gt;
    &lt;listOfReactions&gt;
      &lt;reaction metaid="meta_R_555" id="R_555" name="fructose-bisphosphate aldolase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_555"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:8435847"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:4.1.2.13"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_276"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_234"/&gt;
          &lt;speciesReference species="M_289"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_375"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;divide/&gt;
              &lt;apply&gt;
                &lt;times/&gt;
                &lt;ci&gt; kcat &lt;/ci&gt;
                &lt;ci&gt; Et &lt;/ci&gt;
                &lt;ci&gt; M_276 &lt;/ci&gt;
              &lt;/apply&gt;
              &lt;apply&gt;
                &lt;plus/&gt;
                &lt;ci&gt; Ks &lt;/ci&gt;
                &lt;ci&gt; M_276 &lt;/ci&gt;
              &lt;/apply&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="kcat" value="4.1385594999"/&gt;
            &lt;parameter id="Ks" value="0.45070069095"/&gt;
            &lt;parameter id="Et" value="4.0625e-05"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1016" id="R_1016" name="phosphofructokinase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1016"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:3007939"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:2.7.1.11"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_172"/&gt;
          &lt;speciesReference species="M_273"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_135"/&gt;
          &lt;speciesReference species="M_276"/&gt;
          &lt;speciesReference species="M_329"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="Cx_40"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;times/&gt;
              &lt;ci&gt; k0 &lt;/ci&gt;
              &lt;ci&gt; M_172 &lt;/ci&gt;
              &lt;ci&gt; M_273 &lt;/ci&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="k0" value="1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1022" id="R_1022" name="glucose-6-phosphate isomerase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1022"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:8435847"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:5.3.1.9"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_292"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_273"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_417"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;divide/&gt;
              &lt;apply&gt;
                &lt;times/&gt;
                &lt;ci&gt; Vmax &lt;/ci&gt;
                &lt;ci&gt; M_292 &lt;/ci&gt;
              &lt;/apply&gt;
              &lt;apply&gt;
                &lt;plus/&gt;
                &lt;apply&gt;
                  &lt;times/&gt;
                  &lt;ci&gt; Km &lt;/ci&gt;
                  &lt;apply&gt;
                    &lt;plus/&gt;
                    &lt;cn type="integer"&gt; 1 &lt;/cn&gt;
                    &lt;apply&gt;
                      &lt;divide/&gt;
                      &lt;ci&gt; I &lt;/ci&gt;
                      &lt;ci&gt; Ki &lt;/ci&gt;
                    &lt;/apply&gt;
                  &lt;/apply&gt;
                &lt;/apply&gt;
                &lt;ci&gt; M_292 &lt;/ci&gt;
              &lt;/apply&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="Ki" value="1.9"/&gt;
            &lt;parameter id="I" value="0"/&gt;
            &lt;parameter id="Vmax" value="0"/&gt;
            &lt;parameter id="Km" value="0.86"/&gt;
            &lt;parameter id="E" value="0.1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1023" id="R_1023" name="phosphoglycerate kinase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1023"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:6347186"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:2.7.2.3"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_4"/&gt;
          &lt;speciesReference species="M_135"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_57"/&gt;
          &lt;speciesReference species="M_172"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_670"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;divide/&gt;
              &lt;apply&gt;
                &lt;times/&gt;
                &lt;ci&gt; E_670 &lt;/ci&gt;
                &lt;ci&gt; kcat &lt;/ci&gt;
                &lt;ci&gt; M_57 &lt;/ci&gt;
              &lt;/apply&gt;
              &lt;apply&gt;
                &lt;plus/&gt;
                &lt;ci&gt; Km &lt;/ci&gt;
                &lt;ci&gt; M_57 &lt;/ci&gt;
              &lt;/apply&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="kcat" value="343.5"/&gt;
            &lt;parameter id="Km" value="0.77"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1445" id="R_1445" name="enolase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1445"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:7520111"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:4.2.1.11"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_36"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_330"/&gt;
          &lt;speciesReference species="M_446"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_352"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;divide/&gt;
              &lt;apply&gt;
                &lt;times/&gt;
                &lt;ci&gt; Vmax &lt;/ci&gt;
                &lt;ci&gt; M_36 &lt;/ci&gt;
              &lt;/apply&gt;
              &lt;apply&gt;
                &lt;plus/&gt;
                &lt;ci&gt; Km &lt;/ci&gt;
                &lt;ci&gt; M_36 &lt;/ci&gt;
              &lt;/apply&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="Km" value="48"/&gt;
            &lt;parameter id="Vmax" value="42"/&gt;
            &lt;parameter id="B" value="1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1501" id="R_1501" name="glyceraldehyde-3-phosphate dehydrogenase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1501"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:3905788"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:1.2.1.12"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_289"/&gt;
          &lt;speciesReference species="M_411"/&gt;
          &lt;speciesReference species="M_454"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_4"/&gt;
          &lt;speciesReference species="M_329"/&gt;
          &lt;speciesReference species="M_412"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_426"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;times/&gt;
              &lt;ci&gt; k1 &lt;/ci&gt;
              &lt;ci&gt; M_289 &lt;/ci&gt;
              &lt;ci&gt; M_411 &lt;/ci&gt;
              &lt;ci&gt; M_454 &lt;/ci&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="k1" value="1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1549" id="R_1549" name="hexokinase (D-glucose:ATP)" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1549"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:6394965"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:2.7.1.1"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_172"/&gt;
          &lt;speciesReference species="M_304"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_135"/&gt;
          &lt;speciesReference species="M_292"/&gt;
          &lt;speciesReference species="M_329"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_502"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;times/&gt;
              &lt;ci&gt; k2 &lt;/ci&gt;
              &lt;ci&gt; M_172 &lt;/ci&gt;
              &lt;ci&gt; M_304 &lt;/ci&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="k2" value="1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1655" id="R_1655" name="phosphoglycerate mutase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1655"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:3033435"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:5.4.2.1"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_57"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_36"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_336"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;times/&gt;
              &lt;ci&gt; k3 &lt;/ci&gt;
              &lt;ci&gt; M_57 &lt;/ci&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="k3" value="1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1680" id="R_1680" name="pyruvate kinase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1680"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:pubmed:6185493"/&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:2.7.1.40"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_135"/&gt;
          &lt;speciesReference species="M_329"/&gt;
          &lt;speciesReference species="M_446"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_172"/&gt;
          &lt;speciesReference species="M_483"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_726"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;times/&gt;
              &lt;ci&gt; k4 &lt;/ci&gt;
              &lt;ci&gt; M_135 &lt;/ci&gt;
              &lt;ci&gt; M_329 &lt;/ci&gt;
              &lt;ci&gt; M_446 &lt;/ci&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="k4" value="1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
      &lt;reaction metaid="meta_R_1681" id="R_1681" name="pyruvate decarboxylase" sboTerm="SBO:0000176"&gt;
        &lt;annotation&gt;
          &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/"&gt;
            &lt;rdf:Description rdf:about="#meta_R_1681"&gt;
              &lt;bqbiol:isDescribedBy&gt;
                &lt;rdf:Bag&gt;
                  &lt;rdf:li rdf:resource="urn:miriam:ec-code:4.1.1.1"/&gt;
                &lt;/rdf:Bag&gt;
              &lt;/bqbiol:isDescribedBy&gt;
            &lt;/rdf:Description&gt;
          &lt;/rdf:RDF&gt;
        &lt;/annotation&gt;
        &lt;listOfReactants&gt;
          &lt;speciesReference species="M_329"/&gt;
          &lt;speciesReference species="M_483"/&gt;
        &lt;/listOfReactants&gt;
        &lt;listOfProducts&gt;
          &lt;speciesReference species="M_121"/&gt;
          &lt;speciesReference species="M_203"/&gt;
        &lt;/listOfProducts&gt;
        &lt;listOfModifiers&gt;
          &lt;modifierSpeciesReference species="E_24"/&gt;
        &lt;/listOfModifiers&gt;
        &lt;kineticLaw&gt;
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
            &lt;apply&gt;
              &lt;times/&gt;
              &lt;ci&gt; k5 &lt;/ci&gt;
              &lt;ci&gt; M_329 &lt;/ci&gt;
              &lt;ci&gt; M_483 &lt;/ci&gt;
            &lt;/apply&gt;
          &lt;/math&gt;
          &lt;listOfParameters&gt;
            &lt;parameter id="k5" value="1"/&gt;
          &lt;/listOfParameters&gt;
        &lt;/kineticLaw&gt;
      &lt;/reaction&gt;
    &lt;/listOfReactions&gt;
  &lt;/model&gt;
&lt;/sbml&gt;
</text>
      </annotationBean>
      <date>2010-03-25 16:09:38.819 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>A parameterised SBML model</text>
      </annotationBean>
      <date>2010-03-25 16:09:47.900 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>optimised_sbml</name><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>An SBML model optimised against data from the MCISB key results database.</text>
      </annotationBean>
      <date>2010-03-26 13:05:01.187 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></outputPorts><processors><processor><name>createSysbioDataSource</name><inputPorts><port><name>sbml</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="sbml" to="sbml" /></inputMap><outputMap /><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import org.sbml.libsbml.*;
import java.sql.*;
import org.sqlite.JDBC;

String DATABASE_NAME = "taverna_sbml";
String databaseURL = "jdbc:sqlite:" + DATABASE_NAME + ".db";

//Set up database
try
{
  //System.loadLibrary("sbmlj");

  driver = "org.sqlite.JDBC";

  Class.forName(driver);
  Connection conn = DriverManager.getConnection(databaseURL);
  Statement stat = conn.createStatement();

  //Create compartment table
  stat.executeUpdate("drop table if exists compartment;");
  stat.executeUpdate("create table compartment (id, name, outside, sboTerm, goId);");

  //Create species table for holding metabolite and enzyme data
  stat.executeUpdate("drop table if exists species;");
  stat.executeUpdate("create table species (id, name, compartmentId, sboTerm, chebi, kegg, inchi, sgd, uniprot);");

  //Create reaction table for holding reactants and products
  stat.executeUpdate("drop table if exists reaction;");
  stat.executeUpdate("create table reaction (id, name, sboTerm, subsystem, ec, pubmed, tag);");

  //Create reactionspecies table for holding associations between species and reaction
  stat.executeUpdate("drop table if exists reactionspecies;");
  stat.executeUpdate("create table reactionspecies (reactionId, speciesId, stoichiometry, role);");

  //====================
  //For storing kinetics
  //====================

  //Create kineticlaw table
  stat.executeUpdate("drop table if exists kineticlaw;");
  stat.executeUpdate("create table kineticlaw (id, reactionId, formula, generalId, reversible);");

  //Create kineticlawvariable table
  stat.executeUpdate("drop table if exists kineticlawvariable;");
  stat.executeUpdate("create table kineticlawvariable (kineticLawId, variableId, relFormula);");

  //Create parameter table
  stat.executeUpdate("drop table if exists parameter;");
  stat.executeUpdate("create table parameter (id INTEGER PRIMARY KEY AUTOINCREMENT, name, role, type, kineticLawId, speciesId, comment, stValue, stDeviation, endValue, unitId);");

  //Create unit table
  stat.executeUpdate("drop table if exists unit;");
  stat.executeUpdate("create table unit (id, description, sbmlUnitId, comment);");

  //Create sbmlunit table
  stat.executeUpdate("drop table if exists sbmlunit;");
  stat.executeUpdate("create table sbmlunit (id, kind, exponent, scale, multiplier, offset);");

  //Create envkineticlaw table
  stat.executeUpdate("drop table if exists envkineticlaw;");
  stat.executeUpdate("create table envkineticlaw (kineticLawId, environDataId);");

  //Create environmentaldata table
  stat.executeUpdate("drop table if exists environmentaldata;");
  stat.executeUpdate("create table environmentaldata (id, stValue, endValue, bufferDescription, description, unitId, comment);");

  //============================
  //Load compartments into table
  //============================
  PreparedStatement prep1 = conn.prepareStatement("insert into compartment values (?, ?, ?, ?, ?);");
  SBMLReader reader = new SBMLReader();
  SBMLDocument doc  = reader.readSBMLFromString(sbml);
  Model m = doc.getModel();
  System.out.println("Model id: " + m.getId());

  ListOfCompartments compList = m.getListOfCompartments();
  for (int i = 0; i &lt; compList.size(); i++)
  {
    Compartment comp = (Compartment) compList.get(i);
    String id = comp.getId();
    String name = comp.getName();
    String outside = comp.getOutside();
    int sboTerm = comp.getSBOTerm();

    String goId = "";
    for (int x = 0; x &lt; comp.getNumCVTerms(); x++)
    {
      CVTerm term = comp.getCVTerm(x);
      XMLAttributes att = term.getResources();
      for (int y = 0; y &lt; att.getLength(); y++)
      {
        String uri = att.getValue(y);
        if (uri.contains("obo.go"))
        {
          goId = uri;
        }
      }
    }

    prep1.setString(1, id);
    prep1.setString(2, name);
    prep1.setString(3, outside);
    prep1.setInt(4, sboTerm);
    prep1.setString(5, goId);
    prep1.addBatch();
  }

  //============================
  //Load species into table
  //============================
  PreparedStatement prep = conn.prepareStatement("insert into species values (?, ?, ?, ?, ?, ?, ?, ?, ?);");
  ListOfSpecies spList = m.getListOfSpecies();
  for (int i = 0; i &lt; spList.size(); i++)
  {
    Species sp = (Species) spList.get(i);
    String id = sp.getId();
    String name = sp.getName();
    String compartment = sp.getCompartment();
    int sboTerm = sp.getSBOTerm();
    if (sboTerm == -1)
      sboTerm = 0;

    String chebi = "";
    String kegg = "";
    String inchi = "";
    String sgd = "";
    String uniprot = "";

    try
    {
      XMLNode node = sp.getAnnotation();
      XMLNode node2 = node.getChild(0);
      XMLNode node3 = node2.getChild(0);
      if(XMLNode.convertXMLNodeToString(node3).contains("InChI"))
        inchi = node3.getCharacters();
    } catch (NullPointerException e) //Catch metabolites with no inchi codes
    {
      System.err.println("No inchi code");
      inchi = "";
    }

    StringBuffer uniprotSb = new StringBuffer();
    for (int x = 0; x &lt; sp.getNumCVTerms(); x++)
    {
      CVTerm term = sp.getCVTerm(x);
      XMLAttributes att = term.getResources();
      for (int y = 0; y &lt; att.getLength(); y++)
      {
        String uri = att.getValue(y);
        if (uri.contains("chebi"))
        {
          chebi = uri;
        } else if (uri.contains("kegg"))
        {
          kegg = uri;
        } else if (uri.contains("sgd"))
        {
          sgd = uri;
        } else if (uri.contains("uniprot"))
        {
          uniprotSb.append("," + uri);
        }
      }
    }

    prep.setString(1, id);
    prep.setString(2, name);
    prep.setString(3, compartment);
    prep.setInt(4, sboTerm);
    prep.setString(5, chebi);
    prep.setString(6, kegg);
    prep.setString(7, inchi);
    prep.setString(8, sgd);
    uniprot = uniprotSb.toString();
    uniprot = uniprot.replaceFirst(",", "");
    prep.setString(9, uniprot);
    prep.addBatch();
  }

  //============================
  //Load reactions into table
  //============================
  PreparedStatement prep4 = conn.prepareStatement("insert into reaction values (?, ?, ?, ?, ?, ?, ?);");
  PreparedStatement prep2 = conn.prepareStatement("insert into reactionspecies values (?, ?, ?, ?);");
  PreparedStatement prep5 = conn.prepareStatement("insert into kineticlaw values (?, ?, ?, ?, ?);");
  PreparedStatement prep6 = conn.prepareStatement("insert into parameter values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
  ListOfReactions reactions = m.getListOfReactions();
  for (int i = 0; i &lt; reactions.size(); i++)
  {
    Reaction r = (Reaction) reactions.get(i);
    String id = r.getId();
    String name = r.getName();
    int sboTerm = r.getSBOTerm();

    //Sort out subsystem
    String anno = r.getNotesString();
    int start = anno.indexOf("&lt;p&gt;");
    int end = anno.indexOf("&lt;/p&gt;");

    //Sort out pubmed annotations for reaction
    String ec = "";
    String pubmed = "";
    for (int x = 0; x &lt; r.getNumCVTerms(); x++)
    {
      CVTerm term = r.getCVTerm(x);
      XMLAttributes att = term.getResources();
      for (int y = 0; y &lt; att.getLength(); y++)
      {
        uri = att.getValue(y);
        if (uri.contains("ec-code"))
        {
          ec = uri;
        } else if (uri.contains("pubmed"))
        {
          pubmed = uri;
        }
      }
    }

    prep4.setString(1, id);
    prep4.setString(2, name);
    prep4.setInt(3, sboTerm);
    prep4.setString(4, subsystem);
    prep4.setString(5, ec);
    prep4.setString(6, pubmed);
    prep4.setString(7, "");
    prep4.addBatch();

    ListOfSpeciesReferences reactants = r.getListOfReactants();
    for (int x = 0; x &lt; reactants.size(); x++)
    {
      SpeciesReference spRef = (SpeciesReference) reactants.get(x);
      species = spRef.getSpecies();
      prep2.setString(1, id);
      prep2.setString(2, species);
      prep2.setDouble(3, spRef.getStoichiometry());
      prep2.setString(4, "reactant");
      prep2.addBatch();
    }

    ListOfSpeciesReferences products = r.getListOfProducts();
    for (int x = 0; x &lt; products.size(); x++)
    {
      SpeciesReference spRef = (SpeciesReference) products.get(x);
      species = spRef.getSpecies();
      prep2.setString(1, id);
      prep2.setString(2, species);
      prep2.setDouble(3, spRef.getStoichiometry());
      prep2.setString(4, "product");
      prep2.addBatch();
    }

    ListOfSpeciesReferences modifiers = r.getListOfModifiers();
    for (int x = 0; x &lt; modifiers.size(); x++)
    {
      ModifierSpeciesReference spRef = (ModifierSpeciesReference) modifiers.get(x);
      species = spRef.getSpecies();
      prep2.setString(1, id);
      prep2.setString(2, species);
      prep2.setDouble(3, 0);
      prep2.setString(4, "modifier");
      prep2.addBatch();
    }

    //Load kinetic law data
    KineticLaw kl = r.getKineticLaw();
    String formula = kl.getFormula();
    String klId = "kl_" + r.getId();
    prep5.setString(1, klId);
    prep5.setString(2, r.getId());
    prep5.setString(3, formula);
    prep5.setString(4, "");
    prep5.setString(5, "");
    prep5.addBatch();

    //Load Parameter data from reaction
    ListOfParameters params = kl.getListOfParameters();
    for(int x = 0; x &lt; params.size(); x++)
    {
      Parameter p = params.get(x);
      System.out.println(p.getId());
      prep6.setString(2, p.getId());
      prep6.setString(3, "");
      prep6.setString(4, "reaction");
      prep6.setString(5, klId);
      prep6.setString(6, p.getId());
      prep6.setString(6, "");
      String stValue = Double.toString(p.getValue()); 
      prep6.setString(7, "");
      prep6.setString(8, stValue);
      prep6.setString(9, "");
      prep6.setString(10, "");
      prep6.addBatch();
    }
  }

  //Load arbitary parameters from model
  ListOfParameters params = m.getListOfParameters();
  for(int x = 0; x &lt; params.size(); x++)
  {
    Parameter p = params.get(x);
    System.out.println(p.getId());
    prep6.setString(2, p.getId());
    prep6.setString(3, "");
    prep6.setString(4, "arbitraryVariable");
    prep6.setString(5, "");
    prep6.setString(6, p.getId());
    prep6.setString(6, "");
    String stValue = Double.toString(p.getValue()); 
    prep6.setString(7, "");
    prep6.setString(8, stValue);
    prep6.setString(9, "");
    prep6.setString(10, "");
    prep6.addBatch();
  }

  conn.setAutoCommit(false);
  prep1.executeBatch();
  prep.executeBatch();
  prep2.executeBatch();
  prep4.executeBatch();
  prep5.executeBatch();
  prep6.executeBatch();
  conn.setAutoCommit(true);
  conn.close();

} catch (ClassNotFoundException e)
{
  e.printStackTrace();
} catch (SQLException e)
{
  e.printStackTrace();
}</script>
  <dependencies />
  <classLoaderSharing>system</classLoaderSharing>
  <localDependencies>
    <string>sqlitejdbc-v053.jar</string>
    <string>libsbmlj.jar</string>
  </localDependencies>
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>sbml</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>databaseURL</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="sbml" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>userId</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>dada</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>createSimulationResource</name><inputPorts><port><name>userId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="userId" to="userId" /></inputMap><outputMap><map from="resourceId" to="resourceId" /></outputMap><configBean encoding="dataflow"><dataflow ref="e183c613-071d-4bbc-8642-03bb468f5cc4" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>sendModel</name><inputPorts><port><name>resourceId</name><depth>0</depth></port><port><name>userId</name><depth>0</depth></port><port><name>sbml</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /><map from="sbml" to="sbml" /></inputMap><outputMap /><configBean encoding="dataflow"><dataflow ref="88db33cd-8163-4c9a-80bc-5cc45b3bf04b" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="resourceId" depth="0" /><port name="userId" depth="0" /><port name="sbml" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>sendExptalDataSbrml</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port><port><name>sbrml</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="sbrml" to="sbrml" /><map from="userId" to="userId" /></inputMap><outputMap /><configBean encoding="dataflow"><dataflow ref="81346da0-b23e-4fc1-bee6-9f9149fea5df" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /><port name="sbrml" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>queryKRDB</name><inputPorts /><outputPorts><port><name>new_sbrml</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap /><outputMap><map from="new_sbrml" to="new_sbrml" /></outputMap><configBean encoding="dataflow"><dataflow ref="3f53a7c6-355a-4b91-8cfb-5880caaac5f4" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>checkData</name><inputPorts><port><name>sbrml</name><depth>0</depth></port><port><name>sbml</name><depth>0</depth></port></inputPorts><outputPorts><port><name>newSbrml</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="sbrml" to="sbrml" /><map from="sbml" to="sbml" /></inputMap><outputMap><map from="newSbrml" to="newSbrml" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import org.sbml.libsbml.*;

//To hold model species ids
spIds = new ArrayList();

//For output
sb = new StringBuffer();
sb2 = new StringBuffer();

//Extract species ids and names from sbml model
SBMLDocument doc = libsbml.readSBMLFromString(sbml);
Model m = doc.getModel();
ListOfSpecies splist = m.getListOfSpecies();
sb.append("Species in SBML model\n");
for(int i = 0; i &lt; splist.size(); i++)
{
  Species s = splist.get(i);
  sb.append(s.getId() + "\t");
  spIds.add(s.getId());
  sb.append(s.getName() + "\n");
} 
//String out = sb.toString();

//Extract species ids from SBRML file
sb.append("Species in SBRML file\n");
String[] lines = sbrml.split("\n");
for(int x = 0; x &lt; lines.length; x ++)
{
  //Check
  String line = lines[x];
  if(line.contains("compositeValue indexValue"))
  {
    if(line.contains("CHEBI"))
    {
      x = x + 2;
      continue;
    }
    else
    {
      int start = line.indexOf("\"");
      int end = line.lastIndexOf("\"");
      String id = line.substring(start + 1, end);
      if(!spIds.contains(id))
      {
        x = x + 2;
        continue;
      }
      else
      {
	sb2.append(line + "\n");
        continue;
      }
    }
  }
  sb2.append(line + "\n");
}

String out = sb.toString();
String newSbrml = sb2.toString();</script>
  <dependencies />
  <classLoaderSharing>system</classLoaderSharing>
  <localDependencies>
    <string>libsbmlj.jar</string>
    <string>libsbml_helpers.jar</string>
  </localDependencies>
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>sbml</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>sbrml</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>out</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>newSbrml</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="sbrml" depth="0" /><port name="sbml" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parameterEditor</name><inputPorts><port><name>resourceId</name><depth>0</depth></port><port><name>userId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>setFitItemsAndMethodXML</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap><map from="setFitItemsAndMethodXML" to="setFitItemsAndMethodXML" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.AbstractTableModel;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Container;
import java.io.*;
import java.util.Hashtable;
import java.util.ArrayList;
import java.sql.*;


class Parameter
{
  String name;
  double value;
  String type;
  String modelId;
  String parameterId;

  Parameter(String name, String value, String type, String modelId, String parameterId)
  {
    this.name = name;
    this.value = Double.parseDouble(value);
    this.type = type; 
    this.modelId = modelId; 
    this.parameterId = parameterId;
  }

  String getName()
  {
    return name;
  }

  String setName(String name)
  {
    this.name = name;
  }

  double getValue()
  {
    return value;
  }

  String setValue(String value)
  {
    this.value = Double.parseDouble(value);
  }

  String getType()
  {
    return type;
  }

  String setType(String type)
  {
    this.type = type;
  }

  String getModelId()
  {
    return this.modelId;
  }

  String setModelId(String modelId)
  {
    this.modelId = modelId;
  }

  String getParameterId()
  {
    return parameterId;
  }

  String setParameterId(String parameterId)
  {
    this.parameterId = parameterId;
  }
}

/**
 * New table model for storing parameter data
 */
class MyTableModel extends AbstractTableModel
{
  //Set up data for table
  String[] colnames = {"Parameter name", "Value", "Lower bound", "Upper bound", "Affected experiment", "Object type", "Model Id"};
  int numrows = params.size();
  int numcols = 7;
  data = new String[numrows][numcols];
  //Iterate thru parameters
  for(int i = 0; i &lt; params.size(); i++)
  {
    p = params.get(i);
    data[i][0] = p.getName();
    double value = p.getValue();
    data[i][1] = Double.toString(value);
    if(p.getType().equals("arbitraryVariable"))
    {
      //Lower bound value
      data[i][2] = Double.toString(value / 4);
      //Upper bound value
      data[i][3] = Double.toString(value * 4);
      data[i][5] = "arbitraryVariable";
    }
    else if(p.getType().equals("reaction"))
    {
      //Lower bound value
      data[i][2] = Double.toString(value / 1000000);
      //Upper bound value
      data[i][3] = Double.toString(value * 1000000);
      data[i][5] = "reaction";
    }
    //Affected experiment
    data[i][4] = "all";
    //ModelId
    data[i][6] = p.getModelId();
  }

  public int getColumnCount()
  {
    return colnames.length;
  }

  public int getRowCount()
  {
    return data.length;
  }

  public String getColumnName(int col)
  {
    return colnames[col];
  }

  public Object getValueAt(int row, int col)
  {
    return data[row][col];
  }

  /*
   * JTable uses this method to determine the default renderer/
   * editor for each cell.  If we didn't implement this method,
   * then the last column would contain text ("true"/"false"),
   * rather than a check box.
   */
  public Class getColumnClass(int c)
  {
    return getValueAt(0, c).getClass();
  }

  /*
   * Don't need to implement this method unless your table's
   * editable.
   */
  public boolean isCellEditable(int row, int col)
  {
    //Note that the data/cell address is constant,
    //no matter where the cell appears onscreen.
    if (col &lt; 2)
      return false;
    else
      return true;
  }

  /*
   * Don't need to implement this method unless your table's
   * data can change.
   */
  public void setValueAt(Object value, int row, int col)
  {
    data[row][col] = value;
    fireTableCellUpdated(row, col);
  }

  public String[][] getData()
  {
    return data;
  }
}

String DATABASE_NAME = "taverna_sbml";
String databaseURL = "jdbc:sqlite:" + DATABASE_NAME + ".db";

//Get parameter data from database
params = new ArrayList();
try
{
  driver = "org.sqlite.JDBC";
  Class.forName(driver);
  Connection conn = DriverManager.getConnection(databaseURL);
  Statement stat = conn.createStatement();
  
  sql = "select name, stValue, type, kineticLawId from parameter;";
  ResultSet rs = stat.executeQuery(sql);
  
  while (rs.next())
  {
    name = rs.getString(1);
    stValue = rs.getString(2);
    type = rs.getString(3);
    kineticLawId = rs.getString(4);
    System.out.println(kineticLawId);
    if(kineticLawId.equals(""))
      modelId = name;
    else
      modelId = kineticLawId.replaceFirst("kl_", "");

    if(type.equals("reaction"))    
      parameterId = name;
    else
      parameterId = "";
    
    p = new Parameter(name, stValue, type, modelId, parameterId);
    params.add(p);
  }
  rs.close();
  conn.close();

}
catch (ClassNotFoundException e)
{
  e.printStackTrace();
}
catch (SQLException e)
{
  e.printStackTrace();
}

/**
 * Class representing the SetFitItemsAndMethod XML document
 */

class Document
{
  String contents;

  Document()
  {
    this.contents = "";
  }

  synchronized void setContents(String data)
  {
    this.contents = data;
    notifyAll();
  }

  synchronized String getContents()
  {
    while (contents.equals(""))
    {
      try
      {
        wait();
      }
      catch (InterruptedException e)
      {
        e.printStackTrace();
      }
    }
    return contents;
  }
}


/**
 * Class representing the GUI for selecting the values to be
 * processed by the remainder of the workflow.
 */
MultipleSelectWorkerGUI(Document doc)
{
  JTable table;
  DefaultTableModel tablemodel;
  JSplitPane splitPane;
  JTextArea expCondition;
  JList list;
  JButton submitButton;

  Document doc;
  
  void init()
  {
    super.frame = new JFrame("Select data for downstream analysis");
    super.frame.setLocationRelativeTo(null); //Place window in centre
    pane = new JPanel(); 
    super.frame.getContentPane().add(pane); 
    pane.setLayout(new BoxLayout(pane, BoxLayout.PAGE_AXIS));
    this.doc = doc;

    table = new JTable(new MyTableModel());

    //Detect row clicked
    rowListener = new ListSelectionListener()
    {
      void valueChanged(ListSelectionEvent event)
      {
        if (event.getValueIsAdjusting())
        {
          return;
        }
        //Selected row changed, do something...
        showReactionInstIds();
      }
    };

    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    DefaultListSelectionModel lst = table.getSelectionModel();
    lst.addListSelectionListener(rowListener);

    JScrollPane tableScrollPane = new JScrollPane(table);
    pane.add(tableScrollPane);

    //Create a panel
    JPanel buttonPane = new JPanel();
    submitButton = new JButton("Submit");
    submitButton.setActionCommand("submit");
    submitButton.addActionListener(this);
    submitButton.setEnabled(false);
    buttonPane.add(submitButton);
    buttonPane.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
    pane.add(submitButton);

    //frame.setSize(800,500);
    frame.setVisible(true); 
    frame.pack(); 
  }

  //This method is called only if there is a valid selection
  //and if the submit button is clicked
  void actionPerformed(ActionEvent e)
  {
    ArrayList al = new ArrayList();

    //New
    String command = e.getActionCommand();

    tmodel = table.getModel();
    data = tmodel.getData();

    if("submit".equals(command))
    {
      //Generate setFitItem XML document
      StringBuffer sb = new StringBuffer();
      //Set userId and resourceId
      sb.append("&lt;SetFitItemsAndMethod xmlns=\"http://parameterestimationws.services.copasiws.copasi.org/types\"&gt;\n");
      sb.append("\t&lt;resourceId xmlns=\"\"&gt;" + resourceId + "&lt;/resourceId&gt;\n");
      sb.append("\t&lt;userId xmlns=\"\"&gt;" + userId + "&lt;/userId&gt;\n");
      sb.append("\t&lt;fitItemsAndMethod xmlns=\"\"&gt;\n");

      for(int i = 0; i &lt; data.length; i++)
      {
        sb.append("\t\t&lt;itemToFit ");
        sb.append("lowerBound=\"" + data[i][2] + "\" ");
        sb.append("upperBound=\"" + data[i][3] + "\" ");
        sb.append("startValue=\"" + data[i][1] + "\" ");
        sb.append("modelObjectType=\"" + data[i][5] + "\"&gt;\n");
         
        if(data[i][5].equals("reaction"))
        {
          sb.append("\t\t\t&lt;reaction quantityType=\"parameterValue\"&gt;\n");
          sb.append("\t\t\t\t&lt;modelId&gt;" + data[i][6] + "&lt;/modelId&gt;\n");
          sb.append("\t\t\t\t&lt;parameterID&gt;" + data[i][0] + "&lt;/parameterID&gt;\n");
          sb.append("\t\t\t&lt;/reaction&gt;\n");
          sb.append("\t\t\t&lt;affectedExperiment&gt;" + data[i][4] + "&lt;/affectedExperiment&gt;\n");
          sb.append("\t\t&lt;/itemToFit&gt;\n");
        }

        if(data[i][5].equals("arbitraryVariable"))
        {
          sb.append("\t\t\t&lt;arbitraryVariable quantityType=\"initialValue\"&gt;\n");
          sb.append("\t\t\t\t&lt;modelId&gt;" + data[i][0] + "&lt;/modelId&gt;\n");
          sb.append("\t\t\t&lt;/arbitraryVariable&gt;\n");
          sb.append("\t\t\t&lt;affectedExperiment&gt;" + data[i][4] + "&lt;/affectedExperiment&gt;\n");
          sb.append("\t\t&lt;/itemToFit&gt;\n");
        }
      }

      sb.append("\t\t&lt;method methodName=\"Levenberg-Marquardt\"&gt;\n");
      sb.append("\t\t\t&lt;levenbergMarquardt&gt;\n");
      sb.append("\t\t\t\t&lt;iterationLimit&gt;200&lt;/iterationLimit&gt;\n");
      sb.append("\t\t\t\t&lt;tolerance&gt;1.0E-6&lt;/tolerance&gt;\n");
      sb.append("\t\t\t&lt;/levenbergMarquardt&gt;\n");
      sb.append("\t\t&lt;/method&gt;\n");

/*
      sb.append("\t\t&lt;method methodName=\"Genetic Algorithm\"&gt;\n");
      sb.append("\t\t\t&lt;geneticAlgorithm&gt;\n");
      sb.append("\t\t\t\t&lt;numberOfGenerations&gt;200&lt;/numberOfGenerations&gt;\n");
      sb.append("\t\t\t\t&lt;populationSize&gt;20&lt;/populationSize&gt;\n");
      sb.append("\t\t\t\t&lt;randomNumberGenerator&gt;1&lt;/randomNumberGenerator&gt;\n");
      sb.append("\t\t\t\t&lt;seed&gt;0&lt;/seed&gt;\n");
      sb.append("\t\t\t&lt;/geneticAlgorithm&gt;\n");
      sb.append("\t\t&lt;/method&gt;\n");
*/
      sb.append("\t&lt;/fitItemsAndMethod&gt;\n");
      sb.append("&lt;/SetFitItemsAndMethod&gt;\n");

      this.document.setContents(sb.toString());
      super.frame.dispose();         
    }
  }

  void showReactionInstIds()
  {
    for (int c : table.getSelectedRows())
    {
      rowSelected = "Row selected: " + c;
      row = c;
      tmodel = table.getModel();
      System.out.println("New row clicked");
      submitButton.setEnabled(true);
    }
  }

  init(); 
  return this; 
}

/**
 * Wrapper for MultipleSelectWorkerGUI
 */ 
class WorkerWrapper extends Thread
{
  Document document; 

  WorkerWrapper(Document document)
  {
    this.document = document;
  }

  void run()
  {
    msw = MultipleSelectWorkerGUI(this.document);
  }
}

document = new Document();
wrapper = new WorkerWrapper(document);
wrapper.start();
String setFitItemsAndMethodXML = document.getContents();</script>
  <dependencies />
  <classLoaderSharing>system</classLoaderSharing>
  <localDependencies>
    <string>libsbmlj.jar</string>
    <string>sqlitejdbc-v053.jar</string>
  </localDependencies>
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>setFitItemsAndMethodXML</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="resourceId" depth="0" /><port name="userId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>setFitItemsAndMethod</name><inputPorts><port><name>fitItemsAndMethodXML</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="fitItemsAndMethodXML" to="fitItemsAndMethodXML" /></inputMap><outputMap /><configBean encoding="dataflow"><dataflow ref="b905e37b-cb0e-4243-be79-955d992b74a6" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fitItemsAndMethodXML" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>startSimulator</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap /><configBean encoding="dataflow"><dataflow ref="fe4abc39-9799-4b51-be6b-b6f881485e21" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>pollStatus</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap /><configBean encoding="dataflow"><dataflow ref="b346ca20-0fc3-45e5-9e8b-61a34094f81f" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Loop</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.LoopConfiguration xmlns="">
  <conditionXML>&lt;activity xmlns="http://taverna.sf.net/2008/xml/t2flow"&gt;&lt;raven&gt;&lt;group&gt;net.sf.taverna.t2.activities&lt;/group&gt;&lt;artifact&gt;beanshell-activity&lt;/artifact&gt;&lt;version&gt;1.0&lt;/version&gt;&lt;/raven&gt;&lt;class&gt;net.sf.taverna.t2.activities.beanshell.BeanshellActivity&lt;/class&gt;&lt;inputMap /&gt;&lt;outputMap /&gt;&lt;configBean encoding="xstream"&gt;&lt;net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns=""&gt;&#xD;
  &lt;script&gt;loop = "" + ! status.matches("COMPLETED");&#xD;
if ("true".matches(loop)) {&#xD;
   Thread.sleep(30000);&#xD;
}&lt;/script&gt;&#xD;
  &lt;dependencies /&gt;&#xD;
  &lt;classLoaderSharing&gt;workflow&lt;/classLoaderSharing&gt;&#xD;
  &lt;localDependencies /&gt;&#xD;
  &lt;artifactDependencies /&gt;&#xD;
  &lt;inputs&gt;&#xD;
    &lt;net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean&gt;&#xD;
      &lt;translatedElementType&gt;java.lang.String&lt;/translatedElementType&gt;&#xD;
      &lt;allowsLiteralValues&gt;true&lt;/allowsLiteralValues&gt;&#xD;
      &lt;name&gt;status&lt;/name&gt;&#xD;
      &lt;depth&gt;0&lt;/depth&gt;&#xD;
    &lt;/net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean&gt;&#xD;
  &lt;/inputs&gt;&#xD;
  &lt;outputs&gt;&#xD;
    &lt;net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean&gt;&#xD;
      &lt;granularDepth&gt;0&lt;/granularDepth&gt;&#xD;
      &lt;name&gt;loop&lt;/name&gt;&#xD;
      &lt;depth&gt;0&lt;/depth&gt;&#xD;
    &lt;/net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean&gt;&#xD;
  &lt;/outputs&gt;&#xD;
&lt;/net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean&gt;&lt;/configBean&gt;&lt;annotations /&gt;&lt;/activity&gt;</conditionXML>
  <runFirst>true</runFirst>
  <properties>
    <property name="compareValue" value="COMPLETED" />
    <property name="comparePort" value="status" />
    <property name="delay" value="30.0" />
    <property name="comparison" value="Matches" />
    <property name="isFeedBack" value="false" />
  </properties>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.LoopConfiguration></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getResults</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>result</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap><map from="result" to="result" /></outputMap><configBean encoding="dataflow"><dataflow ref="3440ba43-2fff-4517-9161-d02044134da9" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>releaseResources</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap /><configBean encoding="dataflow"><dataflow ref="8db4f79c-7d8c-4b88-9cbc-fade44a1ce59" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions><condition control="startSimulator" target="pollStatus" /><condition control="getResults" target="releaseResources" /><condition control="setFitItemsAndMethod" target="startSimulator" /><condition control="createSysbioDataSource" target="parameterEditor" /><condition control="sendExptalDataSbrml" target="setFitItemsAndMethod" /><condition control="pollStatus" target="getResults" /><condition control="sendModel" target="sendExptalDataSbrml" /></conditions><datalinks><datalink><sink type="processor"><processor>createSysbioDataSource</processor><port>sbml</port></sink><source type="dataflow"><port>sbml</port></source></datalink><datalink><sink type="processor"><processor>createSimulationResource</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>sendModel</processor><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource</processor><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>sendModel</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>sendModel</processor><port>sbml</port></sink><source type="dataflow"><port>sbml</port></source></datalink><datalink><sink type="processor"><processor>sendExptalDataSbrml</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>sendExptalDataSbrml</processor><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource</processor><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>sendExptalDataSbrml</processor><port>sbrml</port></sink><source type="processor"><processor>checkData</processor><port>newSbrml</port></source></datalink><datalink><sink type="processor"><processor>checkData</processor><port>sbrml</port></sink><source type="processor"><processor>queryKRDB</processor><port>new_sbrml</port></source></datalink><datalink><sink type="processor"><processor>checkData</processor><port>sbml</port></sink><source type="dataflow"><port>sbml</port></source></datalink><datalink><sink type="processor"><processor>parameterEditor</processor><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource</processor><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>parameterEditor</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>setFitItemsAndMethod</processor><port>fitItemsAndMethodXML</port></sink><source type="processor"><processor>parameterEditor</processor><port>setFitItemsAndMethodXML</port></source></datalink><datalink><sink type="processor"><processor>startSimulator</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>startSimulator</processor><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource</processor><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>pollStatus</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>pollStatus</processor><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource</processor><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>getResults</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>getResults</processor><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource</processor><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>releaseResources</processor><port>userId</port></sink><source type="processor"><processor>userId</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>releaseResources</processor><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource</processor><port>resourceId</port></source></datalink><datalink><sink type="dataflow"><port>optimised_sbml</port></sink><source type="processor"><processor>getResults</processor><port>result</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>Peter Li</text>
      </annotationBean>
      <date>2010-03-26 13:05:24.552 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>SBML model optimisation</text>
      </annotationBean>
      <date>2010-03-26 13:05:46.342 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow modifies reaction kinetic parameters against experimental data stored in the MCISB key results database </text>
      </annotationBean>
      <date>2010-03-26 13:06:52.731 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></dataflow><dataflow id="3f53a7c6-355a-4b91-8cfb-5880caaac5f4" role="nested"><name>Workflow1</name><inputPorts /><outputPorts><port><name>new_sbrml</name><annotations /></port></outputPorts><processors><processor><name>exptTitle</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>Glycolysis Metabolomics Results</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>exptDate</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>2009-09-16</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>createCountUrl</name><inputPorts><port><name>date</name><depth>0</depth></port><port><name>title</name><depth>0</depth></port></inputPorts><outputPorts><port><name>url</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="title" to="title" /><map from="date" to="date" /></inputMap><outputMap><map from="url" to="url" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>if(title.contains(" "))
  title.replaceAll(" ", "%20");


//String url = "http://tdb.mc.manchester.ac.uk:8080/exist/rest?_query=for%20$a%20in%20collection(\"mcisbkrdb\")%20where%20$a/Experiment/Title=\"" + title + "\"%20and%20$a/Experiment/StartDate=xs:date(\"" + date + "\")%20return%20(for%20$b%20in%20$a//NumericalResult%20return%3Cresult%3E%20{$b//MeasuredItem/text()},{$b//Measurement/text()}%3C/result%3E)";

String url = "http://tdb.mc.manchester.ac.uk:8080/exist/rest?_query=for%20$a%20in%20collection(\"mcisbkrdb\")%20where%20$a/Experiment/Title=\"" + title + "\"%20and%20$a/Experiment/StartDate=xs:date(\"" + date + "\")%20return%20%3Cresult%3E{count($a//NumericalResult)}%3C/result%3E";</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>date</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>title</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>url</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="date" depth="0" /><port name="title" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getCount</name><inputPorts><port><name>url</name><depth>0</depth></port></inputPorts><outputPorts><port><name>contents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="url" to="url" /></inputMap><outputMap><map from="contents" to="contents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
  <localworkerName>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</localworkerName>
  <script>URL inputURL = null;
if (base != void) {
  inputURL = new URL(new URL(base), url);
}
else {
  inputURL = new URL(url);
}
URLConnection con = inputURL.openConnection();
InputStream in = con.getInputStream();

InputStreamReader isr = new InputStreamReader(in);
Reader inReader = new BufferedReader(isr);

StringBuffer buf = new StringBuffer();
int ch;
while ((ch = inReader.read()) &gt; -1) {
  buf.append((char)ch);
}
inReader.close();
contents = buf.toString();


//String NEWLINE = System.getProperty("line.separator");
//
//URL inputURL = null;
//if (base != void) {
//	inputURL = new URL(new URL(base), url);
//} else {
//	inputURL = new URL(url);
//}
//StringBuffer result = new StringBuffer();
//BufferedReader reader = new BufferedReader(new InputStreamReader(inputURL.openStream()));
//String line = null;
//while ((line = reader.readLine()) != null) {
//	result.append(line);
//	result.append(NEWLINE);
//}
//
//contents = result.toString();
</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>url</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/x-taverna-web-url'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>base</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/x-taverna-web-url'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>contents</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain,text/html'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="url" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>cleanCountData</name><inputPorts><port><name>inStr</name><depth>0</depth></port></inputPorts><outputPorts><port><name>outStr</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="inStr" to="inStr" /></inputMap><outputMap><map from="outStr" to="outStr" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>String[] lines = inStr.split("\n");
StringBuffer sb = new StringBuffer();
for(i = 1; i &lt; lines.length -1; i++)
{
  String str = lines[i];
  str = str.replaceAll("&lt;result&gt;", "");
  str = str.replaceAll("&lt;/result&gt;", "");
  sb.append(str.trim() + "\n");
}

String outStr = sb.toString();</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>inStr</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>outStr</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="inStr" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>createQueryUrl</name><inputPorts><port><name>date</name><depth>0</depth></port><port><name>title</name><depth>0</depth></port><port><name>count</name><depth>0</depth></port></inputPorts><outputPorts><port><name>url</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="title" to="title" /><map from="count" to="count" /><map from="date" to="date" /></inputMap><outputMap><map from="url" to="url" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>if(title.contains(" "))
  title.replaceAll(" ", "%20");


String url = "http://tdb.mc.manchester.ac.uk:8080/exist/rest?_query=for%20$a%20in%20collection(\"mcisbkrdb\")%20where%20$a/Experiment/Title=\"" + title + "\"%20and%20$a/Experiment/StartDate=xs:date(\"" + date + "\")%20return%20(for%20$b%20in%20$a//NumericalResult%20return%3Cresult%3E%20{$b//MeasuredItem/text()},{$b//Measurement/text()}%3C/result%3E)&amp;_howmany=" + count;

//String url = "http://tdb.mc.manchester.ac.uk:8080/exist/rest?_query=for%20$a%20in%20collection(\"mcisbkrdb\")%20where%20$a/Experiment/Title=\"" + title + "\"%20and%20$a/Experiment/StartDate=xs:date(\"" + date + "\")%20return%20%3Cresult%3E{count($a//NumericalResult)}%3C/result%3E";</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>count</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>date</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>title</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>url</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="date" depth="0" /><port name="title" depth="0" /><port name="count" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getData</name><inputPorts><port><name>url</name><depth>0</depth></port></inputPorts><outputPorts><port><name>contents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="url" to="url" /></inputMap><outputMap><map from="contents" to="contents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
  <localworkerName>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</localworkerName>
  <script>URL inputURL = null;
if (base != void) {
  inputURL = new URL(new URL(base), url);
}
else {
  inputURL = new URL(url);
}
URLConnection con = inputURL.openConnection();
InputStream in = con.getInputStream();

InputStreamReader isr = new InputStreamReader(in);
Reader inReader = new BufferedReader(isr);

StringBuffer buf = new StringBuffer();
int ch;
while ((ch = inReader.read()) &gt; -1) {
  buf.append((char)ch);
}
inReader.close();
contents = buf.toString();


//String NEWLINE = System.getProperty("line.separator");
//
//URL inputURL = null;
//if (base != void) {
//	inputURL = new URL(new URL(base), url);
//} else {
//	inputURL = new URL(url);
//}
//StringBuffer result = new StringBuffer();
//BufferedReader reader = new BufferedReader(new InputStreamReader(inputURL.openStream()));
//String line = null;
//while ((line = reader.readLine()) != null) {
//	result.append(line);
//	result.append(NEWLINE);
//}
//
//contents = result.toString();
</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>url</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/x-taverna-web-url'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>base</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/x-taverna-web-url'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>contents</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain,text/html'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="url" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>cleanData</name><inputPorts><port><name>inStr</name><depth>0</depth></port></inputPorts><outputPorts><port><name>outStr</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="inStr" to="inStr" /></inputMap><outputMap><map from="outStr" to="outStr" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>String[] lines = inStr.split("\n");
StringBuffer sb = new StringBuffer();
for(i = 1; i &lt; lines.length -1; i++)
{
  String str = lines[i];
  str = str.replaceAll("&lt;result&gt;", "");
  str = str.replaceAll("&lt;/result&gt;", "");
  sb.append(str.trim() + "\n");
}

String outStr = sb.toString();</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>inStr</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>outStr</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="inStr" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>convert2SBRML</name><inputPorts><port><name>data</name><depth>0</depth></port></inputPorts><outputPorts><port><name>convertReturn</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="data" to="data" /></inputMap><outputMap><map from="convertReturn" to="convertReturn" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://dbk-ed.mib.man.ac.uk:8080/KeyResults2SBRML/services/KeyResults2SBRML?wsdl</wsdl>
  <operation>convert</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="data" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>extractChebiIds</name><inputPorts><port><name>sbrml</name><depth>0</depth></port></inputPorts><outputPorts><port><name>chebiIds</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="sbrml" to="sbrml" /></inputMap><outputMap><map from="chebiIds" to="chebiIds" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.util.regex.Pattern;
import java.util.regex.Matcher;

sb = new StringBuffer();
p = "CHEBI:[0-9]+";

Pattern pattern = Pattern.compile(p);
Matcher matcher = pattern.matcher(sbrml);
while (matcher.find())
{
  sb.append("urn:miriam:obo.chebi:" + matcher.group() + ",");
}
String out = sb.toString();
//Clean up
if(out.endsWith(","))
  out = out.substring(0, out.length()-1);

chebiIds = out.split(",");</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>sbrml</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>1</granularDepth>
      <name>chebiIds</name>
      <depth>1</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="sbrml" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getSpeciesIdByURI</name><inputPorts><port><name>uri</name><depth>0</depth></port></inputPorts><outputPorts><port><name>getSpeciesIdByURIReturn</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="uri" to="uri" /></inputMap><outputMap><map from="getSpeciesIdByURIReturn" to="getSpeciesIdByURIReturn" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://dbk-ed.mib.man.ac.uk:8080/YeastMetabolicNetwork/services/YeastMetabolicNetwork?wsdl</wsdl>
  <operation>getSpeciesIdByURI</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="uri" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>flatten</name><inputPorts><port><name>inputlist</name><depth>2</depth></port></inputPorts><outputPorts><port><name>outputlist</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="inputlist" to="inputlist" /></inputMap><outputMap><map from="outputlist" to="outputlist" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
  <localworkerName>org.embl.ebi.escience.scuflworkers.java.FlattenList</localworkerName>
  <script>flatten(inputs, outputs, depth) {
	for (i = inputs.iterator(); i.hasNext();) {
	    element = i.next();
		if (element instanceof Collection &amp;&amp; depth &gt; 0) {
			flatten(element, outputs, depth - 1);
		} else {
			outputs.add(element);
		}
	}
}

outputlist = new ArrayList();

flatten(inputlist, outputlist, 1);</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>[B</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>inputlist</name>
      <depth>2</depth>
      <mimeTypes>
        <string>l(l(''))</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>1</granularDepth>
      <name>outputlist</name>
      <depth>1</depth>
      <mimeTypes>
        <string>l('')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="inputlist" depth="2" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>merge</name><inputPorts><port><name>speciesIds</name><depth>1</depth></port><port><name>chebiIds</name><depth>1</depth></port><port><name>sbrml</name><depth>0</depth></port></inputPorts><outputPorts><port><name>sbrml_out</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="speciesIds" to="speciesIds" /><map from="sbrml" to="sbrml" /><map from="chebiIds" to="chebiIds" /></inputMap><outputMap><map from="sbrml_out" to="sbrml_out" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>//Output
String sbrml_out = "";

//Check
if(speciesIds.size() != chebiIds.size())
  System.out.println("Number of speciesIds does not equal number of chebi ids!");

//Create chebiId and species id mapping
ht = new Hashtable();
for(int i = 0; i &lt; chebiIds.size(); i++)
{
  String chebiId = chebiIds.get(i);
  chebiId = chebiId.replaceAll("urn:miriam:obo.chebi:", "");
  ht.put(chebiId, speciesIds.get(i));
}

//Replace chebi ids with species ids in SBRML file
Iterator it = ht.keys();
while(it.hasNext())
{
  String chebiId = it.next();
  if(ht.get(chebiId).equals(""))
    continue;
  else
    sbrml = sbrml.replaceAll(chebiId, ht.get(chebiId));
}

sbrml_out = sbrml;</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>speciesIds</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>chebiIds</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>sbrml</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>sbrml_out</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="speciesIds" depth="1" /><port name="chebiIds" depth="1" /><port name="sbrml" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>createCountUrl</processor><port>date</port></sink><source type="processor"><processor>exptDate</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>createCountUrl</processor><port>title</port></sink><source type="processor"><processor>exptTitle</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>getCount</processor><port>url</port></sink><source type="processor"><processor>createCountUrl</processor><port>url</port></source></datalink><datalink><sink type="processor"><processor>cleanCountData</processor><port>inStr</port></sink><source type="processor"><processor>getCount</processor><port>contents</port></source></datalink><datalink><sink type="processor"><processor>createQueryUrl</processor><port>date</port></sink><source type="processor"><processor>exptDate</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>createQueryUrl</processor><port>title</port></sink><source type="processor"><processor>exptTitle</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>createQueryUrl</processor><port>count</port></sink><source type="processor"><processor>cleanCountData</processor><port>outStr</port></source></datalink><datalink><sink type="processor"><processor>getData</processor><port>url</port></sink><source type="processor"><processor>createQueryUrl</processor><port>url</port></source></datalink><datalink><sink type="processor"><processor>cleanData</processor><port>inStr</port></sink><source type="processor"><processor>getData</processor><port>contents</port></source></datalink><datalink><sink type="processor"><processor>convert2SBRML</processor><port>data</port></sink><source type="processor"><processor>cleanData</processor><port>outStr</port></source></datalink><datalink><sink type="processor"><processor>extractChebiIds</processor><port>sbrml</port></sink><source type="processor"><processor>convert2SBRML</processor><port>convertReturn</port></source></datalink><datalink><sink type="processor"><processor>getSpeciesIdByURI</processor><port>uri</port></sink><source type="processor"><processor>extractChebiIds</processor><port>chebiIds</port></source></datalink><datalink><sink type="processor"><processor>flatten</processor><port>inputlist</port></sink><source type="processor"><processor>getSpeciesIdByURI</processor><port>getSpeciesIdByURIReturn</port></source></datalink><datalink><sink type="processor"><processor>merge</processor><port>speciesIds</port></sink><source type="processor"><processor>flatten</processor><port>outputlist</port></source></datalink><datalink><sink type="processor"><processor>merge</processor><port>chebiIds</port></sink><source type="processor"><processor>extractChebiIds</processor><port>chebiIds</port></source></datalink><datalink><sink type="processor"><processor>merge</processor><port>sbrml</port></sink><source type="processor"><processor>convert2SBRML</processor><port>convertReturn</port></source></datalink><datalink><sink type="dataflow"><port>new_sbrml</port></sink><source type="processor"><processor>merge</processor><port>sbrml_out</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="81346da0-b23e-4fc1-bee6-9f9149fea5df" role="nested"><name>Workflow8</name><inputPorts><port><name>sbrml</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>userId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>status</name><annotations /></port></outputPorts><processors><processor><name>sendExperimentalDataInSBRML</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>sendExperimentalDataInSBRML</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>sendExperimentalDataInSBRML_Parameters</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>sbrml</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="sbrml" to="sbrml" /><map from="userId" to="userId" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="SendExperimentalDataInSBRML" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}SendExperimentalDataInSBRML"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="resourceId" qname="&amp;gt;SendExperimentalDataInSBRML&amp;gt;resourceId" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="&amp;gt;SendExperimentalDataInSBRML&amp;gt;userId" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="sbrml" qname="&amp;gt;SendExperimentalDataInSBRML&amp;gt;sbrml" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>sbrml</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="sbrml" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>sendExperimentalDataInSBRML_Parameters_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>status</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="status" to="status" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="SendExperimentalDataInSBRMLResponse" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}SendExperimentalDataInSBRMLResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="&amp;gt;SendExperimentalDataInSBRMLResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>status</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>sendExperimentalDataInSBRML</processor><port>Parameters</port></sink><source type="processor"><processor>sendExperimentalDataInSBRML_Parameters</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>sendExperimentalDataInSBRML_Parameters</processor><port>userId</port></sink><source type="dataflow"><port>userId</port></source></datalink><datalink><sink type="processor"><processor>sendExperimentalDataInSBRML_Parameters</processor><port>sbrml</port></sink><source type="dataflow"><port>sbrml</port></source></datalink><datalink><sink type="processor"><processor>sendExperimentalDataInSBRML_Parameters</processor><port>resourceId</port></sink><source type="dataflow"><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>sendExperimentalDataInSBRML_Parameters_2</processor><port>input</port></sink><source type="processor"><processor>sendExperimentalDataInSBRML</processor><port>Parameters</port></source></datalink><datalink><sink type="dataflow"><port>status</port></sink><source type="processor"><processor>sendExperimentalDataInSBRML_Parameters_2</processor><port>status</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="88db33cd-8163-4c9a-80bc-5cc45b3bf04b" role="nested"><name>Workflow7</name><inputPorts><port><name>sbml</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>userId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>status</name><annotations /></port></outputPorts><processors><processor><name>sendModel</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>sendModel</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>sendModel_Parameters</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>sbml</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /><map from="sbml" to="sbml" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="SendModel" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}SendModel"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="resourceId" qname="&amp;gt;SendModel&amp;gt;resourceId" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="&amp;gt;SendModel&amp;gt;userId" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="copasiml" qname="&amp;gt;SendModel&amp;gt;copasiml" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="sbml" qname="&amp;gt;SendModel&amp;gt;sbml" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>copasiml</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>sbml</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="sbml" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>sendModel_Parameters_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>status</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="status" to="status" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="SendModelResponse" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}SendModelResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="&amp;gt;SendModelResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>status</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>sendModel</processor><port>Parameters</port></sink><source type="processor"><processor>sendModel_Parameters</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>sendModel_Parameters</processor><port>userId</port></sink><source type="dataflow"><port>userId</port></source></datalink><datalink><sink type="processor"><processor>sendModel_Parameters</processor><port>sbml</port></sink><source type="dataflow"><port>sbml</port></source></datalink><datalink><sink type="processor"><processor>sendModel_Parameters</processor><port>resourceId</port></sink><source type="dataflow"><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>sendModel_Parameters_2</processor><port>input</port></sink><source type="processor"><processor>sendModel</processor><port>Parameters</port></source></datalink><datalink><sink type="dataflow"><port>status</port></sink><source type="processor"><processor>sendModel_Parameters_2</processor><port>status</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="e183c613-071d-4bbc-8642-03bb468f5cc4" role="nested"><name>Workflow10</name><inputPorts><port><name>userId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>status</name><annotations /></port><port><name>resourceId</name><annotations /></port></outputPorts><processors><processor><name>createSimulationResource</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>createSimulationResource</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>createSimulationResource_Parameters</name><inputPorts><port><name>user</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="user" to="user" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="CreateSimulationResource" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}CreateSimulationResource"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="User" name="user" qname="&amp;gt;CreateSimulationResource&amp;gt;user"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="{http://copasi.org/copasiws/schemas}User&amp;gt;userId" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="password" qname="{http://copasi.org/copasiws/schemas}User&amp;gt;password" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>user</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="user" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Parameters_user</name><inputPorts><port><name>userId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="userId" to="userId" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="User" name="user" qname="&amp;gt;CreateSimulationResource&amp;gt;user"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="{http://copasi.org/copasiws/schemas}User&amp;gt;userId" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="password" qname="{http://copasi.org/copasiws/schemas}User&amp;gt;password" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>password</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>createSimulationResource_Parameters_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>status</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="resourceId" to="resourceId" /><map from="status" to="status" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="CreateSimulationResourceResponse" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}CreateSimulationResourceResponse"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="resourceId" qname="&amp;gt;CreateSimulationResourceResponse&amp;gt;resourceId" /&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="&amp;gt;CreateSimulationResourceResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>status</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>createSimulationResource</processor><port>Parameters</port></sink><source type="processor"><processor>createSimulationResource_Parameters</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>createSimulationResource_Parameters</processor><port>user</port></sink><source type="processor"><processor>Parameters_user</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>Parameters_user</processor><port>userId</port></sink><source type="dataflow"><port>userId</port></source></datalink><datalink><sink type="processor"><processor>createSimulationResource_Parameters_2</processor><port>input</port></sink><source type="processor"><processor>createSimulationResource</processor><port>Parameters</port></source></datalink><datalink><sink type="dataflow"><port>status</port></sink><source type="processor"><processor>createSimulationResource_Parameters_2</processor><port>status</port></source></datalink><datalink><sink type="dataflow"><port>resourceId</port></sink><source type="processor"><processor>createSimulationResource_Parameters_2</processor><port>resourceId</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="b905e37b-cb0e-4243-be79-955d992b74a6" role="nested"><name>Workflow9</name><inputPorts><port><name>fitItemsAndMethodXML</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>status</name><annotations /></port></outputPorts><processors><processor><name>setFitItemsAndMethod</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>setFitItemsAndMethod</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>setFitItemsAndMethod_Parameters</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>status</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="status" to="status" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="SetFitItemsAndMethodResponse" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}SetFitItemsAndMethodResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="&amp;gt;SetFitItemsAndMethodResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>status</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>setFitItemsAndMethod</processor><port>Parameters</port></sink><source type="dataflow"><port>fitItemsAndMethodXML</port></source></datalink><datalink><sink type="processor"><processor>setFitItemsAndMethod_Parameters</processor><port>input</port></sink><source type="processor"><processor>setFitItemsAndMethod</processor><port>Parameters</port></source></datalink><datalink><sink type="dataflow"><port>status</port></sink><source type="processor"><processor>setFitItemsAndMethod_Parameters</processor><port>status</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="b346ca20-0fc3-45e5-9e8b-61a34094f81f" role="nested"><name>Workflow16</name><inputPorts><port><name>userId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>status</name><annotations /></port></outputPorts><processors><processor><name>getSimulatorStatus</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>getSimulatorStatus</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getSimulatorStatus_Parameters</name><inputPorts><port><name>resourceId</name><depth>0</depth></port><port><name>userId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="GetSimulatorStatus" name="Parameters" qname="{http://copasi.org/copasiws/schemas}GetSimulatorStatus"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="{http://copasi.org/copasiws/schemas}&amp;gt;GetSimulatorStatus&amp;gt;userId" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="resourceId" qname="{http://copasi.org/copasiws/schemas}&amp;gt;GetSimulatorStatus&amp;gt;resourceId" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="resourceId" depth="0" /><port name="userId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getSimulatorStatus_Parameters_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>status</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="status" to="status" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="GetSimulatorStatusResponse" name="Parameters" qname="{http://copasi.org/copasiws/schemas}GetSimulatorStatusResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="{http://copasi.org/copasiws/schemas}&amp;gt;GetSimulatorStatusResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>status</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>2_status</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>code</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="code" to="code" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="{http://copasi.org/copasiws/schemas}&amp;gt;GetSimulatorStatusResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>code</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>message</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>getSimulatorStatus</processor><port>Parameters</port></sink><source type="processor"><processor>getSimulatorStatus_Parameters</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>getSimulatorStatus_Parameters</processor><port>resourceId</port></sink><source type="dataflow"><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>getSimulatorStatus_Parameters</processor><port>userId</port></sink><source type="dataflow"><port>userId</port></source></datalink><datalink><sink type="processor"><processor>getSimulatorStatus_Parameters_2</processor><port>input</port></sink><source type="processor"><processor>getSimulatorStatus</processor><port>Parameters</port></source></datalink><datalink><sink type="processor"><processor>2_status</processor><port>input</port></sink><source type="processor"><processor>getSimulatorStatus_Parameters_2</processor><port>status</port></source></datalink><datalink><sink type="dataflow"><port>status</port></sink><source type="processor"><processor>2_status</processor><port>code</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="8db4f79c-7d8c-4b88-9cbc-fade44a1ce59" role="nested"><name>Workflow10</name><inputPorts><port><name>userId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>message</name><annotations /></port><port><name>code</name><annotations /></port></outputPorts><processors><processor><name>deleteSimulationResource</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>deleteSimulationResource</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>deleteSimulationResource_Parameters</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="DeleteSimulationResource" name="Parameters" qname="{http://copasi.org/copasiws/schemas}DeleteSimulationResource"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="{http://copasi.org/copasiws/schemas}&amp;gt;DeleteSimulationResource&amp;gt;userId" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="resourceId" qname="{http://copasi.org/copasiws/schemas}&amp;gt;DeleteSimulationResource&amp;gt;resourceId" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>deleteSimulationResource_Parameters_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>status</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="status" to="status" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="DeleteSimulationResourceResponse" name="Parameters" qname="{http://copasi.org/copasiws/schemas}DeleteSimulationResourceResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="{http://copasi.org/copasiws/schemas}&amp;gt;DeleteSimulationResourceResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>status</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>2_status</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>message</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>code</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="message" to="message" /><map from="code" to="code" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="{http://copasi.org/copasiws/schemas}&amp;gt;DeleteSimulationResourceResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>code</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>message</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>deleteSimulationResource</processor><port>Parameters</port></sink><source type="processor"><processor>deleteSimulationResource_Parameters</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>deleteSimulationResource_Parameters</processor><port>userId</port></sink><source type="dataflow"><port>userId</port></source></datalink><datalink><sink type="processor"><processor>deleteSimulationResource_Parameters</processor><port>resourceId</port></sink><source type="dataflow"><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>deleteSimulationResource_Parameters_2</processor><port>input</port></sink><source type="processor"><processor>deleteSimulationResource</processor><port>Parameters</port></source></datalink><datalink><sink type="processor"><processor>2_status</processor><port>input</port></sink><source type="processor"><processor>deleteSimulationResource_Parameters_2</processor><port>status</port></source></datalink><datalink><sink type="dataflow"><port>message</port></sink><source type="processor"><processor>2_status</processor><port>message</port></source></datalink><datalink><sink type="dataflow"><port>code</port></sink><source type="processor"><processor>2_status</processor><port>code</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="3440ba43-2fff-4517-9161-d02044134da9" role="nested"><name>Workflow11</name><inputPorts><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>userId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>result</name><annotations /></port></outputPorts><processors><processor><name>getResult</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>getResult</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getResult_Parameters</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="GetResult" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}GetResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="&amp;gt;GetResult&amp;gt;userId" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="resourceId" qname="&amp;gt;GetResult&amp;gt;resourceId" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getResult_Parameters_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>outputResult</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="outputResult" to="outputResult" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="GetResultResponse" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}GetResultResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="OutputResult" name="outputResult" qname="&amp;gt;GetResultResponse&amp;gt;outputResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="result" qname="{http://copasi.org/copasiws/schemas}OutputResult&amp;gt;result" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>outputResult</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>2_outputResult</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>result</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="result" to="result" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="OutputResult" name="outputResult" qname="&amp;gt;GetResultResponse&amp;gt;outputResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="result" qname="{http://copasi.org/copasiws/schemas}OutputResult&amp;gt;result" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>result</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>getResult</processor><port>Parameters</port></sink><source type="processor"><processor>getResult_Parameters</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>getResult_Parameters</processor><port>userId</port></sink><source type="dataflow"><port>userId</port></source></datalink><datalink><sink type="processor"><processor>getResult_Parameters</processor><port>resourceId</port></sink><source type="dataflow"><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>getResult_Parameters_2</processor><port>input</port></sink><source type="processor"><processor>getResult</processor><port>Parameters</port></source></datalink><datalink><sink type="processor"><processor>2_outputResult</processor><port>input</port></sink><source type="processor"><processor>getResult_Parameters_2</processor><port>outputResult</port></source></datalink><datalink><sink type="dataflow"><port>result</port></sink><source type="processor"><processor>2_outputResult</processor><port>result</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="fe4abc39-9799-4b51-be6b-b6f881485e21" role="nested"><name>Workflow12</name><inputPorts><port><name>resourceId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>userId</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>status</name><annotations /></port></outputPorts><processors><processor><name>startSimulator</name><inputPorts><port><name>Parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="Parameters" to="Parameters" /></inputMap><outputMap><map from="Parameters" to="Parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://www.comp-sys-bio.org/CopasiWS/services/ParameterEstimationService?wsdl</wsdl>
  <operation>startSimulator</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>startSimulator_Parameters</name><inputPorts><port><name>userId</name><depth>0</depth></port><port><name>resourceId</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="resourceId" to="resourceId" /><map from="userId" to="userId" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="StartSimulator" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}StartSimulator"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="resourceId" qname="&amp;gt;StartSimulator&amp;gt;resourceId" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="userId" qname="&amp;gt;StartSimulator&amp;gt;userId" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>resourceId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>userId</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/plain'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="userId" depth="0" /><port name="resourceId" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>startSimulator_Parameters_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>status</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.0.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="status" to="status" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="StartSimulatorResponse" name="Parameters" qname="{http://parameterestimationws.services.copasiws.copasi.org/types}StartSimulatorResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Status" name="status" qname="&amp;gt;StartSimulatorResponse&amp;gt;status"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="code" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;code" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://copasi.org/copasiws/schemas}Status&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>status</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>startSimulator</processor><port>Parameters</port></sink><source type="processor"><processor>startSimulator_Parameters</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>startSimulator_Parameters</processor><port>userId</port></sink><source type="dataflow"><port>userId</port></source></datalink><datalink><sink type="processor"><processor>startSimulator_Parameters</processor><port>resourceId</port></sink><source type="dataflow"><port>resourceId</port></source></datalink><datalink><sink type="processor"><processor>startSimulator_Parameters_2</processor><port>input</port></sink><source type="processor"><processor>startSimulator</processor><port>Parameters</port></source></datalink><datalink><sink type="dataflow"><port>status</port></sink><source type="processor"><processor>startSimulator_Parameters_2</processor><port>status</port></source></datalink></datalinks><annotations /></dataflow></workflow>