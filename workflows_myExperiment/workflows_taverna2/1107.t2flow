<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.1.0"><dataflow id="217539d2-c3c5-4b49-b04d-28d9a6728304" role="top"><name>Workflow50</name><inputPorts><port><name>taskUrl</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>resultUrl</name><annotations /></port></outputPorts><processors><processor><name>query_server</name><inputPorts><port><name>taskUrl</name><depth>0</depth></port></inputPorts><outputPorts><port><name>resultUrl</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="taskUrl" to="taskUrl" /></inputMap><outputMap><map from="resultUrl" to="resultUrl" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">  <script>resultUrl = taskUrl;URL url = new URL(taskUrl); HttpURLConnection conn = (HttpURLConnection)url.openConnection(); conn.setRequestProperty("Accept","text/uri-list");int response = conn.getResponseCode();while(response == 202){		conn = (HttpURLConnection)url.openConnection(); 	conn.setRequestProperty("Accept","text/uri-list"); 	response = conn.getResponseCode();	System.err.println(response);	BufferedReader in = new BufferedReader(    	   new InputStreamReader(conn.getInputStream()));	if(response == 201){		String urlStr = "";		String line = "";		while((line = in.readLine()) != null) {	    		urlStr += line;		}				url = new URL(urlStr);		conn = (HttpURLConnection)url.openConnection();		conn.setRequestProperty("Accept","text/uri-list"); 		response = conn.getResponseCode();	}	Thread.sleep(5000);	}BufferedReader in = new BufferedReader(       new InputStreamReader(conn.getInputStream()));String result = "";String line = "";while((line = in.readLine()) != null) {    result += line;}resultUrl = result;</script>  <dependencies />  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>taskUrl</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <granularDepth>0</granularDepth>      <name>resultUrl</name>      <depth>0</depth>      <mimeTypes />    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs></net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.0</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="taskUrl" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>query_server</processor><port>taskUrl</port></sink><source type="dataflow"><port>taskUrl</port></source></datalink><datalink><sink type="dataflow"><port>resultUrl</port></sink><source type="processor"><processor>query_server</processor><port>resultUrl</port></source></datalink></datalinks><annotations /></dataflow></workflow>