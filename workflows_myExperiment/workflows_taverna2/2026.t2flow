<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.2.0"><dataflow id="d8ae6e0a-47bb-4f57-8068-94fec0d78b38" role="top"><name>Print_Protein_Information_to_HTML</name><inputPorts><port><name>Write_Protein_HTML_GO</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Gene Ontology Information</text>
      </annotationBean>
      <date>2011-04-01 12:07:47.885 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_input</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>The location of the file where the HTML should be written.</text>
      </annotationBean>
      <date>2011-04-01 12:08:08.671 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_InterPro</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>The InterPro information</text>
      </annotationBean>
      <date>2011-04-01 12:08:18.478 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_KDiagram</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>The KEGG pathway diagram. Expected to be an image file.</text>
      </annotationBean>
      <date>2011-04-01 12:08:37.70 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_KPI</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>KEGG Pathway Information.</text>
      </annotationBean>
      <date>2011-04-01 12:08:46.113 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_OC_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Any added Ondex concepts and relations.</text>
      </annotationBean>
      <date>2011-04-01 12:10:14.591 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_PubMed</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>PubMed references</text>
      </annotationBean>
      <date>2011-04-01 12:10:27.710 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_Sid</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Source Protein IDs (from various sources)</text>
      </annotationBean>
      <date>2011-04-01 12:10:43.718 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_SSpecies</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Source species name</text>
      </annotationBean>
      <date>2011-04-01 12:10:53.55 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_Tid</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Target species IDS (variety)</text>
      </annotationBean>
      <date>2011-04-01 12:11:06.811 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_Title</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>The title of the table</text>
      </annotationBean>
      <date>2011-04-01 12:11:15.83 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Write_Protein_HTML_TSpecies</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Target species name</text>
      </annotationBean>
      <date>2011-04-01 12:11:29.848 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>HTML_filecontents</name><annotations /></port></outputPorts><processors><processor><name>Write_Protein_HTML</name><inputPorts><port><name>GO</name><depth>0</depth></port><port><name>input</name><depth>0</depth></port><port><name>InterPro</name><depth>0</depth></port><port><name>KDiagram</name><depth>0</depth></port><port><name>KPI</name><depth>0</depth></port><port><name>OC_R</name><depth>0</depth></port><port><name>PubMed</name><depth>0</depth></port><port><name>Sid</name><depth>0</depth></port><port><name>SSpecies</name><depth>0</depth></port><port><name>Tid</name><depth>0</depth></port><port><name>Title</name><depth>0</depth></port><port><name>TSpecies</name><depth>0</depth></port></inputPorts><outputPorts><port><name>file_path</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="OC_R" to="OC_R" /><map from="SSpecies" to="SSpecies" /><map from="input" to="input" /><map from="KDiagram" to="KDiagram" /><map from="GO" to="GO" /><map from="Sid" to="Sid" /><map from="KPI" to="KPI" /><map from="InterPro" to="InterPro" /><map from="Tid" to="Tid" /><map from="TSpecies" to="TSpecies" /><map from="Title" to="Title" /><map from="PubMed" to="PubMed" /></inputMap><outputMap><map from="file_path" to="file_path" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>BufferedWriter out = new BufferedWriter(new FileWriter(input,true));

if (Title == void)
{Title = "";}
if (Tid == void)
{Tid = "";}
if (TSpecies == void)
{TSpecies = "";}
if (KPI == void)
{KPI = "";}
if (KDiagram == void)
{KDiagram = "";}
if (GO == void)
{GO = "";}
if (InterPro == void)
{InterPro = "";}
if (PubMed == void)
{PubMed = "";}
if (OC_R == void)
{OC_R = "";}
if (OS == void)
{OS = "";}

///////////////////////////////////////////////////////
out.write("&lt;hr&gt;&lt;h2&gt;"+Title+"&lt;/h2&gt;&lt;table border='1'&gt;");

String [] lines = Tid.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;Target Protein IDs&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;";

for (String line: lines)
{
	output += line+ "&lt;br/&gt;";
}
output += "&lt;/td&gt;&lt;/tr&gt;";
out.write(output);

if (TSpecies != void)
{
	String [] lines = TSpecies.split("\n");
	String output ="&lt;tr&gt;&lt;td&gt;Target Species&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;";

	for (String line: lines)
	{	
		output += "&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;" + line+ "&lt;/td&gt;&lt;/tr&gt;";
	}
	out.write(output);
}

if (Sid != void)
{
	String [] lines = Sid.split("\n");
	String output ="&lt;tr&gt;&lt;td&gt;Source Protein IDs&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;";

	for (String line: lines)
	{
		output += line+ "&lt;br/&gt;";
	}
	output+= "&lt;/td&gt;&lt;/tr&gt;";
	out.write(output);
}

if (SSpecies != void)
{
	String [] lines = SSpecies.split("\n");
	String output ="&lt;tr&gt;&lt;td&gt;Source Species&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;";
	
	for (String line: lines)
	{
		output += "&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;" + line+ "&lt;/td&gt;&lt;/tr&gt;";
	}
	out.write(output);
}

String [] lines = KPI.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;KEGG Pathway Information&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;";

for (String line: lines)
{
	output += "&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;" + line+ "&lt;/td&gt;&lt;/tr&gt;";
}
out.write(output);


String [] lines = KDiagram.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;KEGG Diagram&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;";

for (String line: lines)
{
	output += "&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='"+line+"'&gt;&lt;img src='" + line+ "' width='500'&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;";
}
out.write(output);


String [] lines = GO.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;Gene Ontology Annotations&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;";

for (String line: lines)
{
	output += line+ "&lt;br/&gt;";
}
output+= "&lt;/td&gt;&lt;/tr&gt;";
out.write(output);

String [] lines = InterPro.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;InterPro&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;";

for (String line: lines)
{
	output += line+ "&lt;br/&gt;";
}
output+= "&lt;/td&gt;&lt;/tr&gt;";
out.write(output);

String [] lines = PubMed.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;Publications&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;";

for (String line: lines)
{
	output += line+ "&lt;br/&gt;";
}
output+= "&lt;/td&gt;&lt;/tr&gt;";
out.write(output);


String [] lines = OC_R.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;New ONDEX Concepts and Relations&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;";

for (String line: lines)
{
	output += line+ "&lt;br/&gt;";
}
output+= "&lt;/td&gt;&lt;/tr&gt;";
out.write(output);



String [] lines = OS.split("\n");
String output ="&lt;tr&gt;&lt;td&gt;ONDEX Screenshots&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;";

for (String line: lines)
{
	output += "&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;a href='"+line+"'&gt;&lt;img src='" + line+ "' width='500'&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;";
}
output+="&lt;/table&gt;";
out.write(output);



////////////////////////////////////////////

out.close();
output1 =input;</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>Tid</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>TSpecies</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>Sid</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>SSpecies</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>KPI</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>KDiagram</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>GO</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>InterPro</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>PubMed</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>OC_R</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>Title</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>OS</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>file_path</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="GO" depth="0" /><port name="input" depth="0" /><port name="InterPro" depth="0" /><port name="KDiagram" depth="0" /><port name="KPI" depth="0" /><port name="OC_R" depth="0" /><port name="PubMed" depth="0" /><port name="Sid" depth="0" /><port name="SSpecies" depth="0" /><port name="Tid" depth="0" /><port name="Title" depth="0" /><port name="TSpecies" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>Read_Text_File</name><inputPorts><port><name>fileurl</name><depth>0</depth></port></inputPorts><outputPorts><port><name>filecontents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="fileurl" to="fileurl" /></inputMap><outputMap><map from="filecontents" to="filecontents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
  <localworkerName>net.sourceforge.taverna.scuflworkers.io.TextFileReader</localworkerName>
  <script>BufferedReader getReader (String fileUrl) throws IOException {
		InputStreamReader reader;
		try {
			reader = new FileReader(fileUrl);
		}
		catch (FileNotFoundException e) {
			// try a real URL instead
			URL url = new URL(fileUrl);
			reader = new InputStreamReader (url.openStream());
		}
		return new BufferedReader(reader);
	}



StringBuffer sb = new StringBuffer(4000);

BufferedReader in = getReader(fileurl);
String str;
String lineEnding = System.getProperty("line.separator");

while ((str = in.readLine()) != null) {
	sb.append(str);
	sb.append(lineEnding);
}
in.close();
filecontents = sb.toString();
  
</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>fileurl</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>filecontents</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.2</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fileurl" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>GO</port></sink><source type="dataflow"><port>Write_Protein_HTML_GO</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>input</port></sink><source type="dataflow"><port>Write_Protein_HTML_input</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>InterPro</port></sink><source type="dataflow"><port>Write_Protein_HTML_InterPro</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>KDiagram</port></sink><source type="dataflow"><port>Write_Protein_HTML_KDiagram</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>KPI</port></sink><source type="dataflow"><port>Write_Protein_HTML_KPI</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>OC_R</port></sink><source type="dataflow"><port>Write_Protein_HTML_OC_R</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>PubMed</port></sink><source type="dataflow"><port>Write_Protein_HTML_PubMed</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>Sid</port></sink><source type="dataflow"><port>Write_Protein_HTML_Sid</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>SSpecies</port></sink><source type="dataflow"><port>Write_Protein_HTML_SSpecies</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>Tid</port></sink><source type="dataflow"><port>Write_Protein_HTML_Tid</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>Title</port></sink><source type="dataflow"><port>Write_Protein_HTML_Title</port></source></datalink><datalink><sink type="processor"><processor>Write_Protein_HTML</processor><port>TSpecies</port></sink><source type="dataflow"><port>Write_Protein_HTML_TSpecies</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File</processor><port>fileurl</port></sink><source type="processor"><processor>Write_Protein_HTML</processor><port>file_path</port></source></datalink><datalink><sink type="dataflow"><port>HTML_filecontents</port></sink><source type="processor"><processor>Read_Text_File</processor><port>filecontents</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Takes in a lot of parameters in order to construct an HTML table to display the information.</text>
      </annotationBean>
      <date>2011-04-01 12:07:35.860 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Print Protein Information to HTML</text>
      </annotationBean>
      <date>2011-04-01 12:07:14.40 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d8ae6e0a-47bb-4f57-8068-94fec0d78b38</identification>
      </annotationBean>
      <date>2011-04-01 12:12:52.664 BST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow></workflow>