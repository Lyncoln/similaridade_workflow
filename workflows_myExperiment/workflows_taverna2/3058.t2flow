<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.3.0"><dataflow id="52948233-94dd-49bd-9bc3-f77cd282b38f" role="top"><name>Workflow78</name><inputPorts><port><name>Tandem_Param_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>FASTA_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Log_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>mzXML_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Prophet_Pars</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>pepXML_Output</name><annotations /></port></outputPorts><processors><processor><name>PeptideProphet</name><inputPorts><port><name>arguments</name><depth>0</depth></port><port><name>log_file</name><depth>0</depth></port><port><name>input_files</name><depth>1</depth></port></inputPorts><outputPorts><port><name>output_file</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="input_files" to="input_files" /><map from="arguments" to="arguments" /><map from="log_file" to="log_file" /></inputMap><outputMap><map from="output_file" to="output_file" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>input_files</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>arguments</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>log_file</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>output_file</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>/****************** Input descriptions ****************/
//input port: ArrayList input_files (depth 1)
//input port: String arguments (depth 0)
//input port: String log_file (depth 0)
//output port: String output_file (depth 0)


/****************** Class Declarations ****************/
class InProcStreamReader extends Thread
{
    private StringBuffer sb;
    public  InputStream is;
    
    InProcStreamReader(InputStream is) {
        this.is = is;
    }// InProcStreamReader(InputStream is) 
    
    public void run() {
        try {
            InputStreamReader isr = new InputStreamReader(is);
            sb = new StringBuffer();
            while ((c = isr.read()) != -1)
                sb.append((char) c);
        } catch (IOException ioe)
        {
          ioe.printStackTrace();  
        }/// catch
    }// run

    public String getOutput() { 
      return sb.toString();
    }// getOutput
}// InProcStreamReader


/****************** Global variables ******************/
tppDir = "C:\\Inetpub\\tpp-bin\\";


/****************** Global functions ******************/
// Replaces substrings in a string with a replacement string
String replace(String str, String pattern, String replace) { 
  int s = 0; 
  int e = 0; 
  StringBuffer result = new StringBuffer(); 
  while ((e = str.indexOf(pattern, s)) &gt;= 0) { 
    result.append(str.substring(s, e)); 
    result.append(replace); 
    s = e+pattern.length(); 
  }// while
  result.append(str.substring(s)); 
  return result.toString(); 
}//  String replace(String str, String pattern, String replace) 

// Generates the output file name based on the input file
String genOutputFileName(String inputFile) {
  return replace(inputFile, "pep.xml", "interact.pep.xml");
}// String genOutputFileName(String inputFile)

// Splits argument string into separate array elements
String[] filterArguments(String arguments) {
  String[] retval = arguments.split(" ");
  return retval;
}// String[] filterArguments(String arguments) {


/************** Main matter, input checking ************/
if (input_files == void) {
  throw new RuntimeException("The 'input_files' port cannot be null.");
}// if


/************ Main matter, Running executable **********/
// Setting up the command line 
appArray = new ArrayList();

// Adding the command itself
appArray.add(tppDir + "xinteract.exe");

// Setting the output file
tmpout = genOutputFileName(input_files.get(0));
fin = new File(tmpout);
if (fin.exists())
  fin.delete();
appArray.add("-N"+tmpout);

// Filtering out arguments, or setting defaults
if (arguments == void || arguments.equals("")) {
  arguments = "-p0.05 -l7 -MONO -OigGtus";
}// if
arglist = filterArguments(arguments);
if (!(arglist ==  void || arglist[0].equals(""))) { 
  for (int i = 0; i &lt; arglist.length; i++) {
    appArray.add(arglist[i]);
  }// for
}// if

// Adding the inputs 
for (int i = 0; i &lt; input_files.size(); i++) {
  if (!input_files.get(i).contains("interact")) {
    appArray.add(input_files.get(i));
  }// if
}// for

workdir = new File(tppDir);
launcher = new ProcessBuilder(appArray);
launcher.directory = workdir;
proc = launcher.start();

outputReader = new InProcStreamReader(proc.getInputStream());
outputReader.start();

// any error???
exitVal = proc.waitFor();
outputReader.join();


/************** Main matter, generating log ************/
fstream = new FileWriter(log_file, true);
out = new BufferedWriter(fstream);

if (!(log_file == void || log_file.equals(""))) {
  out.write("=============== PeptideProphet ==============="); 
  out.newLine();
  out.write("Parameters:");
  for (i=0; i&lt;appArray.size(); i++) {
    out.write(" ");
    out.write(appArray.get(i).toString());
  }
  out.newLine();
  out.write("Output:");
  out.newLine();
  out.write(outputReader.getOutput()); 
  out.newLine();
  out.close();
}// if

// final step, assigning the output
if (exitVal == 0)
  output_file = tmpout;
else
  output_file = NULL;</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="arguments" depth="0" /><port name="log_file" depth="0" /><port name="input_files" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Workflow_1a</name><inputPorts><port><name>FASTA_File</name><depth>0</depth></port><port><name>Log_File</name><depth>0</depth></port><port><name>Tandem_Param_File</name><depth>0</depth></port><port><name>mzXML_File</name><depth>0</depth></port></inputPorts><outputPorts><port><name>pepXML_Output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="mzXML_File" to="mzXML_File" /><map from="Tandem_Param_File" to="Tandem_Param_File" /><map from="Log_File" to="Log_File" /><map from="FASTA_File" to="FASTA_File" /></inputMap><outputMap><map from="pepXML_Output" to="pepXML_Output" /></outputMap><configBean encoding="dataflow"><dataflow ref="bc495e69-8e01-4395-875e-9fe2a747bd05" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="FASTA_File" depth="0" /><port name="Log_File" depth="0" /><port name="Tandem_Param_File" depth="0" /><port name="mzXML_File" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>PeptideProphet</processor><port>arguments</port></sink><source type="dataflow"><port>Prophet_Pars</port></source></datalink><datalink><sink type="processor"><processor>PeptideProphet</processor><port>log_file</port></sink><source type="dataflow"><port>Log_File</port></source></datalink><datalink><sink type="processor"><processor>PeptideProphet</processor><port>input_files</port></sink><source type="processor"><processor>Workflow_1a</processor><port>pepXML_Output</port></source></datalink><datalink><sink type="processor"><processor>Workflow_1a</processor><port>FASTA_File</port></sink><source type="dataflow"><port>FASTA_File</port></source></datalink><datalink><sink type="processor"><processor>Workflow_1a</processor><port>Log_File</port></sink><source type="dataflow"><port>Log_File</port></source></datalink><datalink><sink type="processor"><processor>Workflow_1a</processor><port>Tandem_Param_File</port></sink><source type="dataflow"><port>Tandem_Param_File</port></source></datalink><datalink><sink type="processor"><processor>Workflow_1a</processor><port>mzXML_File</port></sink><source type="dataflow"><port>mzXML_File</port></source></datalink><datalink><sink type="dataflow"><port>pepXML_Output</port></sink><source type="processor"><processor>PeptideProphet</processor><port>output_file</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7d356e09-ab0f-49a0-b8b2-e04c79b4831c</identification>
      </annotationBean>
      <date>2011-03-01 11:43:55.657 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ce45dc51-de9a-45a6-9d4d-3ca389bd6601</identification>
      </annotationBean>
      <date>2011-04-06 16:31:57.156 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>3ce3f027-e65e-4f23-8993-d50d45a0d198</identification>
      </annotationBean>
      <date>2011-01-31 10:56:42.353 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>6ea6b6ab-6781-4b81-8779-41f2a15f59be</identification>
      </annotationBean>
      <date>2012-04-16 11:30:37.893 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>05ea30e7-2776-4795-8aed-0df2a2c8c512</identification>
      </annotationBean>
      <date>2011-04-07 16:39:21.195 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>56d89322-2864-4bee-b71b-535a74078068</identification>
      </annotationBean>
      <date>2011-04-06 15:54:29.498 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>c9b8d1dc-b2de-4a2c-a789-7894f6827f10</identification>
      </annotationBean>
      <date>2012-04-16 11:29:04.225 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>04d83187-2364-4930-ba2d-1eee4d3d5e6f</identification>
      </annotationBean>
      <date>2011-03-22 13:27:25.556 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>5d6ba88b-b3b6-45bb-bfca-9823451e4388</identification>
      </annotationBean>
      <date>2011-03-30 11:25:11.740 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>491a44b2-a889-44c4-8e8a-449f2b5fc27e</identification>
      </annotationBean>
      <date>2012-04-16 12:08:49.864 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>624593fc-452f-470c-adf7-4d7d8b6d6f0c</identification>
      </annotationBean>
      <date>2011-03-30 10:59:22.85 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>52948233-94dd-49bd-9bc3-f77cd282b38f</identification>
      </annotationBean>
      <date>2012-04-16 15:37:13.211 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>b8bbef6f-374c-4d93-8033-29053e70f518</identification>
      </annotationBean>
      <date>2011-04-06 18:18:12.291 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7b577962-2f02-4f94-bdfd-dc33d5497887</identification>
      </annotationBean>
      <date>2012-04-16 15:25:25.859 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>1520eabd-565d-4a01-a68d-0ac96f73ddf9</identification>
      </annotationBean>
      <date>2011-03-30 10:59:48.925 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>a7b6948d-7f60-4d75-98a9-96f7a320e3b8</identification>
      </annotationBean>
      <date>2012-04-16 13:09:34.552 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>b752db36-71b0-4793-855b-8e5d43f3b874</identification>
      </annotationBean>
      <date>2012-04-16 11:16:35.199 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>2dc4297c-e078-4ae9-89cf-957b7a9de818</identification>
      </annotationBean>
      <date>2011-12-01 12:54:35.986 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f7de5cac-1926-4ec2-9838-47a53f5c04fd</identification>
      </annotationBean>
      <date>2011-04-12 16:43:35.130 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>dfb76778-0395-4f34-acb0-ec5100da01f3</identification>
      </annotationBean>
      <date>2012-04-16 11:22:50.900 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>18d05657-0d47-4d50-87e4-c2ebcc57a31d</identification>
      </annotationBean>
      <date>2012-04-12 17:39:35.867 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>bee38ae2-d96f-48d0-80e8-367349f4b8e1</identification>
      </annotationBean>
      <date>2011-03-02 15:12:56.636 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d4430f80-5827-4fa3-83f3-0c58410ffc92</identification>
      </annotationBean>
      <date>2011-01-31 18:35:12.220 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>8e0e9b2d-6420-4411-9f61-e7841aae2563</identification>
      </annotationBean>
      <date>2011-04-07 14:25:11.816 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ed84d9b6-1a6d-4f8d-a9c7-4da8d2b03192</identification>
      </annotationBean>
      <date>2011-04-06 16:28:27.542 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>704b8508-b7c0-41b3-8f93-cf91f444ec08</identification>
      </annotationBean>
      <date>2012-04-16 11:20:02.973 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>8aaf85b9-ca7b-48c1-8cf1-21f35a36e920</identification>
      </annotationBean>
      <date>2011-12-01 13:07:14.642 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>83f8a0ae-8ba0-481d-b71e-d6459685a855</identification>
      </annotationBean>
      <date>2011-12-01 13:49:50.81 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>3507c9f5-f5f2-4033-9f7c-2db5f50d88f1</identification>
      </annotationBean>
      <date>2011-01-31 11:07:39.185 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>de000ea1-cff6-4679-b42e-9d315fa1db23</identification>
      </annotationBean>
      <date>2011-04-07 16:36:51.860 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>36491e21-c712-4a5a-b562-241807763ed9</identification>
      </annotationBean>
      <date>2011-01-31 11:02:11.569 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>fc634334-f397-4f68-8119-a853925702b4</identification>
      </annotationBean>
      <date>2011-03-29 10:02:31.511 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>8615d8a1-e3af-4509-b708-daefe6d0e9a2</identification>
      </annotationBean>
      <date>2011-01-31 18:21:34.160 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="bc495e69-8e01-4395-875e-9fe2a747bd05" role="nested"><name>Workflow1</name><inputPorts><port><name>FASTA_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>mzXML_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Tandem_Param_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Log_File</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>pepXML_Output</name><annotations /></port></outputPorts><processors><processor><name>Tandem</name><inputPorts><port><name>fasta_file</name><depth>0</depth></port><port><name>log_file</name><depth>0</depth></port><port><name>parameter_file</name><depth>0</depth></port><port><name>mzxml_file</name><depth>0</depth></port></inputPorts><outputPorts><port><name>tandem_file</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="log_file" to="log_file" /><map from="mzxml_file" to="mzxml_file" /><map from="fasta_file" to="fasta_file" /><map from="parameter_file" to="parameter_file" /></inputMap><outputMap><map from="tandem_file" to="tandem_file" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>mzxml_file</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>fasta_file</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>parameter_file</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>log_file</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>tandem_file</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>/****************** Input descriptions ****************/
// input port: String mzxml_file (Depth 0)
// input port: String fasta_file (Depth 0)
// input port: String parameter_file (Depth 0)
// input port: String log_file (Depth 0)
// output port: String tandem_file (Depth 0)


/****************** Class Declarations ****************/
class InProcStreamReader extends Thread
{
    private StringBuffer sb;
    public  InputStream is;
    
    InProcStreamReader(InputStream is) {
        this.is = is;
    }// InProcStreamReader(InputStream is) 
    
    public void run() {
        try {
            InputStreamReader isr = new InputStreamReader(is);
            sb = new StringBuffer();
            while ((c = isr.read()) != -1)
                sb.append((char) c);
        } catch (IOException ioe)
        {
          ioe.printStackTrace();  
        }/// catch
    }// run

    public String getOutput() { 
      return sb.toString();
    }// getOutput
}// InProcStreamReader


/****************** Global variables ******************/
tppDir = "C:\\Inetpub\\tpp-bin\\";
installDir = "C:\\Users\\nmpalmblad\\MCP_Workflows\\MCP_Workflows\\";


/****************** Global functions ******************/
// Replaces substrings in a string with a replacement string
String replace(String str, String pattern, String replace) { 
  int s = 0; 
  int e = 0; 
  StringBuffer result = new StringBuffer(); 
  while ((e = str.indexOf(pattern, s)) &gt;= 0) { 
    result.append(str.substring(s, e)); 
    result.append(replace); 
    s = e+pattern.length(); 
  } // while
  result.append(str.substring(s)); 
  return result.toString(); 
}//  String replace(String str, String pattern, String replace) 

// Generates a file based on a name and a new extension (without the .)
String genNewFileName(String inputFile, String extension) {
  int dotPos = inputFile.lastIndexOf(".");
  String strFilename = inputFile.substring(0, dotPos);
  return strFilename + "." + extension;
}// String genNewFileName(String inputFile, String extension) 

// Generates tandem output file name
String genOutputFileName(String inputFile) {
  return genNewFileName(inputFile, "tandem");
}// String genOutputFileName(String inputFile)

// Generates taxonomy file name
String genTaxonomyFileName(String inputFile) {
  return genNewFileName(inputFile, "taxonomy.xml");
}// String genTaxonomyFileName((String inputFile)

// Modifies the taxonomy predicate file and returns the path of the new file */
String modTaxonomyPredicate(String fasta_location, String inputFile) {   
  String taxFileName = genTaxonomyFileName( inputFile );
  BufferedReader input = new BufferedReader( new FileReader( installDir + "Tools\\Tandem\\taxonomy_pred.xml" ));
  BufferedWriter output = new BufferedWriter( new FileWriter( taxFileName ));
  try {
    String line = null; 
    while (( line = input.readLine()) != null){      
      if (line.indexOf("$FASTA_LOCATION$") &gt;= 0) {  
        line = replace( line, "$FASTA_LOCATION$", fasta_location );
        output.write( line + '\n');
      } else {
        output.write( line + '\n');
      }// else
    }// while
  }// try
  finally {
    input.close();
    output.close();
  }// finally

  return taxFileName;

}// String modTaxonomyPredicate(String fasta_location) 

// Generates parameter file name
String genParameterFileName(String inputFile) {
  return genNewFileName(inputFile, "param.xml");
}// String genParameterFileName((String inputFile)

// Modifies the param predicate file and returns the path of the new file */
String modParamPredicate(String mzxmlFile, String taxonFile, String paramFile, String outputFile) {   
  BufferedReader input = new BufferedReader(new FileReader(installDir + "Tools\\Tandem\\tandem_pred.params"));
  BufferedReader parinput = new BufferedReader(new FileReader(paramFile));
  String paramFileName = genParameterFileName( mzxmlFile );
  BufferedWriter output = new BufferedWriter( new FileWriter( paramFileName ));
  String line = null; //not declared within while loop
  try {
    while (( line = input.readLine()) != null){
      if (line.indexOf("$PARAMS$") &gt;= 0) {
        while (( line = parinput.readLine()) != null){
          output.write( line + '\n'); 
        }
      } else if (line.indexOf("$TAXONOMY_LOCATION$") &gt;= 0) {
        line = replace( line, "$TAXONOMY_LOCATION$", taxonFile );
        output.write( line + '\n'); 
      } else if (line.indexOf("$SPECTRUM_LOCATION$") &gt;= 0) {
        line = replace( line, "$SPECTRUM_LOCATION$", mzxmlFile );
        output.write( line + '\n');
      } else if (line.indexOf("$OUTPUT_LOCATION$") &gt;= 0) {
        line = replace( line, "$OUTPUT_LOCATION$", outputFile );
        output.write( line + '\n');
      } else {
        output.write( line + '\n');
      }// else
    }// while
  }// try
  finally {
    input.close();
    parinput.close();
    output.close();
  }// finally

  return paramFileName;

}// String modParamPredicate(String mzxmlFile, String taxonFile, String outputFile) 


/************** Main matter, input checking ************/
if (mzxml_file == void || mzxml_file.equals("")) {
	throw new RuntimeException("The 'mzxml_file' port cannot be null.");
} else if (fasta_file == void || fasta_file.equals("")) {
	throw new RuntimeException("The 'fasta_file' port cannot be null.");
} else if (parameter_file == void || parameter_file.equals("")) {
	throw new RuntimeException("The 'parameter_file' port cannot be null.");
}// else

/************ Main matter, Running executable **********/
// Setting up the command line 
appArray = new ArrayList();

// Adding the command itself
appArray.add(tppDir + "Tandem.exe");

// Creating tandem configuration files and setting them as input
taxonFile = modTaxonomyPredicate(fasta_file, mzxml_file);
tmpout = genOutputFileName(mzxml_file);
appArray.add(modParamPredicate(mzxml_file, taxonFile, parameter_file, tmpout));

// Preparing execution of tandem
workDir = new File(tppDir);
launcher = new ProcessBuilder(appArray);
launcher.directory = workDir;
proc = launcher.start();

outputReader = new InProcStreamReader(proc.getInputStream());
outputReader.start();

// any error???
exitVal = proc.waitFor();
outputReader.join();


/************** Main matter, generating log ************/
fstream = new FileWriter(log_file, true);
out = new BufferedWriter(fstream);

if (!(log_file == void || log_file.equals(""))) {
  out.write("=============== X!Tandem ==============="); 
  out.newLine();
  out.write("Parameters: ");
  for (i=0; i&lt;appArray.size(); i++)
    out.write(appArray.get(i).toString());
  out.newLine();
  out.write("Output:");
  out.newLine();
  out.write(outputReader.getOutput()); 
  out.newLine();
  out.close();
}// if

// final step, assigning the output
if (exitVal == 0)
  tandem_file = tmpout;
else
  tandem_file = NULL;


</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fasta_file" depth="0" /><port name="log_file" depth="0" /><port name="parameter_file" depth="0" /><port name="mzxml_file" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Tandem2pepXML</name><inputPorts><port><name>input_file</name><depth>0</depth></port><port><name>log_file</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output_file</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="log_file" to="log_file" /><map from="input_file" to="input_file" /></inputMap><outputMap><map from="output_file" to="output_file" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>input_file</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>log_file</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>output_file</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>/****************** Input descriptions ****************/
// input port: String input_file (depth 0)
// output port: String output_file (depth 0)


/****************** Class Declarations ****************/
class InProcStreamReader extends Thread
{
    private StringBuffer sb;
    public  InputStream is;
    
    InProcStreamReader(InputStream is) {
        this.is = is;
    }// InProcStreamReader(InputStream is) 
    
    public void run() {
        try {
            InputStreamReader isr = new InputStreamReader(is);
            sb = new StringBuffer();
            while ((c = isr.read()) != -1)
                sb.append((char) c);
        } catch (IOException ioe)
        {
          ioe.printStackTrace();  
        }/// catch
    }// run

    public String getOutput() { 
      return sb.toString();
    }// getOutput
}// InProcStreamReader


/****************** Global variables ******************/
tppDir = "C:\\Inetpub\\tpp-bin\\";


/****************** Global functions ******************/
// Deletes a  file
void deleteFile(String fileName) {
  // A File object to represent the filename
  File f = new File(fileName);
  
  // Make sure the file or directory exists and isn't write protected
  if (!f.exists())
    throw new IllegalArgumentException("Delete: no such file or directory: " + fileName);

  if (!f.canWrite())
    throw new IllegalArgumentException("Delete: write protected: " + fileName);

  // If it is a directory, make sure it is empty
  if (f.isDirectory()) {
    String[] files = f.list();
    if (files.length &gt; 0)
      throw new IllegalArgumentException("Delete: directory not empty: " + fileName);
  }// if

  // Attempt to delete it
  boolean success = f.delete();

  if (!success)
    throw new IllegalArgumentException("Delete: deletion failed");
  
}// void deleteFile(String fileName) 

// Generates output file name based on input file
String genOutputFileName(String inputFile) {
  String result;

  for (int i = inputFile.length()-1; i &gt;= 0; i--) {
    if (inputFile.charAt(i) == '.')  {
      return inputFile.substring(0, i+1) + "pep.xml";
    }// if
  }// for

  return "temp.pep.xml";
}


/************** Main matter, input checking ************/
if (input_file == void || input_file.equals("")) {
	throw new RuntimeException("The 'input_file' port cannot be null.");
}

/************ Main matter, Running executable **********/
// Setting up the command line 
appArray = new ArrayList();

// Adding the command itself
appArray.add(tppDir + "Tandem2XML.exe");

// Adding the input file
appArray.add(input_file);

// Setting the output file, and deleting previous instances
tmpout = genOutputFileName(input_file);
foutput = new File(tmpout);
if (foutput.exists()) {
  deleteFile(tmpout);
}// if
appArray.add(tmpout);

// Preparing execution of tandem
workDir = new File(tppDir);
launcher = new ProcessBuilder(appArray);
launcher.directory = workDir;
proc = launcher.start();

outputReader = new InProcStreamReader(proc.getInputStream());
outputReader.start();

// any error? if so, dun delete the intermediate file
int exitVal = proc.waitFor();
outputReader.join();
if (exitVal == 0)
  deleteFile(input_file);  


/************** Main matter, generating log ************/
fstream = new FileWriter(log_file, true);
out = new BufferedWriter(fstream);

if (!(log_file == void || log_file.equals(""))) {
  out.write("=============== Tandem2pepXML ==============="); 
  out.newLine();
  out.write("Parameters: ");
  for (i=0; i&lt;appArray.size(); i++)
    out.write(appArray.get(i).toString());
  out.newLine();
  out.write("Output:");
  out.newLine();
  out.write(outputReader.getOutput()); 
  out.newLine();
  out.close();
}// if

// final step, assigning the output
if (exitVal == 0)
  output_file = tmpout;
else
  output_file = NULL;</script>
  <dependencies />
  <localworkerName>net.sourceforge.taverna.scuflworkers.io.LocalCommand</localworkerName>
</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.HostInstitution">
        <text>UserNameHere</text>
      </annotationBean>
      <date>2012-04-16 15:25:19.92 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input_file" depth="0" /><port name="log_file" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>Tandem</processor><port>fasta_file</port></sink><source type="dataflow"><port>FASTA_File</port></source></datalink><datalink><sink type="processor"><processor>Tandem</processor><port>log_file</port></sink><source type="dataflow"><port>Log_File</port></source></datalink><datalink><sink type="processor"><processor>Tandem</processor><port>parameter_file</port></sink><source type="dataflow"><port>Tandem_Param_File</port></source></datalink><datalink><sink type="processor"><processor>Tandem</processor><port>mzxml_file</port></sink><source type="dataflow"><port>mzXML_File</port></source></datalink><datalink><sink type="processor"><processor>Tandem2pepXML</processor><port>input_file</port></sink><source type="processor"><processor>Tandem</processor><port>tandem_file</port></source></datalink><datalink><sink type="processor"><processor>Tandem2pepXML</processor><port>log_file</port></sink><source type="dataflow"><port>Log_File</port></source></datalink><datalink><sink type="dataflow"><port>pepXML_Output</port></sink><source type="processor"><processor>Tandem2pepXML</processor><port>output_file</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e5d118e3-2916-4365-ae29-4984d3e1b4f6</identification>
      </annotationBean>
      <date>2011-01-14 16:49:18.610 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>34b7fea4-4cf7-4dc4-b6f9-7f3c955af477</identification>
      </annotationBean>
      <date>2011-12-01 13:04:42.550 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>19f72c62-ed1a-4c8f-bb6e-01fb1bd800b5</identification>
      </annotationBean>
      <date>2011-04-07 16:38:29.321 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e5fa5551-84b5-4cae-be10-8bbc6ae85402</identification>
      </annotationBean>
      <date>2011-03-30 10:58:44.949 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d47a341b-2046-43b1-87f1-1f0c97748198</identification>
      </annotationBean>
      <date>2011-01-31 11:01:17.418 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>732640f1-2769-4ba0-8299-b010ac472e73</identification>
      </annotationBean>
      <date>2011-12-01 13:49:23.26 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>45d1674a-08d8-46da-8c83-01d62ac6a2da</identification>
      </annotationBean>
      <date>2011-01-14 17:22:58.378 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7f7c6977-8634-446c-9e28-b2bbe9c0d435</identification>
      </annotationBean>
      <date>2011-04-12 16:37:50.373 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>bc495e69-8e01-4395-875e-9fe2a747bd05</identification>
      </annotationBean>
      <date>2012-04-16 15:25:21.633 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ea9bb0fd-35d6-45af-8773-506a8bcadc24</identification>
      </annotationBean>
      <date>2011-03-02 15:12:29.703 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>fecc8412-b94b-4aa3-8e49-120f5833de64</identification>
      </annotationBean>
      <date>2011-04-12 16:39:16.474 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>23b08ec0-6c7b-4bbd-a796-7233d2a93c7a</identification>
      </annotationBean>
      <date>2011-03-01 11:42:27.896 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>eb2a5ac6-dda2-4b48-8d7c-58c36f9502f7</identification>
      </annotationBean>
      <date>2011-04-12 16:35:36.741 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>b82bd131-139e-4072-b2eb-8e358f3b80ef</identification>
      </annotationBean>
      <date>2011-12-01 13:05:51.521 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>6f68c5e2-efc6-45e1-ab95-5d47022afb03</identification>
      </annotationBean>
      <date>2011-01-14 16:44:26.34 CET</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>26e3310c-558b-484d-9bf8-dbd94bdab7d9</identification>
      </annotationBean>
      <date>2011-04-06 18:18:09.939 CEST</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow></workflow>