<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.1.2"><dataflow id="b524ee8a-989b-4f4d-96d9-ea6144d04a46" role="top"><name>dataflow2</name><inputPorts><port><name>cqlClause</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text> &lt;CQLQuery xmlns="http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery"&gt;
 &lt;Target name="gov.nih.nci.cadsr.umlproject.domain.Project"&gt;
 &lt;/Target&gt;
&lt;/CQLQuery&gt;
</text>
      </annotationBean>
      <date>2010-05-25 12:02:23.176 CDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text> &lt;CQLQuery xmlns="http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery"&gt;
 &lt;Target name="gov.nih.nci.cadsr.umlproject.domain.Project"&gt;
   &lt;Association roleName="classificationScheme" name="gov.nih.nci.cadsr.domain.ClassificationScheme"&gt;
     &lt;Association roleName="context" name="gov.nih.nci.cadsr.domain.Context"&gt;
       &lt;Attribute name="name" value="caBIG" predicate="EQUAL_TO"/&gt;
     &lt;/Association&gt;
   &lt;/Association&gt;
 &lt;/Target&gt;
&lt;/CQLQuery&gt;
</text>
      </annotationBean>
      <date>2009-09-03 16:51:42.283 CDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>A sample caDSRDataService workflow.</text>
      </annotationBean>
      <date>2009-09-03 16:51:57.691 CDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>classInformation</name><annotations /></port></outputPorts><processors><processor><name>queryProject</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://cadsr-dataservice.nci.nih.gov:80/wsrf/services/cagrid/CaDSRDataService?wsdl</wsdl>
  <operation>query</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>queryProject_input</name><inputPorts><port><name>cqlQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="cqlQuery" to="cqlQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryRequest" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>cqlQuery</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="cqlQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>queryProject_cqlQuery</name><inputPorts><port><name>CQLQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="CQLQuery" to="CQLQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>CQLQuery</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="CQLQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>queryClass</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://cadsr-dataservice.nci.nih.gov:80/wsrf/services/cagrid/CaDSRDataService?wsdl</wsdl>
  <operation>query</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>queryClass_input</name><inputPorts><port><name>cqlQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="cqlQuery" to="cqlQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryRequest" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>cqlQuery</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="cqlQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>queryClass_cqlQuery</name><inputPorts><port><name>CQLQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="CQLQuery" to="CQLQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>CQLQuery</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="CQLQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell</name><inputPorts><port><name>in</name><depth>0</depth></port></inputPorts><outputPorts><port><name>out</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="in" to="in" /></inputMap><outputMap><map from="out" to="out" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

out ="";
DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
docBuilderFactory.setNamespaceAware(true);
   		DocumentBuilder docBuilder;
try {
	docBuilder = docBuilderFactory.newDocumentBuilder();			    
	Document doc1 = docBuilder.parse( new InputSource(new StringReader(in)));
	Element projectsEL = doc1.getDocumentElement();   
	XPath xpath1 = XPathFactory.newInstance().newXPath();
	String findProjectName = 
				"//*[local-name()='Project' and namespace-uri()='gme://caDSR.caDSR/4.0/gov.nih.nci.cadsr.umlproject.domain']/@longName";
			
			NodeList  projectNode = (NodeList) xpath1.evaluate(findProjectName, projectsEL, XPathConstants.NODESET);
			//System.out.println(projectNode.getTextContent());
			out ="";
	//out =  "&lt;CQLQuery xmlns=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;Target name=\"gov.nih.nci.cadsr.umlproject.domain.UMLClassMetadata\"&gt;&lt;Association roleName=\"project\" name=\"gov.nih.nci.cadsr.umlproject.domain.Project\"&gt;&lt;Group logicRelation=\"AND\"&gt;&lt;Attribute name=\"shortName\" value=\""+ projectNode.getTextContent() +"\" predicate=\"EQUAL_TO\"/&gt;&lt;/Group&gt;&lt;/Association&gt;&lt;/Target&gt;&lt;/CQLQuery&gt;";					
	System.out.println(projectNode.getLength());
	for(int i=0;i&lt;projectNode.getLength()&amp;&amp;i&lt;2;i++){
				
					Node n = projectNode.item(i);
					System.out.println(n.getTextContent());
					out =  "&lt;CQLQuery xmlns=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;Target name=\"gov.nih.nci.cadsr.umlproject.domain.UMLClassMetadata\"&gt;&lt;Association roleName=\"project\" name=\"gov.nih.nci.cadsr.umlproject.domain.Project\"&gt;&lt;Attribute name=\"longName\" value=\""+ n.getTextContent() +"\" predicate=\"EQUAL_TO\"/&gt;&lt;/Association&gt;&lt;/Target&gt;&lt;/CQLQuery&gt;";					
				
				
			}
	System.out.println(out);
} catch (ParserConfigurationException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
} catch (SAXException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
} catch (XPathExpressionException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
} </script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>in</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>out</name>
      <depth>0</depth>
      <mimeTypes />
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="in" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>queryProject</processor><port>parameters</port></sink><source type="processor"><processor>queryProject_input</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>queryProject_input</processor><port>cqlQuery</port></sink><source type="processor"><processor>queryProject_cqlQuery</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>queryProject_cqlQuery</processor><port>CQLQuery</port></sink><source type="dataflow"><port>cqlClause</port></source></datalink><datalink><sink type="processor"><processor>queryClass</processor><port>parameters</port></sink><source type="processor"><processor>queryClass_input</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>queryClass_input</processor><port>cqlQuery</port></sink><source type="processor"><processor>queryClass_cqlQuery</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>queryClass_cqlQuery</processor><port>CQLQuery</port></sink><source type="processor"><processor>Beanshell</processor><port>out</port></source></datalink><datalink><sink type="processor"><processor>Beanshell</processor><port>in</port></sink><source type="processor"><processor>queryProject</processor><port>parameters</port></source></datalink><datalink><sink type="dataflow"><port>classInformation</port></sink><source type="processor"><processor>queryClass</processor><port>parameters</port></source></datalink></datalinks><annotations /></dataflow></workflow>