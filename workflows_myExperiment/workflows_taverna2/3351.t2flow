<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.4.0"><dataflow id="f9b001af-a9dc-482c-8994-bb4d1dd0e95e" role="top"><name>Intialize_Sample</name><inputPorts><port><name>working_directory</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>/Users/jdsant/Documents/Wf4Ever/2ndGoldenExemplar/python</text>
      </annotationBean>
      <date>2012-09-26 17:25:25.178 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>POSIX Path to the working directory were data will be saved</text>
      </annotationBean>
      <date>2012-09-26 17:20:10.213 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>postgresql_server_ip</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Hostname or IP adress of the PostgreSQL server</text>
      </annotationBean>
      <date>2012-09-26 17:24:52.211 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>amiga.iaa.csic.es</text>
      </annotationBean>
      <date>2012-09-26 17:24:59.750 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>postgresql_server_port</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>TCP/IP port number of the PostgresSQL server (default: 5432)	</text>
      </annotationBean>
      <date>2012-09-26 17:24:26.487 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>5432</text>
      </annotationBean>
      <date>2012-09-26 17:24:29.559 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>db_username</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Database username</text>
      </annotationBean>
      <date>2012-09-26 17:26:08.489 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>sdss</text>
      </annotationBean>
      <date>2012-09-26 17:26:11.553 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>db_password</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>password</text>
      </annotationBean>
      <date>2012-09-26 17:26:43.386 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Database password for db_username</text>
      </annotationBean>
      <date>2012-09-26 17:26:37.734 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>pickle_filename</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>par_low.pckl</text>
      </annotationBean>
      <date>2012-09-26 20:26:20.132 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Name of the pickle file to save the initial sample</text>
      </annotationBean>
      <date>2012-09-26 20:26:38.751 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>path_to_galaxy_sample</name><annotations /></port><port><name>Tool_STDOUT</name><annotations /></port><port><name>Tool_STDERR</name><annotations /></port></outputPorts><processors><processor><name>2par_low.py</name><inputPorts><port><name>dbpasswd</name><depth>0</depth></port><port><name>dbuser</name><depth>0</depth></port><port><name>tcpport</name><depth>0</depth></port><port><name>host</name><depth>0</depth></port><port><name>pickle_filename</name><depth>0</depth></port><port><name>working_directory</name><depth>0</depth></port></inputPorts><outputPorts><port><name>STDOUT</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>STDERR</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>external-tool-activity</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.activities.externaltool.ExternalToolActivity</class><inputMap><map from="host" to="host" /><map from="working_directory" to="working_directory" /><map from="dbpasswd" to="dbpasswd" /><map from="tcpport" to="tcpport" /><map from="dbuser" to="dbuser" /><map from="pickle_filename" to="pickle_filename" /></inputMap><outputMap><map from="STDERR" to="STDERR" /><map from="STDOUT" to="STDOUT" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.externaltool.ExternalToolActivityConfigurationBean xmlns="">
  <mechanismType>789663B8-DA91-428A-9F7D-B3F3DA185FD4</mechanismType>
  <mechanismName>default local</mechanismName>
  <mechanismXML>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;
&lt;localInvocation&gt;&lt;shellPrefix&gt;/bin/sh -c&lt;/shellPrefix&gt;&lt;linkCommand&gt;/bin/ln -s %%PATH_TO_ORIGINAL%% %%TARGET_NAME%%&lt;/linkCommand&gt;&lt;/localInvocation&gt;&#xD;
</mechanismXML>
  <externaltoolid>79ead3ec-f680-4967-a0bb-6509aa9c2f05</externaltoolid>
  <useCaseDescription>
    <usecaseid>2par_low.py</usecaseid>
    <group>Python script</group>
    <description>Python script that initializes

Pre-requisites
- PostgreSQL db on _host_ server at _port_TCP port accessable 
  with _dbuser_ and _dbpasswd_ authorisation, and a gal table 
  at schema sdss_dr7 with fields r, pz2, e_pz2, pz, e_pz,
  and bsz.</description>
    <command>python 2par_low.py \
       --host %%host%% \
       --user %%dbuser%% \
       --pass %%dbpasswd%% \
       --port %%tcpport%% \
       --file %%pickle_filename%% \
       --work-directory %%working_directory%%</command>
    <preparingTimeoutInSeconds>1200</preparingTimeoutInSeconds>
    <executionTimeoutInSeconds>1800</executionTimeoutInSeconds>
    <tags>
      <string>dbpasswd</string>
      <string>dbuser</string>
      <string>host</string>
      <string>pickle_filename</string>
      <string>tcpport</string>
      <string>working_directory</string>
    </tags>
    <REs />
    <queue__preferred />
    <queue__deny />
    <static__inputs>
      <de.uni__luebeck.inb.knowarc.usecases.ScriptInputStatic>
        <tag>2par_low.py</tag>
        <file>true</file>
        <tempFile>false</tempFile>
        <binary>false</binary>
        <charsetName>MacRoman</charsetName>
        <forceCopy>false</forceCopy>
        <content class="string">#!/usr/bin/env python
# -*- coding: utf-8 -*-

import psycopg2 as pg
import numpy
import pylab
import time
import pickle
import os

default_schema="sdss_dr7" 

from optparse import OptionParser
parser = OptionParser()
parser.add_option("-F", "--file", dest="filename",
                  help="write sample to FILE", 
                  default="par_low.pckl",
                  metavar="FILE")
parser.add_option("-U", "--user",
                  dest="dbuser", 
                  help="username in gal database")
parser.add_option("-P", "--pass",
                  dest="dbpasswd", 
                  help="password for user in gal database",
                  metavar="user")
parser.add_option("-H", "--host",
                  dest="host", 
                  help="hostname of the database server")
parser.add_option("-p", "--port",
                  dest="port", 
                  help="TCP port of the database server",
                  default=5432,
                  metavar="port")              
parser.add_option("-S", "--schema",
                  dest="schema", 
                  help="database SCHEMA (defaults to %s)" % default_schema,
                  default=default_schema,
                  metavar="SCHEMA")  
parser.add_option("-w", "--work-directory",
                  dest="wd",
                  help="use WD as working directory", 
                  default=os.getcwd(),
                  metavar="WD")
            

(options, args) = parser.parse_args()

if options.port != None:
    options.port = int(options.port)

optionsAreNotValid = (
                    options.dbuser   == None or
                    options.dbpasswd == None or
                    options.host     == None or options.host == "" or
                    options.port     == None or type(options.port) != type(5432) or
                    options.filename == None or options.filename == "" or
                    options.schema   == None or options.schema == "" or
                    options.wd       == None or options.wd == ""
)

if optionsAreNotValid:
    raise ValueError("Options not valid")

def obf(cadena):
  if cadena == None:
    a = -1.
  else:
    a = float(cadena)
  return a

db = pg.connect(
        database=options.schema,
        host=options.host,
        user=options.dbuser,
        password=options.dbpasswd,
        port=options.port
)
c = db.cursor()

t0 = time.time()
c.execute("""
SELECT g.r, g.pz2, g.e_pz2, g.pz, g.e_pz
FROM gal g
WHERE g.bsz IS NULL
""")
db.commit()
n = c.rowcount
t = time.time()
print "%i tiempo: %f5.2 s"%(n,t-t0)
t0 = t

#r = numpy.zeros(n,dtype='Float64')
#pz2 = numpy.zeros(n,dtype='Float64')
#e_pz2 = numpy.zeros(n,dtype='Float64')
#pz = numpy.zeros(n,dtype='Float64')
#e_pz = numpy.zeros(n,dtype='Float64')
#pzf = numpy.zeros(n,dtype='Float64')
#e_pzf = numpy.zeros(n,dtype='Float64')
#codf = numpy.zeros(n,dtype='Int32')

r     = numpy.zeros(n,dtype='Float32')
pz2   = numpy.zeros(n,dtype='Float32')
e_pz2 = numpy.zeros(n,dtype='Float32')
pz    = numpy.zeros(n,dtype='Float32')
e_pz  = numpy.zeros(n,dtype='Float32')
pzf   = numpy.zeros(n,dtype='Float32')
e_pzf = numpy.zeros(n,dtype='Float32')
codf  = numpy.zeros(n,dtype='Int16')

for i in range(n):
  record = c.fetchone()
  r[i] = float(record[0])
  pz2[i] = obf(record[1])
  e_pz2[i] = obf(record[2])
  pz[i] = obf(record[3])
  e_pz[i] = obf(record[4])
  if (r[i] &gt;= 17.77)and(pz2[i] != -1.):
    pzf[i] = pz2[i]
    e_pzf[i] = e_pz2[i]
  elif (r[i] &gt;= 17.77)and(pz2[i] == -1.)and(pz[i]!= -1.):
    pzf[i] = pz[i]
    e_pzf[i] = e_pz[i]
  elif (r[i] &gt;= 17.77)and(pz2[i] == -1.)and(pz[i]== -1.):
    pzf[i] = -1.
    e_pzf[i] = -1.
  elif (r[i] &lt; 17.77)and(pz[i] != -1.):
    pzf[i] = pz[i]
    e_pzf[i] = e_pz[i]
  elif (r[i] &lt; 17.77)and(pz[i] == -1.)and(pz2[i] != -1.):
    pzf[i] = pz2[i]
    e_pzf[i] = e_pz2[i]
  elif (r[i] &lt; 17.77)and(pz[i] == -1.)and(pz2[i] == -1.):
    pzf[i] = -1.
    e_pzf[i] = -1.
t = time.time()
print "tiempo: %f5.2 s"%(t-t0)
t0 = t

rp = numpy.arange(14.5,22.5,0.5)  # Limits of the magnitude r
N = numpy.arange(0.1,3.2,0.2)     # Limits of sigmas
z = numpy.arange(0.00,0.11,0.01)  # Limits of redshift

par = numpy.zeros((len(N),len(rp),len(z)),dtype="Int32")

t1 = time.time()
for i,zo in enumerate(z):
  for j,No in enumerate(N):
    for k,rpo in enumerate(rp):
      b = len(numpy.where((r &lt; rpo)&amp;(numpy.absolute(pzf-zo)/e_pzf &lt; No)&amp;(pzf != -1.))[0])
      par[j,k,i] = b
      t = time.time()
      print "z: %5.2f; N: %5.2f; r: %5.2f - %i (time: %5.2f)"%(zo,No,rpo,b,t-t1)
      t1 = t
#
t = time.time()
print "tiempo: %f5.2 s"%(t-t0)
t0 = t

cwd = os.getcwd()
os.chdir(options.wd)
fullwd = os.getcwd()
pickle.dump(par,open(options.filename,"wb"))

print "Pickle file dumped on:"
print "%s/%s" % (fullwd, options.filename)</content>
      </de.uni__luebeck.inb.knowarc.usecases.ScriptInputStatic>
    </static__inputs>
    <inputs>
      <entry>
        <string>host</string>
        <de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
          <tag>host</tag>
          <file>false</file>
          <tempFile>false</tempFile>
          <binary>false</binary>
          <charsetName>MacRoman</charsetName>
          <forceCopy>false</forceCopy>
          <list>false</list>
          <concatenate>false</concatenate>
          <mime />
        </de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
      </entry>
      <entry>
        <string>working_directory</string>
        <de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
          <tag>working_directory</tag>
          <file>false</file>
          <tempFile>false</tempFile>
          <binary>false</binary>
          <charsetName>MacRoman</charsetName>
          <forceCopy>false</forceCopy>
          <list>false</list>
          <concatenate>false</concatenate>
          <mime />
        </de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
      </entry>
      <entry>
        <string>dbpasswd</string>
        <de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
          <tag>dbpasswd</tag>
          <file>false</file>
          <tempFile>false</tempFile>
          <binary>false</binary>
          <charsetName>MacRoman</charsetName>
          <forceCopy>false</forceCopy>
          <list>false</list>
          <concatenate>false</concatenate>
          <mime />
        </de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
      </entry>
      <entry>
        <string>tcpport</string>
        <de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
          <tag>tcpport</tag>
          <file>false</file>
          <tempFile>false</tempFile>
          <binary>false</binary>
          <charsetName>MacRoman</charsetName>
          <forceCopy>false</forceCopy>
          <list>false</list>
          <concatenate>false</concatenate>
          <mime />
        </de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
      </entry>
      <entry>
        <string>dbuser</string>
        <de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
          <tag>dbuser</tag>
          <file>false</file>
          <tempFile>false</tempFile>
          <binary>false</binary>
          <charsetName>MacRoman</charsetName>
          <forceCopy>false</forceCopy>
          <list>false</list>
          <concatenate>false</concatenate>
          <mime />
        </de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
      </entry>
      <entry>
        <string>pickle_filename</string>
        <de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
          <tag>pickle_filename</tag>
          <file>false</file>
          <tempFile>false</tempFile>
          <binary>false</binary>
          <charsetName>MacRoman</charsetName>
          <forceCopy>false</forceCopy>
          <list>false</list>
          <concatenate>false</concatenate>
          <mime />
        </de.uni__luebeck.inb.knowarc.usecases.ScriptInputUser>
      </entry>
    </inputs>
    <outputs />
    <includeStdIn>false</includeStdIn>
    <includeStdOut>true</includeStdOut>
    <includeStdErr>true</includeStdErr>
    <validReturnCodes>
      <int>0</int>
    </validReturnCodes>
  </useCaseDescription>
  <edited>false</edited>
</net.sf.taverna.t2.activities.externaltool.ExternalToolActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="dbpasswd" depth="0" /><port name="dbuser" depth="0" /><port name="tcpport" depth="0" /><port name="host" depth="0" /><port name="pickle_filename" depth="0" /><port name="working_directory" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>get_last_line_of_STDIN</name><inputPorts><port><name>STDIN</name><depth>0</depth></port></inputPorts><outputPorts><port><name>STDOUT</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>external-tool-activity</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.activities.externaltool.ExternalToolActivity</class><inputMap><map from="STDIN" to="STDIN" /></inputMap><outputMap><map from="STDOUT" to="STDOUT" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.externaltool.ExternalToolActivityConfigurationBean xmlns="">
  <mechanismType>789663B8-DA91-428A-9F7D-B3F3DA185FD4</mechanismType>
  <mechanismName>default local</mechanismName>
  <mechanismXML>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;
&lt;localInvocation&gt;&lt;shellPrefix&gt;/bin/sh -c&lt;/shellPrefix&gt;&lt;linkCommand&gt;/bin/ln -s %%PATH_TO_ORIGINAL%% %%TARGET_NAME%%&lt;/linkCommand&gt;&lt;/localInvocation&gt;&#xD;
</mechanismXML>
  <externaltoolid>2e372bd6-ba1f-4264-9e1d-ad0256a2ea10</externaltoolid>
  <useCaseDescription>
    <usecaseid />
    <description />
    <command>tail -n 1</command>
    <preparingTimeoutInSeconds>1200</preparingTimeoutInSeconds>
    <executionTimeoutInSeconds>1800</executionTimeoutInSeconds>
    <tags />
    <REs />
    <queue__preferred />
    <queue__deny />
    <static__inputs />
    <inputs />
    <outputs />
    <includeStdIn>true</includeStdIn>
    <includeStdOut>true</includeStdOut>
    <includeStdErr>true</includeStdErr>
    <validReturnCodes>
      <int>0</int>
    </validReturnCodes>
  </useCaseDescription>
  <edited>false</edited>
</net.sf.taverna.t2.activities.externaltool.ExternalToolActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="STDIN" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>2par_low.py</processor><port>dbpasswd</port></sink><source type="dataflow"><port>db_password</port></source></datalink><datalink><sink type="processor"><processor>2par_low.py</processor><port>dbuser</port></sink><source type="dataflow"><port>db_username</port></source></datalink><datalink><sink type="processor"><processor>2par_low.py</processor><port>tcpport</port></sink><source type="dataflow"><port>postgresql_server_port</port></source></datalink><datalink><sink type="processor"><processor>2par_low.py</processor><port>host</port></sink><source type="dataflow"><port>postgresql_server_ip</port></source></datalink><datalink><sink type="processor"><processor>2par_low.py</processor><port>pickle_filename</port></sink><source type="dataflow"><port>pickle_filename</port></source></datalink><datalink><sink type="processor"><processor>2par_low.py</processor><port>working_directory</port></sink><source type="dataflow"><port>working_directory</port></source></datalink><datalink><sink type="processor"><processor>get_last_line_of_STDIN</processor><port>STDIN</port></sink><source type="processor"><processor>2par_low.py</processor><port>STDOUT</port></source></datalink><datalink><sink type="dataflow"><port>path_to_galaxy_sample</port></sink><source type="processor"><processor>get_last_line_of_STDIN</processor><port>STDOUT</port></source></datalink><datalink><sink type="dataflow"><port>Tool_STDOUT</port></sink><source type="processor"><processor>2par_low.py</processor><port>STDOUT</port></source></datalink><datalink><sink type="dataflow"><port>Tool_STDERR</port></sink><source type="processor"><processor>2par_low.py</processor><port>STDERR</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>08fe28f1-94b9-4488-8e6c-fec8d6a14f99</identification>
      </annotationBean>
      <date>2013-01-04 20:14:14.281 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow saves a tabular *.pckl Python pickle dataset in the local file system, containing values calculated on physical parameters associated to potential companions of a sample of target galaxies. These original physical parameters are extracted from a postgreSQL database, containing information of all galaxies covered by the SDSS spectroscopic survey. The workflow first access the external database located in the AMIGA server and selects the target galaxies from the sample (those having spectroscopic redshift between 0.03 and 0.1). It then creates a tabular gridded datacube with values associated to potential
neighbours. These values are calculates for each point of a 3D space defined by the axes: magnitude in r band, photometric redshift and sigma level of detection. The input default values to build the parameterised
datacube are:

- 14.5&lt;mr&lt;22.5 - step 0.5
- 0 &lt;z&lt;0.11 - step 0.01
- 0.1&lt;sigma&lt;3.2 - step 0.2

Auxiliary function libraries and scripts are also copied in local file system, and the PYTHONPATH environmental variable is set to a value provided by the user as the Working Path of the digital experiment.
Other user provided input values are the database connection settings: hostname, login and password.

Execution environment

The first requirement to run the workflows provided by both ROs is Taverna Workbench2 2.4 or higher. AstroTaverna (Taverna plugin) is also needed in order to get functionalities related with Virtual
Observatory web services queries and management of standard VOTable data formats. In general, the execution environment is a Linux distribution including Python4 2.x and a bash shell, with psycopg and numpy Python packages. Access to a PostgreSQL database storing the physical parameters provided by SDSS is also needed; a dump file of database may be downloaded from the AMIGA web server and in order to be deployed and accessible from a local execution environment. </text>
      </annotationBean>
      <date>2013-01-04 20:39:03.322 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f9b001af-a9dc-482c-8994-bb4d1dd0e95e</identification>
      </annotationBean>
      <date>2013-01-04 20:39:07.708 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>2611e23f-05ef-47d3-a29d-b6b085bc42de</identification>
      </annotationBean>
      <date>2013-01-04 20:21:48.330 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>97635c93-19a8-4212-bd8a-f887c63283ba</identification>
      </annotationBean>
      <date>2012-09-27 08:26:42.221 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>4be1ad0a-613d-4abe-87a2-bf22df4d721f</identification>
      </annotationBean>
      <date>2012-09-26 20:20:11.502 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>5464b9f0-21cf-4056-8c78-56dd81774222</identification>
      </annotationBean>
      <date>2012-09-27 07:36:37.251 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>9afb3cc8-16ef-47ca-87f7-74e35f8aca72</identification>
      </annotationBean>
      <date>2012-09-27 08:28:17.381 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>490ea08b-5d94-4fe2-8fdf-cff012b132c0</identification>
      </annotationBean>
      <date>2012-09-27 07:41:04.812 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>68c07933-38f7-4e55-8bda-3260c9c3424d</identification>
      </annotationBean>
      <date>2012-09-26 20:40:06.850 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>Juande Santander-Vela</text>
      </annotationBean>
      <date>2012-09-26 20:25:45.588 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e89f888d-c40b-4655-93c5-bca26bcd4e1e</identification>
      </annotationBean>
      <date>2012-09-28 11:32:12.385 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d501b054-566e-4618-b8c8-59df7e4f88a9</identification>
      </annotationBean>
      <date>2012-09-27 08:31:44.86 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>2ff51982-39d9-4455-b7d7-a0e50d7e0af7</identification>
      </annotationBean>
      <date>2012-09-27 08:30:24.383 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>fa9793de-75e3-44bf-bf5e-8578c7a78c40</identification>
      </annotationBean>
      <date>2012-09-26 20:22:18.118 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>4c600360-3488-4475-a9d1-a0ffad1a1582</identification>
      </annotationBean>
      <date>2012-09-26 20:29:08.669 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Intialize Sample</text>
      </annotationBean>
      <date>2013-01-04 20:21:37.611 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></dataflow></workflow>