<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-biodiversity-2.5.0"><dataflow id="083e53c1-c921-476a-893f-ec2fa51f4a70" role="top"><name>Exploration_of_fishi</name><inputPorts><port><name>StockAggr</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>FEPS_TR_1</text>
      </annotationBean>
      <date>2014-09-08 10:48:26.983 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>The stock aggregate, with abundance represented as terminal run (TR), is user defined from the list of significant stocks from the regression and elasticity analyses. The user needs to see “Elasticities of Interaction Method Matrix Pert._Population_(Beta Regressions).pdf” or “Elasticity of Interactions_Population.csv” to select relevant stock aggregates for further analysis.</text>
      </annotationBean>
      <date>2014-09-08 10:48:17.112 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>TRE_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This file contains the time series of terminal run equivalents (TREs) of all ER indicator stocks.</text>
      </annotationBean>
      <date>2014-09-11 17:25:04.966 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text />
      </annotationBean>
      <date>2014-09-11 17:20:13.553 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>ER_Indicators_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This file shows the exploitation rate (ER) indicator stocks used to represent exploitation-rate time series with terminal-run time series of Chinook salmon aggregates. </text>
      </annotationBean>
      <date>2014-09-11 17:23:02.992 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text />
      </annotationBean>
      <date>2014-09-11 17:19:34.64 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>TRE_HR_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text />
      </annotationBean>
      <date>2014-09-11 17:20:02.881 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This file contains the time series of terminal run equivalent (TRE) ocean harvest rates of ER indicator stocks.

Chinook salmon is an anadromous and semelparous species that spend 1-5 years in the ocean before returning to their natal streams to spawn. For the exploration of fishing scenarios where changes in terminal run size occur as a result of changes in ocean (i.e. pre-terminal) harvest rates, terminal run equivalents (TRE) were used to account for the fact that only a portion of the fish not caught in ocean fisheries in a given year is expected to become part of the terminal run according to their maturation rates (MR), which are time variant and stock specific. Age-2 Chinook were not included in this equation because RKW prey mostly on age-3 and older Chinook. TREs were then used to compute both proportional increases in terminal run size in the absence of pre-terminal (i.e. ocean) fishing and the terminal run scalars resulting from a specified change in ocean harvest rates in exploitation rate indicator stocks. These scalars were then used to calculate changes in terminal run of a stock of interest (more details in Vélez-Espino et al. In press). 
</text>
      </annotationBean>
      <date>2014-09-11 17:24:47.432 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Term_Run_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text />
      </annotationBean>
      <date>2014-09-11 17:19:55.49 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This file contains the time series of terminal run for each of the ER indicator stocks.</text>
      </annotationBean>
      <date>2014-09-11 17:20:42.138 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Workspace</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>An R Workspace that transfers values from the Resident killer whale-chinook salmon interactions (main) workflow to the Exploration of fishing scenario (post-processing) workflow. The zip file must be provided as an input to the post-processing workflow in order for it to have access to values generated in the main workflow. Therefore, take in account the input values used to run the main workflow.</text>
      </annotationBean>
      <date>2014-09-11 17:21:45.108 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Mult</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1.5</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This is a user-defined multiplier of ocean harvest rates impacting terminal runs. Mult = 0.0 indicates the closure of ocean fisheries; Mult = 1.0 indicates no change in base values; Mult = 1.5 indicates a 50% increase in ocean HRs. </text>
      </annotationBean>
      <date>2014-09-08 10:47:04.210 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>StockAggrOA</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>CW_OA_2</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>The stock aggregate, with abundance represented as ocean abundance (OA), is user defined from the list of significant stocks from the regression and elasticity analyses. The user needs to see “Elasticities of Interaction Method Matrix Pert._Population_(Beta Regressions).pdf” or “Elasticity of Interactions_Population.csv” to select relevant stock aggregates for further analysis.</text>
      </annotationBean>
      <date>2014-09-08 10:48:43.406 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>MLT</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This is a user-defined inverse multiplier for the harvest rate (HR) that affects the stock aggregates directly. MLT is inversely proportional to HRs but directly proportional to killer whale vital rates. MLT = 0.0 is used to maximize HRs.  MLT values between 1.0 and 2.0 are used to represent increments in ocean abundance proportional to percent reductions in HRs.</text>
      </annotationBean>
      <date>2014-09-08 10:46:43.158 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1.64</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>UseFImpacts</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>FALSE</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Instead of ocean abundance, the user can select time series of fishery impacts to run the analyses. In this case, the interaction would be between killer whale vital rates and fishing impacts rather than Chinook salmon ocean abundance. Choose “FALSE” to conduct analyses at the ocean abundance level.</text>
      </annotationBean>
      <date>2014-09-08 10:50:05.28 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>zipFile</name><lastPredictedDepth>0</lastPredictedDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>Projections_of_Pop_Size_SRKW_1987-2011_CW_OA_2
Projections_of_Pop_Size_SRKW_1987-2011_FEPS_TR_1
IID_OA_Matrices_CW_OA_2_SRKW
IID_S_Matrices_FEPS_TR_1_SRKW
Mean_Matrix_Scenario_CW_OA_2_SRKW
Mean_Matrix_Scenario_FEPS_TR_1_SRKW
SD_Matrix_Scenario_CW_OA_2_SRKW
SD_Matrix_Scenario_FEPS_TR_1_SRKW</text>
      </annotationBean>
      <date>2014-09-11 17:18:30.306 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Zip file with the results of workflow.
Results when a run is done with the defaults inputs (see tutorial). </text>
      </annotationBean>
      <date>2014-09-11 17:17:17.811 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></outputPorts><processors><processor><name>Resident_killer_whal</name><inputPorts><port><name>StockAggr</name><depth>0</depth></port><port><name>TRE_R</name><depth>0</depth></port><port><name>ER_Indicators_R</name><depth>0</depth></port><port><name>TRE_HR_R</name><depth>0</depth></port><port><name>Term_Run_R</name><depth>0</depth></port><port><name>Workspace</name><depth>0</depth></port><port><name>Mult</name><depth>0</depth></port><port><name>StockAggrOA</name><depth>0</depth></port><port><name>MLT</name><depth>0</depth></port><port><name>UseFImpacts</name><depth>0</depth></port></inputPorts><outputPorts><port><name>endYear</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>startYear</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>population</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Mean_Matrix_Scenario_OA</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>IID_S_Matrices</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>SD_Matrix_Scenario_OA</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>IID_OA_Matrices</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Mean_Matrix_Scenario_S</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>SD_Matrix_Scenario_S</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Projections_of_Pop_Size_S</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Projections_of_Pop_Size_OA</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="Mult" to="Mult" /><map from="TRE_R" to="TRE_R" /><map from="UseFImpacts" to="UseFImpacts" /><map from="Workspace" to="Workspace" /><map from="ER_Indicators_R" to="ER_Indicators_R" /><map from="MLT" to="MLT" /><map from="StockAggrOA" to="StockAggrOA" /><map from="StockAggr" to="StockAggr" /><map from="Term_Run_R" to="Term_Run_R" /><map from="TRE_HR_R" to="TRE_HR_R" /></inputMap><outputMap><map from="endYear" to="endYear" /><map from="Projections_of_Pop_Size_S" to="Projections_of_Pop_Size_S" /><map from="Projections_of_Pop_Size_OA" to="Projections_of_Pop_Size_OA" /><map from="startYear" to="startYear" /><map from="Mean_Matrix_Scenario_OA" to="Mean_Matrix_Scenario_OA" /><map from="IID_S_Matrices" to="IID_S_Matrices" /><map from="SD_Matrix_Scenario_OA" to="SD_Matrix_Scenario_OA" /><map from="SD_Matrix_Scenario_S" to="SD_Matrix_Scenario_S" /><map from="IID_OA_Matrices" to="IID_OA_Matrices" /><map from="Mean_Matrix_Scenario_S" to="Mean_Matrix_Scenario_S" /><map from="population" to="population" /></outputMap><configBean encoding="dataflow"><dataflow ref="7b1bf026-4ce4-48dc-9f93-2c12f33b3bb1" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="StockAggr" depth="0" /><port name="TRE_R" depth="0" /><port name="ER_Indicators_R" depth="0" /><port name="TRE_HR_R" depth="0" /><port name="Term_Run_R" depth="0" /><port name="Workspace" depth="0" /><port name="Mult" depth="0" /><port name="StockAggrOA" depth="0" /><port name="MLT" depth="0" /><port name="UseFImpacts" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Create_zip_file</name><inputPorts><port><name>IID_S_Matrices</name><depth>0</depth></port><port><name>SD_Matrix_Scenario_S</name><depth>0</depth></port><port><name>Mean_Matrix_Scenario_OA</name><depth>0</depth></port><port><name>Projections_of_Pop_Size_S</name><depth>0</depth></port><port><name>Mean_Matrix_Scenario_S</name><depth>0</depth></port><port><name>SD_Matrix_Scenario_OA</name><depth>0</depth></port><port><name>IID_OA_Matrices</name><depth>0</depth></port><port><name>StockAggrOA</name><depth>0</depth></port><port><name>StockAggr</name><depth>0</depth></port><port><name>Projections_of_Pop_Size_OA</name><depth>0</depth></port><port><name>EndYear</name><depth>0</depth></port><port><name>StartYear</name><depth>0</depth></port><port><name>Population</name><depth>0</depth></port></inputPorts><outputPorts><port><name>zipFile</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="Mean_Matrix_Scenario_OA" to="Mean_Matrix_Scenario_OA" /><map from="IID_S_Matrices" to="IID_S_Matrices" /><map from="SD_Matrix_Scenario_S" to="SD_Matrix_Scenario_S" /><map from="IID_OA_Matrices" to="IID_OA_Matrices" /><map from="Mean_Matrix_Scenario_S" to="Mean_Matrix_Scenario_S" /><map from="StockAggr" to="StockAggr" /><map from="StartYear" to="StartYear" /><map from="Projections_of_Pop_Size_S" to="Projections_of_Pop_Size_S" /><map from="Projections_of_Pop_Size_OA" to="Projections_of_Pop_Size_OA" /><map from="SD_Matrix_Scenario_OA" to="SD_Matrix_Scenario_OA" /><map from="Population" to="Population" /><map from="EndYear" to="EndYear" /><map from="StockAggrOA" to="StockAggrOA" /></inputMap><outputMap><map from="zipFile" to="zipFile" /></outputMap><configBean encoding="dataflow"><dataflow ref="1d8dabec-4fc3-42c0-b317-a5f88576999d" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="IID_S_Matrices" depth="0" /><port name="SD_Matrix_Scenario_S" depth="0" /><port name="Mean_Matrix_Scenario_OA" depth="0" /><port name="Projections_of_Pop_Size_S" depth="0" /><port name="Mean_Matrix_Scenario_S" depth="0" /><port name="SD_Matrix_Scenario_OA" depth="0" /><port name="IID_OA_Matrices" depth="0" /><port name="StockAggrOA" depth="0" /><port name="StockAggr" depth="0" /><port name="Projections_of_Pop_Size_OA" depth="0" /><port name="EndYear" depth="0" /><port name="StartYear" depth="0" /><port name="Population" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Validate_UseFImpacts</name><inputPorts><port><name>s</name><depth>0</depth></port></inputPorts><outputPorts><port><name>s</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="s" to="s" /></inputMap><outputMap><map from="s" to="s" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>s</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>s</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>switch(s)
{
case "FALSE":
case "TRUE":
	break;
default:
	throw RuntimeException("Invalid value");
}
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="s" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>StockAggr</port></sink><source type="dataflow"><port>StockAggr</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>TRE_R</port></sink><source type="dataflow"><port>TRE_R</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>ER_Indicators_R</port></sink><source type="dataflow"><port>ER_Indicators_R</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>TRE_HR_R</port></sink><source type="dataflow"><port>TRE_HR_R</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>Term_Run_R</port></sink><source type="dataflow"><port>Term_Run_R</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>Workspace</port></sink><source type="dataflow"><port>Workspace</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>Mult</port></sink><source type="dataflow"><port>Mult</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>StockAggrOA</port></sink><source type="dataflow"><port>StockAggrOA</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>MLT</port></sink><source type="dataflow"><port>MLT</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>UseFImpacts</port></sink><source type="processor"><processor>Validate_UseFImpacts</processor><port>s</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>IID_S_Matrices</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>IID_S_Matrices</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>SD_Matrix_Scenario_S</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>SD_Matrix_Scenario_S</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>Mean_Matrix_Scenario_OA</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>Mean_Matrix_Scenario_OA</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>Projections_of_Pop_Size_S</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>Projections_of_Pop_Size_S</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>Mean_Matrix_Scenario_S</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>Mean_Matrix_Scenario_S</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>SD_Matrix_Scenario_OA</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>SD_Matrix_Scenario_OA</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>IID_OA_Matrices</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>IID_OA_Matrices</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StockAggrOA</port></sink><source type="dataflow"><port>StockAggrOA</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StockAggr</port></sink><source type="dataflow"><port>StockAggr</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>Projections_of_Pop_Size_OA</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>Projections_of_Pop_Size_OA</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>EndYear</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>endYear</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StartYear</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>startYear</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>Population</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>population</port></source></datalink><datalink><sink type="processor"><processor>Validate_UseFImpacts</processor><port>s</port></sink><source type="dataflow"><port>UseFImpacts</port></source></datalink><datalink><sink type="dataflow"><port>zipFile</port></sink><source type="processor"><processor>Create_zip_file</processor><port>zipFile</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>3781e6c5-e4d4-45da-b74f-d829179ee95d</identification>
      </annotationBean>
      <date>2014-09-08 10:57:16.882 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>defac11b-7626-45c2-a029-834a34fea4b9</identification>
      </annotationBean>
      <date>2014-09-24 14:02:19.506 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>dfa384ae-05d2-441a-8ded-512fcad1f079</identification>
      </annotationBean>
      <date>2014-09-19 21:51:40.953 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>55e8009c-30d2-4477-86fa-12e3a446f469</identification>
      </annotationBean>
      <date>2014-09-18 16:07:51.266 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d95df170-404f-4f4d-b453-2b44e28b6551</identification>
      </annotationBean>
      <date>2014-09-19 21:11:58.643 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d5ebe844-a676-44e6-8138-07a88c18e57c</identification>
      </annotationBean>
      <date>2014-09-19 21:33:16.219 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>cda57cd1-5f09-4374-a054-f6c3fa93192f</identification>
      </annotationBean>
      <date>2014-09-19 15:57:02.693 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>40c28a03-f3a2-4063-a77e-07ef95f038a5</identification>
      </annotationBean>
      <date>2014-09-08 10:48:27.163 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7c3de942-98a0-4ef9-bb89-c55a0a8f2036</identification>
      </annotationBean>
      <date>2014-09-11 19:32:52.269 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>c9070e8a-ff3e-4ab8-8d43-e30a861c981c</identification>
      </annotationBean>
      <date>2014-08-29 10:44:38.302 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>b8b7158a-af43-4285-a5a9-579ac363b4ee</identification>
      </annotationBean>
      <date>2014-08-28 14:37:27.889 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>63a3a885-6d48-4f9d-bcfb-0f54da20a3e4</identification>
      </annotationBean>
      <date>2014-09-18 16:35:34.421 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>fff47fdb-f894-437d-b6f4-32ae9e5de8a0</identification>
      </annotationBean>
      <date>2014-09-24 13:42:56.254 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>3615cae8-088e-4a70-a2d9-ea710b10629c</identification>
      </annotationBean>
      <date>2014-09-10 11:48:26.126 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>96ba3463-9daa-45eb-b802-524a6862b00b</identification>
      </annotationBean>
      <date>2014-09-08 11:05:08.948 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>1915ef29-664f-4e4a-bd35-64ec503a1022</identification>
      </annotationBean>
      <date>2014-09-11 17:24:47.622 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow must run after the workflow:  Resident killer whale-chinook salmon interactions. The interaction workflows generates a PostWorkspace file, this is a zip file and it is an R Workspace that transfers values from the Resident killer whale-chinook salmon interactions (main) workflow to the Exploration of fishing scenario (post-processing) workflow. 


This workflow merges statistical inference derived from linkages between RKW vital rates (survival probability and fecundity rates) and chinook salmon abundance with demographic perturbation analysis and population viability analysis to address some of the pressing questions that have recently engaged the efforts of scientists and managers interested in: (1) the role of chinook salmon abundance in the population dynamics of RKW; and (2) how RKW population viability is expected to respond to changes in chinook mortality owing to harvest.

This workflow can be used to analyze interactions between chinook salmon abundance from specific stock aggregates and killer whale vital rates, the effect of these interactions on killer whale population growth, and the exploration of Chinook salmon fishing scenarios on killer whale population growth and short term projections of population size. See necessary input data.

To run this workflow in Taverna Workbench Biodiversity 2.5 requires an Rserve installation with the popbio, lattice, betareg, Formula and R.utils packages installed.

This workflow has been created by the Biodiversity Virtual e-Laboratory (BioVeL http://www.biovel.eu/) project and Fisheries and Oceans of Canada, BC, Canada. (http://www.pac.dfo-mpo.gc.ca/index-eng.html). BioVeL is funded by the EU’s Seventh Framework Program, grant no. 283359.

References:

Vélez-Espino, L.A., John K.B. Ford, Eric Ward, Chuck K. Parken, Larrie LaVoy, Ken Balcomb, M. Bradley Hanson, Dawn. P. Noren, Graeme Ellis, Tom Cooney, and Rishi Sharma. 2013. Sensitivity of resident Killer Whale population dynamics to Chinook salmon abundance. Completion Report, Pacific Salmon Commission, Southern Boundary Restoration and Enhancement Fund, Vancouver BC. 191 p.

Vélez-Espino, L.A., Ford, J.K.B., Araujo, H.A., Ellis, G., Parken, C.K, &amp; Balcomb, K. 2014. Comparative demography and viability of northeast Pacific resident killer whale populations at risk. Can. Tech. Rep. Fish. Aquat. Sci. 3084: vi + 56 p.

Vélez-Espino, L.A., John K.B. Ford, H. Andres Araujo, Graeme Ellis, Charles K. Parken and Rishi Sharma. 2014. Relative importance of Chinook salmon abundance  on resident killer whale population growth and viability. Aquatic Conservation: Marine and Freshwater Ecosystems. Article first published online: 21 AUG 2014. DOI: 10.1002/aqc.2494.</text>
      </annotationBean>
      <date>2014-09-26 07:54:17.995 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Exploration of fishing scenarios</text>
      </annotationBean>
      <date>2014-09-10 11:48:24.750 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>86748f30-4b04-461b-a469-6e9f93a4035c</identification>
      </annotationBean>
      <date>2014-09-11 17:21:51.439 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>083e53c1-c921-476a-893f-ec2fa51f4a70</identification>
      </annotationBean>
      <date>2014-09-26 07:54:19.747 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>4c0744d2-d9bd-43dd-b0ab-0a9dbd2c9fa7</identification>
      </annotationBean>
      <date>2014-09-19 15:46:01.986 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f1612cb3-acfe-4cc4-8969-8b2e42ee5c59</identification>
      </annotationBean>
      <date>2014-09-19 15:27:50.722 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ea674676-802b-4f01-b5a6-ce7b8d2b1a63</identification>
      </annotationBean>
      <date>2014-09-10 09:15:21.980 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>L. Antonio Vélez-Espino, H. Andres Araujo, Maria Paula Balcazar-Vargas, Jonathan Giddy and Francisco Quevedo</text>
      </annotationBean>
      <date>2014-09-24 13:42:26.219 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f034c8ad-1a89-4741-8356-69931f2d5b64</identification>
      </annotationBean>
      <date>2014-08-28 14:23:22.191 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>a2ea0fb2-8c22-44be-9bef-76b157cdacaa</identification>
      </annotationBean>
      <date>2014-09-08 11:06:10.828 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>62c8c384-5530-4d32-a8f0-39a087e18898</identification>
      </annotationBean>
      <date>2014-09-19 21:38:19.337 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>774c9956-07bf-4b08-871d-07ad01ed0b1b</identification>
      </annotationBean>
      <date>2014-09-11 19:34:13.601 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e4be8289-927b-4317-842e-9deb02682854</identification>
      </annotationBean>
      <date>2014-09-11 17:25:13.619 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f9c79cad-eb2c-4aff-ad1a-dd667e5f7570</identification>
      </annotationBean>
      <date>2014-09-24 09:22:48.812 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ce9d76ca-c6b3-4aa3-9d6e-f4082ed73946</identification>
      </annotationBean>
      <date>2014-09-11 17:18:42.713 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="7b1bf026-4ce4-48dc-9f93-2c12f33b3bb1" role="nested"><name>Resident_killer_whal</name><inputPorts><port><name>StockAggr</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>FEPS_TR_1</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Label for Fishing Scenarios Terminal Run</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>TRE_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Terminal Run Equivalent data</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>ER_Indicators_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Stock Table</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>TRE_HR_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Terminal Run HR data</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Term_Run_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Terminal Run</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Workspace</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Mult</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1.5</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Multiplier of Ocean HR affecting TR</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>StockAggrOA</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>CW_OA_2</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Label for Chinook Ocean Abundance</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>MLT</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Multiplier. In OA is directly proportional to VR;  Between 1 and 2 only for increases in OA. FI  is an alternative measure of OA and is also directly proportional to VR.

The multiplier MLT can take values from 0.0 to 2.0, with the latter value impling HR=0</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1.64</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>UseFImpacts</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>FALSE</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Use Fishery Impacts data and definitions</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>SD_Matrix_Scenario_S</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>Mean_Matrix_Scenario_S</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>Projections_of_Pop_Size_S</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>SD_Matrix_Scenario_OA</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>Mean_Matrix_Scenario_OA</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>Projections_of_Pop_Size_OA</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>IID_S_Matrices</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>IID_OA_Matrices</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>startYear</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>endYear</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>population</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port></outputPorts><processors><processor><name>FishingScenariosTerminalRun_16</name><inputPorts><port><name>TRE_R</name><depth>0</depth></port><port><name>ER_Indicators_R</name><depth>0</depth></port><port><name>TRE_HR_R</name><depth>0</depth></port><port><name>Term_Run_R</name><depth>0</depth></port><port><name>Workspace</name><depth>0</depth></port><port><name>Mult</name><depth>0</depth></port><port><name>StockAggr</name><depth>0</depth></port><port><name>YearIntervals</name><depth>2</depth></port></inputPorts><outputPorts><port><name>SD_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Mean_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Projections_of_Pop_Size_IID</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>IID_S_Matrices</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="Mult" to="Mult" /><map from="TRE_R" to="TRE_R" /><map from="Workspace" to="Workspace" /><map from="ER_Indicators_R" to="ER_Indicators_R" /><map from="Term_Run_R" to="Term_Run_R" /><map from="StockAggr" to="StockAggr" /><map from="YearIntervals" to="YearIntervals" /><map from="TRE_HR_R" to="TRE_HR_R" /></inputMap><outputMap><map from="Mean_Matrix_Scenario" to="Mean_Matrix_Scenario" /><map from="IID_S_Matrices" to="IID_S_Matrices" /><map from="Projections_of_Pop_Size_IID" to="Projections_of_Pop_Size_IID" /><map from="SD_Matrix_Scenario" to="SD_Matrix_Scenario" /></outputMap><configBean encoding="dataflow"><dataflow ref="a1669af5-690b-43d8-964f-cadb3146658f" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="TRE_R" depth="0" /><port name="ER_Indicators_R" depth="0" /><port name="TRE_HR_R" depth="0" /><port name="Term_Run_R" depth="0" /><port name="Workspace" depth="0" /><port name="Mult" depth="0" /><port name="StockAggr" depth="0" /><port name="YearIntervals" depth="2" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ChinookOceanAbundance_17</name><inputPorts><port><name>Workspace</name><depth>0</depth></port><port><name>MLT</name><depth>0</depth></port><port><name>UseFImpacts</name><depth>0</depth></port><port><name>StockAggrOA</name><depth>0</depth></port><port><name>YearIntervals</name><depth>2</depth></port></inputPorts><outputPorts><port><name>SD_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Mean_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Projections_of_Pop_Size_PDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>IID_OA_Matrices</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="UseFImpacts" to="UseFImpacts" /><map from="Workspace" to="Workspace" /><map from="MLT" to="MLT" /><map from="StockAggrOA" to="StockAggrOA" /><map from="YearIntervals" to="YearIntervals" /></inputMap><outputMap><map from="Mean_Matrix_Scenario" to="Mean_Matrix_Scenario" /><map from="IID_OA_Matrices" to="IID_OA_Matrices" /><map from="Projections_of_Pop_Size_PDF" to="Projections_of_Pop_Size_PDF" /><map from="SD_Matrix_Scenario" to="SD_Matrix_Scenario" /></outputMap><configBean encoding="dataflow"><dataflow ref="9196a6d0-cd0c-40f3-8b86-4e397c39eb24" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Workspace" depth="0" /><port name="MLT" depth="0" /><port name="UseFImpacts" depth="0" /><port name="StockAggrOA" depth="0" /><port name="YearIntervals" depth="2" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>GetVariablesFromWorkspace</name><inputPorts><port><name>RWorkspace</name><depth>0</depth></port></inputPorts><outputPorts><port><name>endYearWorkspace</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>populationWorkspace</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>startYearWorkspace</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>yearIntervalsSelWorkspace</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="RWorkspace" to="RWorkspace" /></inputMap><outputMap><map from="yearIntervalsSelWorkspace" to="yearIntervalsSelWorkspace" /><map from="populationWorkspace" to="populationWorkspace" /><map from="endYearWorkspace" to="endYearWorkspace" /><map from="startYearWorkspace" to="startYearWorkspace" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>startYearWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>endYearWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>populationWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>yearIntervalsSelWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>rm(list= ls()[!(ls() %in% c('RWorkspace'))])
.wsfile&lt;-get("RWorkspace")
load(.wsfile)

startYearWorkspace &lt;- StartYear
endYearWorkspace &lt;- EndYear
populationWorkspace &lt;- Population
yearIntervalsSelWorkspace &lt;- toString(YearIntervalsSel)</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>startYearWorkspace</name>
      <symanticType>INTEGER</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>endYearWorkspace</name>
      <symanticType>INTEGER</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>populationWorkspace</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>yearIntervalsSelWorkspace</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="RWorkspace" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getListOfListYearIntervalsSel</name><inputPorts><port><name>sYearIntervalsSelWorkspace</name><depth>0</depth></port></inputPorts><outputPorts><port><name>yearIntervalsSel</name><depth>2</depth><granularDepth>2</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="sYearIntervalsSelWorkspace" to="sYearIntervalsSelWorkspace" /></inputMap><outputMap><map from="yearIntervalsSel" to="yearIntervalsSel" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>sYearIntervalsSelWorkspace</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>yearIntervalsSel</name>
      <depth>2</depth>
      <mimeTypes />
      <granularDepth>2</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>import java.util.ArrayList;

yearIntervalsSel = new ArrayList();
String[] intervals = sYearIntervalsSelWorkspace.split("list");
for (String interval: intervals){
  if (interval.length()&gt;1){
	  int startYear = Integer.parseInt(interval.substring(interval.indexOf("=")+1,interval.indexOf(",")).trim());
	  int endYear = Integer.parseInt(interval.substring(interval.lastIndexOf("=")+1,interval.indexOf(")")).trim());
      yearIntervalSel = new ArrayList();
	  yearIntervalSel.add(startYear);
	  yearIntervalSel.add(endYear);
	  yearIntervalsSel.add(yearIntervalSel);  	
  }
}

</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="sYearIntervalsSelWorkspace" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions><condition control="FishingScenariosTerminalRun_16" target="ChinookOceanAbundance_17" /></conditions><datalinks><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>TRE_R</port></sink><source type="dataflow"><port>TRE_R</port></source></datalink><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>ER_Indicators_R</port></sink><source type="dataflow"><port>ER_Indicators_R</port></source></datalink><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>TRE_HR_R</port></sink><source type="dataflow"><port>TRE_HR_R</port></source></datalink><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>Term_Run_R</port></sink><source type="dataflow"><port>Term_Run_R</port></source></datalink><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>Workspace</port></sink><source type="dataflow"><port>Workspace</port></source></datalink><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>Mult</port></sink><source type="dataflow"><port>Mult</port></source></datalink><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>StockAggr</port></sink><source type="dataflow"><port>StockAggr</port></source></datalink><datalink><sink type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>YearIntervals</port></sink><source type="processor"><processor>getListOfListYearIntervalsSel</processor><port>yearIntervalsSel</port></source></datalink><datalink><sink type="processor"><processor>ChinookOceanAbundance_17</processor><port>Workspace</port></sink><source type="dataflow"><port>Workspace</port></source></datalink><datalink><sink type="processor"><processor>ChinookOceanAbundance_17</processor><port>MLT</port></sink><source type="dataflow"><port>MLT</port></source></datalink><datalink><sink type="processor"><processor>ChinookOceanAbundance_17</processor><port>UseFImpacts</port></sink><source type="dataflow"><port>UseFImpacts</port></source></datalink><datalink><sink type="processor"><processor>ChinookOceanAbundance_17</processor><port>StockAggrOA</port></sink><source type="dataflow"><port>StockAggrOA</port></source></datalink><datalink><sink type="processor"><processor>ChinookOceanAbundance_17</processor><port>YearIntervals</port></sink><source type="processor"><processor>getListOfListYearIntervalsSel</processor><port>yearIntervalsSel</port></source></datalink><datalink><sink type="processor"><processor>GetVariablesFromWorkspace</processor><port>RWorkspace</port></sink><source type="dataflow"><port>Workspace</port></source></datalink><datalink><sink type="processor"><processor>getListOfListYearIntervalsSel</processor><port>sYearIntervalsSelWorkspace</port></sink><source type="processor"><processor>GetVariablesFromWorkspace</processor><port>yearIntervalsSelWorkspace</port></source></datalink><datalink><sink type="dataflow"><port>SD_Matrix_Scenario_S</port></sink><source type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>SD_Matrix_Scenario</port></source></datalink><datalink><sink type="dataflow"><port>Mean_Matrix_Scenario_S</port></sink><source type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>Mean_Matrix_Scenario</port></source></datalink><datalink><sink type="dataflow"><port>Projections_of_Pop_Size_S</port></sink><source type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>Projections_of_Pop_Size_IID</port></source></datalink><datalink><sink type="dataflow"><port>SD_Matrix_Scenario_OA</port></sink><source type="processor"><processor>ChinookOceanAbundance_17</processor><port>SD_Matrix_Scenario</port></source></datalink><datalink><sink type="dataflow"><port>Mean_Matrix_Scenario_OA</port></sink><source type="processor"><processor>ChinookOceanAbundance_17</processor><port>Mean_Matrix_Scenario</port></source></datalink><datalink><sink type="dataflow"><port>Projections_of_Pop_Size_OA</port></sink><source type="processor"><processor>ChinookOceanAbundance_17</processor><port>Projections_of_Pop_Size_PDF</port></source></datalink><datalink><sink type="dataflow"><port>IID_S_Matrices</port></sink><source type="processor"><processor>FishingScenariosTerminalRun_16</processor><port>IID_S_Matrices</port></source></datalink><datalink><sink type="dataflow"><port>IID_OA_Matrices</port></sink><source type="processor"><processor>ChinookOceanAbundance_17</processor><port>IID_OA_Matrices</port></source></datalink><datalink><sink type="dataflow"><port>startYear</port></sink><source type="processor"><processor>GetVariablesFromWorkspace</processor><port>startYearWorkspace</port></source></datalink><datalink><sink type="dataflow"><port>endYear</port></sink><source type="processor"><processor>GetVariablesFromWorkspace</processor><port>endYearWorkspace</port></source></datalink><datalink><sink type="dataflow"><port>population</port></sink><source type="processor"><processor>GetVariablesFromWorkspace</processor><port>populationWorkspace</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Resident killer whale population dynamics post processing 2014-07-10</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7b1bf026-4ce4-48dc-9f93-2c12f33b3bb1</identification>
      </annotationBean>
      <date>2014-09-24 09:22:20.499 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>L. Antonio Vélez-Espino, H. Andres Araujo and Maria Paula Balcazar-Vargas</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>312a6a58-42d1-4c84-b45a-2f0435b08ddd</identification>
      </annotationBean>
      <date>2014-09-19 15:55:30.726 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>61f2a401-3038-4cbe-97cf-5a9636e2bfb0</identification>
      </annotationBean>
      <date>2014-09-19 21:11:42.31 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>89551fe4-c2a4-462f-ba6f-25db7272d4c9</identification>
      </annotationBean>
      <date>2014-09-19 15:39:18.622 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0e595785-8eb6-4ea4-a3b7-a1a28f03a544</identification>
      </annotationBean>
      <date>2014-09-19 21:51:33.432 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>9a372468-df1f-451c-9ef7-0f82dca8e492</identification>
      </annotationBean>
      <date>2014-09-19 15:27:43.741 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>2aa293e3-9669-4c86-a96f-3f6f40193968</identification>
      </annotationBean>
      <date>2014-09-19 21:33:08.208 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>15383169-35fb-4365-8174-58699543082a</identification>
      </annotationBean>
      <date>2014-08-28 14:09:09.635 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow analyses the demography and population viability analysis (PVA) of endangered SRKW and threatened NRKW. Two distinct populations of resident killer whales (Orcinus orca) in the north-eastern Pacific Ocean have been listed in Canada and the U.S. as of conservation concern. The Southern Resident Killer Whale (SRKW) population is currently listed as endangered in both countries. The Northern Resident Killer Whale (NRKW) population has been listed as threatened in Canada.

This workflow can be used to analyse the demography and extinction probability of other killer whales populations. See necessary input data.

This workflow requires an instance of Rserve on localhost.

This workflow uses R packages popbio, lattice, betareg, Formula and R.utils.

This workflow has been created by the Biodiversity Virtual e-Laboratory (BioVeL http://www.biovel.eu/) project and Fisheries and Oceans of Canada, BC, Canada. (http://www.pac.dfo-mpo.gc.ca/index-eng.html). BioVeL is funded by the EU’s Seventh Framework Program, grant no. 283359.

References:

Vélez-Espino, L.A., Ford, J.K.B., Araujo, H.A., Ellis, G., Parken, C.K., and Balcomb, K.C. 2013a. Comparative demography and viability of northeast Pacific resident killer whale populations at risk. Biological Conservation BIOC-S-13-00856. In press.
</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>49da7c28-8abc-4293-a5ad-51a099bb2d0a</identification>
      </annotationBean>
      <date>2014-09-19 21:38:04.755 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="f365c569-b2f3-4a8b-a4a5-fde29c2675b9" role="nested"><name>Convert_Taverna_list</name><inputPorts><port><name>list_of_r_expressions</name><depth>2</depth><granularDepth>2</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>r_list_of_expressions</name><lastPredictedDepth>1</lastPredictedDepth><annotations /></port></outputPorts><processors><processor><name>RExpressionToString</name><inputPorts><port><name>stringlist</name><depth>1</depth></port></inputPorts><outputPorts><port><name>concatenated</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="stringlist" to="stringlist" /></inputMap><outputMap><map from="concatenated" to="concatenated" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>seperator</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>stringlist</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>concatenated</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>String seperatorString = "\n";
if (seperator != void) {
	seperatorString = seperator;
}
StringBuffer sb = new StringBuffer();
for (Iterator i = stringlist.iterator(); i.hasNext();) {
	String item = (String) i.next();
	sb.append(item);
	if (i.hasNext()) {
		sb.append(seperatorString);
	}
}
concatenated = sb.toString();
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="stringlist" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>JoinListOfStringsIntoRList</name><inputPorts><port><name>stringlist</name><depth>1</depth></port></inputPorts><outputPorts><port><name>output</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="stringlist" to="stringlist" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>stringlist</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>output</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>StringBuffer sb = new StringBuffer("list(");
for (Iterator i = stringlist.iterator(); i.hasNext();) {
	String item = (String) i.next();
	sb.append(item);
	if (i.hasNext()) {
		sb.append(",");
	}
}
sb.append(")");
List output = new ArrayList(1);
output.add(sb.toString());
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="stringlist" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>RExpressionToString</processor><port>stringlist</port></sink><source type="dataflow"><port>list_of_r_expressions</port></source></datalink><datalink><sink type="processor"><processor>JoinListOfStringsIntoRList</processor><port>stringlist</port></sink><source type="processor"><processor>RExpressionToString</processor><port>concatenated</port></source></datalink><datalink><sink type="dataflow"><port>r_list_of_expressions</port></sink><source type="processor"><processor>JoinListOfStringsIntoRList</processor><port>output</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Convert Taverna list of RExpr to R list</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow accepts a Taverna list of arbitrary R expressions and returns a single R expression representing an R list containing the original expressions.

This workflow relies on the current Taverna behaviour of an R expression being represented by a list of strings containing the deparsed expression. If this changes, this workflow will likely break.

The first BeanShell converts each R expression (actually a list of strings) to a single string. This uses implicit iteration to do this for each R expression, so input port depth is 2 but the BeanShell input depth is 1. 

The second Beanshell creates a comma-separated list of the deparsed R expressions and wraps the string with the R list() function. So now we have a single string s that can be turned into an R list using eval(parse(text=s)).

But RShell already does that parsing for us, so we just need to ensure the string looks like an R expression by turning it into a list of strings. So we actually output a 1-element list containing the string.

Version 1: initial implementation
Version 2: reduce number of BeanShells
</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>Jonathan Giddy</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f365c569-b2f3-4a8b-a4a5-fde29c2675b9</identification>
      </annotationBean>
      <date>2014-08-28 14:09:09.775 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="1d8dabec-4fc3-42c0-b317-a5f88576999d" role="nested"><name>Workflow16</name><inputPorts><port><name>Population</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StartYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>EndYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>SD_Matrix_Scenario_S</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Mean_Matrix_Scenario_S</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Projections_of_Pop_Size_S</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>SD_Matrix_Scenario_OA</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Mean_Matrix_Scenario_OA</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Projections_of_Pop_Size_OA</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>IID_S_Matrices</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>IID_OA_Matrices</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StockAggr</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StockAggrOA</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>zipFile</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port></outputPorts><processors><processor><name>save_results_and_rename_files</name><inputPorts><port><name>EndYear</name><depth>0</depth></port><port><name>StartYear</name><depth>0</depth></port><port><name>Population</name><depth>0</depth></port><port><name>resultsFolder</name><depth>0</depth></port><port><name>IID_OA_Matrices</name><depth>0</depth></port><port><name>IID_S_Matrices</name><depth>0</depth></port><port><name>Projections_of_Pop_Size_OA</name><depth>0</depth></port><port><name>Mean_Matrix_Scenario_OA</name><depth>0</depth></port><port><name>SD_Matrix_Scenario_OA</name><depth>0</depth></port><port><name>Projections_of_Pop_Size_S</name><depth>0</depth></port><port><name>Mean_Matrix_Scenario_S</name><depth>0</depth></port><port><name>SD_Matrix_Scenario_S</name><depth>0</depth></port><port><name>StockAggr</name><depth>0</depth></port><port><name>StockAggrOA</name><depth>0</depth></port></inputPorts><outputPorts><port><name>pathFolderResults</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="Mean_Matrix_Scenario_OA" to="Mean_Matrix_Scenario_OA" /><map from="IID_S_Matrices" to="IID_S_Matrices" /><map from="SD_Matrix_Scenario_S" to="SD_Matrix_Scenario_S" /><map from="IID_OA_Matrices" to="IID_OA_Matrices" /><map from="Mean_Matrix_Scenario_S" to="Mean_Matrix_Scenario_S" /><map from="StockAggr" to="StockAggr" /><map from="Projections_of_Pop_Size_S" to="Projections_of_Pop_Size_S" /><map from="StartYear" to="StartYear" /><map from="Projections_of_Pop_Size_OA" to="Projections_of_Pop_Size_OA" /><map from="resultsFolder" to="resultsFolder" /><map from="SD_Matrix_Scenario_OA" to="SD_Matrix_Scenario_OA" /><map from="Population" to="Population" /><map from="EndYear" to="EndYear" /><map from="StockAggrOA" to="StockAggrOA" /></inputMap><outputMap><map from="pathFolderResults" to="pathFolderResults" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>SD_Matrix_Scenario_S</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Mean_Matrix_Scenario_S</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Projections_of_Pop_Size_S</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>SD_Matrix_Scenario_OA</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Mean_Matrix_Scenario_OA</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Projections_of_Pop_Size_OA</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>IID_S_Matrices</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>IID_OA_Matrices</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StockAggr</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StockAggrOA</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>EndYear</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StartYear</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Population</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>resultsFolder</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>pathFolderResults</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>
pathFolderResults &lt;- normalizePath(resultsFolder)

# Save results to files
tempSD_Matrix_Scenario_S &lt;- paste("SD_Matrix_Scenario_",StockAggr,"_",Population,".csv",sep="")
file.copy(SD_Matrix_Scenario_S, paste(pathFolderResults,tempSD_Matrix_Scenario_S,sep="/"))

tempMean_Matrix_Scenario_S &lt;- paste("Mean_Matrix_Scenario_",StockAggr,"_",Population,".csv",sep="")
file.copy(Mean_Matrix_Scenario_S, paste(pathFolderResults,tempMean_Matrix_Scenario_S,sep="/"))

tempProjections_of_Pop_Size_S &lt;- paste("Projections_of_Pop_Size_",Population,"_",StartYear,"-",EndYear,"_",StockAggr,".pdf",sep="")
file.copy(Projections_of_Pop_Size_S, paste(pathFolderResults,tempProjections_of_Pop_Size_S,sep="/"))

tempSD_Matrix_Scenario_OA &lt;- paste("SD_Matrix_Scenario_",StockAggrOA,"_",Population,".csv",sep="")
file.copy(SD_Matrix_Scenario_OA, paste(pathFolderResults,tempSD_Matrix_Scenario_OA,sep="/"))

tempMean_Matrix_Scenario_OA &lt;- paste("Mean_Matrix_Scenario_",StockAggrOA,"_",Population,".csv",sep="")
file.copy(Mean_Matrix_Scenario_OA, paste(pathFolderResults,tempMean_Matrix_Scenario_OA,sep="/"))

tempProjections_of_Pop_Size_OA &lt;- paste("Projections_of_Pop_Size_",Population,"_",StartYear,"-",EndYear,"_",StockAggrOA,".pdf",sep="")
file.copy(Projections_of_Pop_Size_OA, paste(pathFolderResults,tempProjections_of_Pop_Size_OA,sep="/"))

tempIID_S_Matrices &lt;- paste("IID_S_Matrices_",StockAggr,"_",Population,".csv",sep="")
file.copy(IID_S_Matrices, paste(pathFolderResults,tempIID_S_Matrices,sep="/"))

tempIID_OA_Matrices &lt;- paste("IID_OA_Matrices_",StockAggrOA,"_",Population,".csv",sep="")
file.copy(IID_OA_Matrices, paste(pathFolderResults,tempIID_OA_Matrices,sep="/"))

</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>SD_Matrix_Scenario_S</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Mean_Matrix_Scenario_S</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Projections_of_Pop_Size_S</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>SD_Matrix_Scenario_OA</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Mean_Matrix_Scenario_OA</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Projections_of_Pop_Size_OA</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>IID_S_Matrices</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>IID_OA_Matrices</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StockAggr</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StockAggrOA</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>EndYear</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StartYear</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Population</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>resultsFolder</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>pathFolderResults</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="EndYear" depth="0" /><port name="StartYear" depth="0" /><port name="Population" depth="0" /><port name="resultsFolder" depth="0" /><port name="IID_OA_Matrices" depth="0" /><port name="IID_S_Matrices" depth="0" /><port name="Projections_of_Pop_Size_OA" depth="0" /><port name="Mean_Matrix_Scenario_OA" depth="0" /><port name="SD_Matrix_Scenario_OA" depth="0" /><port name="Projections_of_Pop_Size_S" depth="0" /><port name="Mean_Matrix_Scenario_S" depth="0" /><port name="SD_Matrix_Scenario_S" depth="0" /><port name="StockAggr" depth="0" /><port name="StockAggrOA" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>create_zip_File</name><inputPorts><port><name>pathFolderResults</name><depth>0</depth></port></inputPorts><outputPorts><port><name>zipFile</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="pathFolderResults" to="pathFolderResults" /></inputMap><outputMap><map from="zipFile" to="zipFile" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>pathFolderResults</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>zipFile</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

//Create zip file
File zipDir = new File(pathFolderResults);

File zipFile = File.createTempFile(zipDir.getName(), ".zip");
FileOutputStream fos = new FileOutputStream(zipFile,true);
ZipOutputStream zos = new ZipOutputStream(fos);

File[] fileList = zipDir.listFiles();
for (File file : fileList) {
		FileInputStream fis = new FileInputStream(file);

		String zipFilePath = zipDir.toURI().relativize(file.toURI()).getPath();
		ZipEntry zipEntry = new ZipEntry(zipFilePath);
		zos.putNextEntry(zipEntry);

		byte[] bytes = new byte[1024];
		int length;
		while ((length = fis.read(bytes)) &gt;= 0) {
			zos.write(bytes, 0, length);
		}

		zos.closeEntry();
		fis.close();
}

zos.close();
fos.close();


//Delete results folder
for (File file : fileList) {
 file.delete();
}
zipDir.delete();</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="pathFolderResults" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>create_results_folder</name><inputPorts /><outputPorts><port><name>resultsFolder</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap /><outputMap><map from="resultsFolder" to="resultsFolder" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs />
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>resultsFolder</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>import java.io.File;
import java.lang.System;
import java.util.UUID;

File sysTempDir = new File(System.getProperty("java.io.tmpdir"));
String dirName = "killerWhalesResults_" + UUID.randomUUID().toString();
File newTempDir = new File(sysTempDir, dirName);
         
newTempDir.mkdir();

//Set folder permissions
//newTempDir.setExecutable(true, false);
newTempDir.setReadable(true, false);
newTempDir.setWritable(true, false);


resultsFolder = newTempDir.getCanonicalPath();</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>EndYear</port></sink><source type="dataflow"><port>EndYear</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StartYear</port></sink><source type="dataflow"><port>StartYear</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>Population</port></sink><source type="dataflow"><port>Population</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>resultsFolder</port></sink><source type="processor"><processor>create_results_folder</processor><port>resultsFolder</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>IID_OA_Matrices</port></sink><source type="dataflow"><port>IID_OA_Matrices</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>IID_S_Matrices</port></sink><source type="dataflow"><port>IID_S_Matrices</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>Projections_of_Pop_Size_OA</port></sink><source type="dataflow"><port>Projections_of_Pop_Size_OA</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>Mean_Matrix_Scenario_OA</port></sink><source type="dataflow"><port>Mean_Matrix_Scenario_OA</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>SD_Matrix_Scenario_OA</port></sink><source type="dataflow"><port>SD_Matrix_Scenario_OA</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>Projections_of_Pop_Size_S</port></sink><source type="dataflow"><port>Projections_of_Pop_Size_S</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>Mean_Matrix_Scenario_S</port></sink><source type="dataflow"><port>Mean_Matrix_Scenario_S</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>SD_Matrix_Scenario_S</port></sink><source type="dataflow"><port>SD_Matrix_Scenario_S</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StockAggr</port></sink><source type="dataflow"><port>StockAggr</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StockAggrOA</port></sink><source type="dataflow"><port>StockAggrOA</port></source></datalink><datalink><sink type="processor"><processor>create_zip_File</processor><port>pathFolderResults</port></sink><source type="processor"><processor>save_results_and_rename_files</processor><port>pathFolderResults</port></source></datalink><datalink><sink type="dataflow"><port>zipFile</port></sink><source type="processor"><processor>create_zip_File</processor><port>zipFile</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>eaf71d98-e7aa-4c2c-8da1-61a654053854</identification>
      </annotationBean>
      <date>2014-09-18 08:31:47.794 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>6fc9f64c-b1d7-4db0-860d-f96d9bc1e50e</identification>
      </annotationBean>
      <date>2014-09-18 10:12:22.638 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0fba2348-4b1d-4b06-a923-80e1d796a633</identification>
      </annotationBean>
      <date>2014-09-18 09:26:37.713 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e8da52c6-f368-494e-b010-fe712950d075</identification>
      </annotationBean>
      <date>2014-09-15 10:46:52.995 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0599015f-c422-4b5c-947a-41bfc1d7e169</identification>
      </annotationBean>
      <date>2014-09-15 10:40:02.653 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>028214aa-a2b4-4608-95ab-16fcf319460a</identification>
      </annotationBean>
      <date>2014-09-18 08:56:24.246 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>50ea4a05-0ccf-41de-8f84-cf60c99ac096</identification>
      </annotationBean>
      <date>2014-09-18 10:12:48.712 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>1160f631-ac10-4612-bd6e-7f8f39abe8a5</identification>
      </annotationBean>
      <date>2014-09-18 08:24:46.971 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>a3223e77-07bf-42e0-81a1-edd1c7135301</identification>
      </annotationBean>
      <date>2014-09-18 10:28:58.537 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>960680cd-6a97-4c36-bb88-f55a66185567</identification>
      </annotationBean>
      <date>2014-09-18 08:22:42.396 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0cbf02fb-2b10-4f15-bcc3-bb57208d4ec6</identification>
      </annotationBean>
      <date>2014-09-18 10:34:49.458 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>1d8dabec-4fc3-42c0-b317-a5f88576999d</identification>
      </annotationBean>
      <date>2014-09-18 16:27:35.96 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>351fa57a-1579-4996-9914-496cfb709a65</identification>
      </annotationBean>
      <date>2014-09-18 09:24:26.945 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e776da44-4b55-4366-9afc-b88992adb323</identification>
      </annotationBean>
      <date>2014-09-18 09:32:12.571 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>bab6f4cd-2a1d-40fd-b23d-5781a82b5b3b</identification>
      </annotationBean>
      <date>2014-09-18 08:36:41.641 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f6a338ef-212b-4f1d-a0d6-c838b61db948</identification>
      </annotationBean>
      <date>2014-09-18 10:45:29.902 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>27ba098a-df54-4d42-9ca9-a39ff5c40e0a</identification>
      </annotationBean>
      <date>2014-09-18 09:11:25.862 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>55874747-5fd5-498b-a52d-814448e8c7fd</identification>
      </annotationBean>
      <date>2014-09-18 10:17:27.341 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7edc7ed2-4868-474a-be12-c38124fa36f7</identification>
      </annotationBean>
      <date>2014-09-18 09:16:13.519 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>cb6f468d-bc17-4bbe-8e87-d49e347b673d</identification>
      </annotationBean>
      <date>2014-09-15 10:31:38.150 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e02fe129-70ae-41d4-a1a8-5371733d6b2c</identification>
      </annotationBean>
      <date>2014-09-18 08:19:58.510 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>08863eb6-933d-4f31-b809-f59f7abc8b66</identification>
      </annotationBean>
      <date>2014-09-18 10:49:40.790 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="9196a6d0-cd0c-40f3-8b86-4e397c39eb24" role="nested"><name>Fishing_Scenarios_fo</name><inputPorts><port><name>Workspace</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>MLT</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1.64</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Multiplier. In OA is directly proportional to VR;  Between 1 and 2 only for increases in OA. FI  is an alternative measure of OA and is also directly proportional to VR.

The multiplier MLT can take values from 0.0 to 2.0, with the latter value impling HR=0</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>UseFImpacts</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>FALSE</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Use Fishery Impacts data and definitions</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>StockAggrOA</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>YearIntervals</name><depth>2</depth><granularDepth>2</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>Projections_of_Pop_Size_PDF</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>IID_OA_Matrices</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>SD_Matrix_Scenario</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>Mean_Matrix_Scenario</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port></outputPorts><processors><processor><name>PrepareTerminalRun</name><inputPorts><port><name>RWorkspace</name><depth>0</depth></port><port><name>MLT</name><depth>0</depth></port><port><name>StockAggrOA</name><depth>0</depth></port></inputPorts><outputPorts><port><name>RWorkspace</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="RWorkspace" to="RWorkspace" /><map from="MLT" to="MLT" /><map from="StockAggrOA" to="StockAggrOA" /></inputMap><outputMap><map from="RWorkspace" to="RWorkspace" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>MLT</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StockAggrOA</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
save(list=ls(all.names=FALSE), file="ws.tmp")
load(.wsfile)
load("ws.tmp")

#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@      17. FISHING SCENARIOS  OCEAN ABUNDANCE       @@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;

          # &lt;&lt;&lt; NOTE: THIS SECTION ALSO RUNS FISHERY IMPACTS &gt;&gt;&gt;#

# This section simulates fishing scenarios for chinook Ocean Abundance. The user
# controls an inverse multiplier for the harvest rate (HR) that affects the stock
# aggregates directly. The stock aggregate is user defined from the list of significant stocks
# from the multiple regressions (SignifR). See section 2.7 Fishing scenarios for
# more information.
# Note: The multiplier MLT can take values from 0.0 to 2.0, with the latter value impling HR=0.


# MLT &lt;- 1.64                                                                      # Multiplier. In OA is directly proportional to VR;  Between 1 and 2 only for increases in OA. FI  is an alternative measure of OA and is also directly proportional to VR
                                                                                 # MLT = 0.0 to maximize HR
print(SignifR)                                                                  # List of significant stock aggregates
cat('OA or FI Scenario for Population', Population ,"\n")                       # Make sure the stock is selected from the right population
# StockAggrOA= "CW_OA_2"                                                       # Set stock aggregate FROM SignifR. Test: "FE_OA_5YA"   "ALL2a_FI_0"
colhOA&lt;- terrain.colors(20)                                                     # Colour for output. It can be changed according to user preferences. See ?palette


#_______________________________________________________________________________
#-------------------------------------------------------------------------------

if(length(subset(SignifR,Chinook_Run==StockAggrOA)[,1])==0){
addNoRun&lt;- paste('Error: Stock Aggregate',StockAggrOA,'not found in Significant OA or FI  Chinook Run')
print(addNoRun)
stop(paste('Fishery Impacts=',Use_F.Impacts))
}

#Generate new time series of ocean abundance for the relevant stock or stock aggregate (e.g., as resulting from a percent change in HR), with ocean abundance inversely proportional to HR
OA_Stock  &lt;- subset(ChinData,select=StockAggrOA)
OA_Stock_New &lt;- OA_Stock*MLT  #  +(OA_Stock*(1-MLT))

#Use this new OA time series to generate a new RKW vital-rate time series using the corresponding regression model
identRunOA  &lt;- subset(RegModPos, Chinook_Run==StockAggrOA)

New_VR_OA &lt;- matrix(NA, ncol=length(identRunOA[,1]),nrow=length(OA_Stock_New [,1]))
for(f in 1:length(identRunOA[,1])){
New_VR_OA[,f]  &lt;-beta_backtr(identRunOA$intercept[f],identRunOA$slope1[f],OA_Stock_New [,1])
colnames(New_VR_OA)&lt;- as.character(identRunOA$VitalRate)
}
New_VR_OA

#Correcting fecundity for max values in VR_OA data.
New_VR_OA&lt;-ifelse(colnames(New_VR_OA)== "F1_Fecundity" &amp; New_VR_OA &gt; max(F1_Fecundity),max(F1_Fecundity),New_VR_OA)
New_VR_OA&lt;-ifelse(colnames(New_VR_OA)== "F2_Fecundity" &amp; New_VR_OA &gt; max(F2_Fecundity),max(F2_Fecundity),New_VR_OA)
New_VR_OA


Old_VR_OA&lt;-  subset(allVR, select= as.character(identRunOA$VitalRate))
Old_VR_OA


#In scenarios reducing ocean HR: If observed VR_OA &gt; regression VR_OA, use observed. In scenarios increasing ocean HR: If observed VR_OA &lt; regression VR_OA, use observed.

if(MLT&lt;1){  #
  Sce_VR_OA&lt;- matrix(NA,ncol=length(New_VR_OA[1,]) ,nrow=length(New_VR_OA[,1]))              #    0-1 decrease HR
  for(v in 1: length(New_VR_OA[1,])){
     Sce_VR_OA[,v] &lt;-ifelse(Old_VR_OA[,v]&gt;New_VR_OA[,v],New_VR_OA[,v],Old_VR_OA[,v])
     }}

#In scenarios increasing ocean HR: If observed VR_OA &lt; regression VR_OA,use observed.
if(MLT&gt;1){
  Sce_VR_OA&lt;- matrix(NA,ncol=length(New_VR_OA[1,]) ,nrow=length(New_VR_OA[,1]))
  for(v in 1: length(New_VR_OA[1,])){
     Sce_VR_OA[,v] &lt;-ifelse(Old_VR_OA[,v]&gt;New_VR_OA[,v],Old_VR_OA[,v],New_VR_OA[,v])         #    1-2 Increase HR
     }}

colnames(Sce_VR_OA)&lt;- as.character(identRunOA$VitalRate)

#Test VR_OAs
TestVR_OA_Sc &lt;- cbind(Old_VR_OA[,1], New_VR_OA[,1], Sce_VR_OA[,1])
colnames(TestVR_OA_Sc) &lt;- c('Old_VR_OA','New_VR_OA','Sce_VR_OA')
cat(paste("MLT OA=",MLT),"VR_OA=",as.character(identRunOA$VitalRate)[1]   ,"\n"); print(TestVR_OA_Sc)

#Replace original RKW VR time series with those produced in steps 3-4, and generate a new set of iid population matrices
DataT_IID_OA  &lt;- allVR
DataT_IID_OA[as.character(identRunOA$VitalRate)]&lt;-Sce_VR_OA

#Replacement test
DataT_IID_OA - allVR

#Adding year
# JPG - remove dependency on DataT_IID, as it is created in a separate path of
# the workflow, and it is only used here as a cheap way to get a list of all years
# DataT_IID_OA&lt;- cbind(year=DataT_IID$year,DataT_IID_OA)
DataT_IID_OA&lt;- cbind(year=seq(StartYear,EndYear),DataT_IID_OA)

save(list=ls(all.names=FALSE), file=.wsfile)
"RWorkspace"&lt;-.wsfile
</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>MLT</name>
      <symanticType>DOUBLE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StockAggrOA</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="RWorkspace" depth="0" /><port name="MLT" depth="0" /><port name="StockAggrOA" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>FunMat</name><inputPorts><port><name>RWorkspace</name><depth>0</depth></port><port><name>Years</name><depth>1</depth></port></inputPorts><outputPorts><port><name>Mat_IID_OA</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="RWorkspace" to="RWorkspace" /><map from="Years" to="Years" /></inputMap><outputMap><map from="Mat_IID_OA" to="Mat_IID_OA" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Years</name>
      <depth>1</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>Mat_IID_OA</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
save(list=ls(all.names=FALSE), file="ws.tmp")
load(.wsfile)
load("ws.tmp")

#Set of Years included in reIID_Sospective Analsyes
SetIID_OA&lt;-  subset(DataT_IID_OA, year&gt;=Years[1] &amp; year&lt;=Years[2])[-1]


#Applying function to recreate IID matrices and estimate lambda
Mat_IID_OA&lt;-FunMat(SetIID_OA, Years)


</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Years</name>
      <symanticType>INTEGER_LIST</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Mat_IID_OA</name>
      <symanticType>R_EXP</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="RWorkspace" depth="0" /><port name="Years" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ConvertListRToRList</name><inputPorts><port><name>list_of_r_expressions</name><depth>2</depth></port></inputPorts><outputPorts><port><name>r_list_of_expressions</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="list_of_r_expressions" to="list_of_r_expressions" /></inputMap><outputMap><map from="r_list_of_expressions" to="r_list_of_expressions" /></outputMap><configBean encoding="dataflow"><dataflow ref="f365c569-b2f3-4a8b-a4a5-fde29c2675b9" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="list_of_r_expressions" depth="2" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Finish</name><inputPorts><port><name>RWorkspace</name><depth>0</depth></port><port><name>RetroMats_pre_OA</name><depth>1</depth></port><port><name>UseFImpacts</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Projections_of_Pop_Size_PDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>IID_OA_Matrices</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>SD_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Mean_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="RetroMats_pre_OA" to="RetroMats_pre_OA" /><map from="UseFImpacts" to="UseFImpacts" /><map from="RWorkspace" to="RWorkspace" /></inputMap><outputMap><map from="Mean_Matrix_Scenario" to="Mean_Matrix_Scenario" /><map from="IID_OA_Matrices" to="IID_OA_Matrices" /><map from="Projections_of_Pop_Size_PDF" to="Projections_of_Pop_Size_PDF" /><map from="SD_Matrix_Scenario" to="SD_Matrix_Scenario" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RetroMats_pre_OA</name>
      <depth>1</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>UseFImpacts</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>Mean_Matrix_Scenario</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>Projections_of_Pop_Size_PDF</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>IID_OA_Matrices</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>SD_Matrix_Scenario</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>Use_F.Impacts &lt;- UseFImpacts
rm(UseFImpacts)
.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
save(list=ls(all.names=FALSE), file="ws.tmp")
load(.wsfile)
load("ws.tmp")
library(popbio) # lambda

RetroMats_OA&lt;- RetroMats_pre_OA[1:length(na.omit(unlist(lapply(RetroMats_pre_OA,sum))))]

write.table(RetroMats_OA, file = IID_OA_Matrices, sep=',', quote = F, col.names=TRUE, row.names = FALSE)

#Applying function to estimate lambda
LambdasIID_OA&lt;- as.numeric(unlist(lapply(RetroMats_OA,lambda)))


#Estimating Average lambda for the lambdas belonging to each IID matrix
Avg_Lambda_IID_OA&lt;- mean(LambdasIID_OA)
cat('Average IID_OA Lambda OA',Period,'=',Avg_Lambda_IID_OA,'. Number of IID_OA Matrices=',length(RetroMats_OA),"\n")


#Replace original RKW VR time series and generate a new mean matrix and a standard deviation matrix.
MeanMat_OA &lt;- FunMat(DataT_IID_OA[-1],Period)

SdMat_OA  &lt;- matrix(NA, ncol= length(RetroMats_OA[[1]][,1]),nrow= length(RetroMats_OA[[1]][1,]))
for(i in 1:length(RetroMats_OA[[1]][,1])){
  for(j in 1:length(RetroMats_OA[[1]][1,])){
    SdMat_OA [i,j] = sd(sapply(RetroMats_OA,function(x)x[i,j]))
    }}
SdMat_OA

#Results
write.table(MeanMat_OA, file = Mean_Matrix_Scenario, sep=',', quote = F, col.names=F, row.names = F)
write.table(SdMat_OA,   file = SD_Matrix_Scenario, sep=',', quote = F, col.names=F, row.names = F)


#Use these population matrices to run simulations and compute (i) stochastic population growth and  (ii) empirical distributions of  population size at a time horizon determined by the damping time

#*************    Stochastic Growth Rate  Scenarios IID only     ***************
GR_RetroS_OA&lt;- stoch.growth.rate(RetroMats_OA, prob = NULL, maxt = 50000, verbose=TRUE)
lambda_Retro_OA&lt;-exp(GR_RetroS_OA$approx)
lambda_Retro_OA_CI&lt;-exp(GR_RetroS_OA$sim.CI)
lambda_stoch_OA &lt;- c(lambda_Retro_OA,lambda_Retro_OA_CI)



#************** Stochastic Projected Population Size Scenarios *****************
Project_OA.lt &lt;- vector("list", length(tmaxes)) # create list
for(i in 1:length(tmaxes)){Project_OA.lt [[i]] &lt;- matrix(data = NA,
                                     nrow = nreps ,
                                     ncol = 7,
                                     byrow = FALSE,
                                     dimnames = NULL)}
for(t in 1:length(tmaxes)){
Project_OA.lt [[t]]&lt;- stoch.projection(RetroMats_OA, n0=CountsLastyear$nlastYear, tmax = tmaxes[t], nreps = nreps, prob = NULL,
nmax = NULL, sumweight = rep(1, length(n0)), verbose=FALSE)
}

graphics.off()
pdf(Projections_of_Pop_Size_PDF,width=10,height=8)
par( oma=c(2,2,2,2), mar=c(1.5,2,3,2),mai=c(0.4,0.8,0.8,0.4))
par (mfrow=c(2,2))
hist(apply(Project_OA.lt[[1]],1,sum),col = colhOA, ylab="", xlab="", main= paste(tmaxes[1],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_OA.lt[[1]],1,sum)),0)))
hist(apply(Project_OA.lt[[2]],1,sum),col = colhOA, ylab="", xlab="", main= paste(tmaxes[2],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_OA.lt[[2]],1,sum)),0)))
hist(apply(Project_OA.lt[[3]],1,sum),col = colhOA, ylab="", xlab="", main= paste(tmaxes[3],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_OA.lt[[3]],1,sum)),0)))
hist(apply(Project_OA.lt[[4]],1,sum),col = colhOA, ylab="", xlab="", main= paste(tmaxes[4],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_OA.lt[[4]],1,sum)),0)))
 mtext(paste('Projections of Pop Size',StockAggrOA, "IID",Population[1], "mult of", ifelse(Use_F.Impacts==TRUE,paste('FI'),paste('OA')),'=',MLT),side = 3, outer = TRUE, col = "black", cex= 1.2)
 mtext (text= "Population Numbers", side=1, outer=TRUE, cex=1., font = 2 )
 mtext (text= "Frequency", side=2,outer=TRUE, cex=1., font = 2 )
 mtext(paste('Stoch. Lambda Demographic=',round(lambda_stoch[1],5),'. Scenario=',round(lambda_stoch_OA[1],5)),side=4,outer=TRUE, cex=1., font = 2)
dev.off()

</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RetroMats_pre_OA</name>
      <symanticType>R_EXP</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>UseFImpacts</name>
      <symanticType>BOOL</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Mean_Matrix_Scenario</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Projections_of_Pop_Size_PDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>IID_OA_Matrices</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>SD_Matrix_Scenario</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="RWorkspace" depth="0" /><port name="RetroMats_pre_OA" depth="1" /><port name="UseFImpacts" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>RWorkspace</port></sink><source type="dataflow"><port>Workspace</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>MLT</port></sink><source type="dataflow"><port>MLT</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>StockAggrOA</port></sink><source type="dataflow"><port>StockAggrOA</port></source></datalink><datalink><sink type="processor"><processor>FunMat</processor><port>RWorkspace</port></sink><source type="processor"><processor>PrepareTerminalRun</processor><port>RWorkspace</port></source></datalink><datalink><sink type="processor"><processor>FunMat</processor><port>Years</port></sink><source type="dataflow"><port>YearIntervals</port></source></datalink><datalink><sink type="processor"><processor>ConvertListRToRList</processor><port>list_of_r_expressions</port></sink><source type="processor"><processor>FunMat</processor><port>Mat_IID_OA</port></source></datalink><datalink><sink type="processor"><processor>Finish</processor><port>RWorkspace</port></sink><source type="processor"><processor>PrepareTerminalRun</processor><port>RWorkspace</port></source></datalink><datalink><sink type="processor"><processor>Finish</processor><port>RetroMats_pre_OA</port></sink><source type="processor"><processor>ConvertListRToRList</processor><port>r_list_of_expressions</port></source></datalink><datalink><sink type="processor"><processor>Finish</processor><port>UseFImpacts</port></sink><source type="dataflow"><port>UseFImpacts</port></source></datalink><datalink><sink type="dataflow"><port>Projections_of_Pop_Size_PDF</port></sink><source type="processor"><processor>Finish</processor><port>Projections_of_Pop_Size_PDF</port></source></datalink><datalink><sink type="dataflow"><port>IID_OA_Matrices</port></sink><source type="processor"><processor>Finish</processor><port>IID_OA_Matrices</port></source></datalink><datalink><sink type="dataflow"><port>SD_Matrix_Scenario</port></sink><source type="processor"><processor>Finish</processor><port>SD_Matrix_Scenario</port></source></datalink><datalink><sink type="dataflow"><port>Mean_Matrix_Scenario</port></sink><source type="processor"><processor>Finish</processor><port>Mean_Matrix_Scenario</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>b060dc75-d06c-4250-ab5f-53ec37ef9c6b</identification>
      </annotationBean>
      <date>2014-09-19 15:37:51.265 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>
    This workflow simulates fishing scenarios for chinook Ocean Abundance. The user
    controls an inverse multiplier for the harvest rate (HR) that affects the stock
    aggregates directly. The stock aggregate is user defined from the list of
    significant stocks from the multiple regressions (SignifR). See section 2.7
    Fishing scenarios for more information.</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>aad96977-4e58-44bc-b407-2b1369adb853</identification>
      </annotationBean>
      <date>2014-09-19 15:17:12.743 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Fishing Scenarios for Chinook Ocean Abundance</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>L. Antonio Vélez-Espino, H. Andres Araujo and Maria Paula Balcazar-Vargas</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e95816e4-e41d-42d0-b1f2-502eea2495aa</identification>
      </annotationBean>
      <date>2014-09-19 15:37:23.485 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>c495da4e-2b9c-464a-af9d-6a56cbba3aac</identification>
      </annotationBean>
      <date>2014-09-19 15:18:59.838 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0e3de651-1f66-486c-830a-39c3b6cbbe2e</identification>
      </annotationBean>
      <date>2014-09-19 21:09:58.426 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>42d2d17e-d231-48ab-a611-51c06d71a21b</identification>
      </annotationBean>
      <date>2014-09-19 15:15:16.896 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>9e314273-1c9d-435a-a93e-0b51df80f70f</identification>
      </annotationBean>
      <date>2014-08-28 14:09:09.935 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e078c5c6-2557-4eb2-adb6-85f6854a8dfb</identification>
      </annotationBean>
      <date>2014-09-19 15:15:26.737 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>9196a6d0-cd0c-40f3-8b86-4e397c39eb24</identification>
      </annotationBean>
      <date>2014-09-19 21:10:48.44 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>6ed2a2f5-54f3-4343-830a-91b18b095d39</identification>
      </annotationBean>
      <date>2014-09-19 15:24:36.586 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="a1669af5-690b-43d8-964f-cadb3146658f" role="nested"><name>Fishing_Scenarios_Te</name><inputPorts><port><name>Workspace</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>TRE_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Terminal Run Equivalent data</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Mult</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Multiplier of Ocean HR affecting TR</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1.5</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Term_Run_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Terminal Run</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>ER_Indicators_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Stock Table</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>TRE_HR_R</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Terminal Run HR data</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>StockAggr</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>YearIntervals</name><depth>2</depth><granularDepth>2</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>SD_Matrix_Scenario</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>Mean_Matrix_Scenario</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>Projections_of_Pop_Size_IID</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>IID_S_Matrices</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port></outputPorts><processors><processor><name>PrepareTerminalRun</name><inputPorts><port><name>RWorkspace</name><depth>0</depth></port><port><name>TRE_R</name><depth>0</depth></port><port><name>Mult</name><depth>0</depth></port><port><name>Term_Run_R</name><depth>0</depth></port><port><name>ER_Indicators_R</name><depth>0</depth></port><port><name>TRE_HR_R</name><depth>0</depth></port><port><name>StockAggr</name><depth>0</depth></port></inputPorts><outputPorts><port><name>RWorkspace</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="Mult" to="Mult" /><map from="TRE_R" to="TRE_R" /><map from="RWorkspace" to="RWorkspace" /><map from="ER_Indicators_R" to="ER_Indicators_R" /><map from="StockAggr" to="StockAggr" /><map from="Term_Run_R" to="Term_Run_R" /><map from="TRE_HR_R" to="TRE_HR_R" /></inputMap><outputMap><map from="RWorkspace" to="RWorkspace" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>TRE_R</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>ER_Indicators_R</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>TRE_HR_R</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Term_Run_R</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Mult</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StockAggr</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
save(list=ls(all.names=FALSE), file="ws.tmp")
load(.wsfile)
load("ws.tmp")

#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@     16. FISHING SCENARIOS  TERMINAL RUN     @@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
# This section simulates fishing scenarios for chinook terminal run. The user
# controls a multiplier for the harvest rate (HR) that affects the indicator
# stocks.  The stock aggregate is user defined from the list of significant stocks
# from the multiple regressions (SignifR). See section 2.7 Fishing scenarios for
# more information.
# Note: if HR_new &gt; 1, the HR is autiomatically set to 1 .

# Mult&lt;-1.5                                                                      # User defined multilier of Ocean HR affecting TR;
                                                                                # Mult = 0.00 for closing fisheries
print(SignifR)                                                                  # List of significant stock aggregates
cat('Fishing Scenario for Population', Population ,"\n")                        # Make sure the stock is selected from the right population
# StockAggr&lt;- "FEPS_TR_1"                                                           # Set stock aggregate FROM SignifR  e.g.: "FE_TR_1"
colhS&lt;- topo.colors(20)                                                         # Colour for output. It can be changed according to user preferences. See ?palette

#_______________________________________________________________________________
#-------------------------------------------------------------------------------

# if(Use_F.Impacts==FALSE){

if(length(subset(SignifR,Chinook_Run==StockAggr)[,1])==0){
addNoRun1&lt;- paste('Error: Stock Aggregate',StockAggr,'not found in Significant TR Chinook Run')
stop(print(addNoRun1))
}

#Input fisheries data and define stock aggregate from set
TR       &lt;- read.table(Term_Run_R, header=T, sep=",")                           # Terminal run
TRE      &lt;- read.table(TRE_R, header=T, sep=",")                                # Terminal Run Equivalent
TRE_HR   &lt;- read.table(TRE_HR_R, header=T, sep=",")                             # Terminal Run HR
ER_Stock &lt;- read.table(ER_Indicators_R, header=T, sep=",")                      # Stock Table

TR       &lt;-  subset(TR    , Year &gt;= StartYear &amp; Year &lt;= EndYear)
TRE      &lt;-  subset(TRE   , Year &gt;= StartYear &amp; Year &lt;= EndYear)
TRE_HR   &lt;-  subset(TRE_HR, Year &gt;= StartYear &amp; Year &lt;= EndYear)

TR_ChinStocks&lt;- subset(ChinData, select=as.character(ChinDefs[ChinDefs$Ab_ID==1,]$TimeSeries))    #TS of TR Chinook stocks only

#Generate new time series of ocean harvests rates for indicator stock(s) (e.g., as resulting from a percent change in HR)
IndStock_HR &lt;- subset(TRE_HR, select= unlist(strsplit(as.character(ER_Stock[ER_Stock$Time.series==StockAggr,]$ER.Indicator.Stocks), ",", fixed = TRUE)))
IndStock_HR

IndStock_HRMod &lt;- Mult*IndStock_HR

#Adjusting HR to a max of 1
new.HR &lt;- matrix(NA,nrow =length(IndStock_HRMod[,1]),ncol = length(IndStock_HRMod[1,]))
for(i in 1:length(IndStock_HRMod)){
new.HR[,i]&lt;- ifelse(IndStock_HRMod[,i]&gt;1,1,IndStock_HRMod[,i])
options(warn=-1)
}

#Printing warning if HR&gt;1
for(i in 1:length(IndStock_HRMod)){
ifelse(na.omit(IndStock_HRMod[,i])&gt;=1, print(paste("Antention: At least one harvest rate is greater than 1 and have been adjusted to 1 in",colnames(IndStock_HRMod[i]))), print(paste("values ok")))
}



colnames(new.HR)&lt;- names(IndStock_HRMod)


#Compute the number of fish (N_y) required for that change in ocean HR
TRE_sel&lt;- subset(TRE[row.names(IndStock_HRMod),], select=colnames(new.HR))
TR_sel &lt;- subset(TR [row.names(IndStock_HRMod),], select=colnames(new.HR))
as.data.frame(new.HR)

N_y &lt;- (new.HR*(TRE_sel+TR_sel))- TRE_sel
N_y


#Compute TR scalar for each year in the time series
TR_scalar &lt;- apply((TR_sel - N_y),1,sum) / apply(TR_sel,1,sum)
TR_scalar[is.na(TR_scalar)]&lt;- mean(na.omit(TR_scalar))
TR_scalar_aggr &lt;- cbind(TR$Year,TR_scalar)
TR_scalar_aggr &lt;-as.data.frame(TR_scalar_aggr)

#Generate new Terminal Run time series for the stock or stock aggregate and time lag selected for the scenario
Orig_TR_Stock &lt;- subset(ChinData,select=c('Year',StockAggr))
New_TR_Stock&lt;- (Orig_TR_Stock* TR_scalar_aggr)[2]
New_TR_Stock


#Use this new TR time series to generate a new RKW vital-rate time series using the corresponding regression model
#a) identify the regression in RegModPos
identRun  &lt;- subset(RegModPos, Chinook_Run==StockAggr)

#b) use betareg with New_TR_Stock to estimate VRs using back calculation  (RegModPos)
New_VR &lt;- matrix(NA, ncol=length(identRun[,1]),nrow=length(New_TR_Stock[,1]))
for(f in 1:length(identRun[,1])){
New_VR[,f]  &lt;-beta_backtr(identRun$intercept[f],identRun$slope1[f],New_TR_Stock[,1])
colnames(New_VR)&lt;- as.character(identRun$VitalRate)
}
New_VR&lt;-ifelse(New_VR&gt;1,stop(paste('Warning, scenario produced VR &gt; 1')),New_VR)

#Correcting fecundity for max values in VR data.
New_VR&lt;-ifelse(colnames(New_VR)== "F1_Fecundity" &amp; New_VR &gt; max(F1_Fecundity),max(F1_Fecundity),New_VR)
New_VR&lt;-ifelse(colnames(New_VR)== "F2_Fecundity" &amp; New_VR &gt; max(F2_Fecundity),max(F2_Fecundity),New_VR)
New_VR

#Old VR
Old_VR&lt;-  subset(allVR, select= as.character(identRun$VitalRate))
Old_VR


#In scenarios reducing ocean HR: If observed VR &gt; regression VR, use observed.
if(Mult&lt;=1){
  Sce_VR&lt;- matrix(NA,ncol=length(New_VR[1,]) ,nrow=length(New_VR[,1]))
  for(v in 1: length(New_VR[1,])){
     Sce_VR[,v] &lt;-ifelse(Old_VR[,v]&gt;New_VR[,v],Old_VR[,v],New_VR[,v])
     }}

#In scenarios increasing ocean HR: If observed VR &lt; regression VR,use observed.
if(Mult&gt;1){
  Sce_VR&lt;- matrix(NA,ncol=length(New_VR[1,]) ,nrow=length(New_VR[,1]))
  for(v in 1: length(New_VR[1,])){
     Sce_VR[,v] &lt;-ifelse(Old_VR[,v]&lt;New_VR[,v],Old_VR[,v],New_VR[,v])
     }}
colnames(Sce_VR)&lt;- as.character(identRun$VitalRate)


#Test VRs
TestVR_Sc &lt;- cbind(Old_VR[,1], New_VR[,1], Sce_VR[,1])
colnames(TestVR_Sc) &lt;- c('Old_VR','New_VR','Sce_VR')
cat(paste("Multiplier=",Mult),"VR=",as.character(identRun$VitalRate)[1]   ,"\n")
TestVR_Sc

#Replace original RKW VR time series with those produced in above and generate a new set of iid population matrices
DataT_IID_S  &lt;- allVR
DataT_IID_S[as.character(identRun$VitalRate)]&lt;- Sce_VR

#Replacement test
DataT_IID_S - allVR


#Adding year
# JPG - remove dependency on DataT_IID, as it is created in a separate path of
# the workflow, and it is only used here as a cheap way to get a list of all years
# DataT_IID_S&lt;- cbind(year=DataT_IID$year,DataT_IID_S)
DataT_IID_S&lt;- cbind(year=seq(StartYear,EndYear),DataT_IID_S)

save(list=ls(all.names=FALSE), file=.wsfile)
"RWorkspace"&lt;-.wsfile
</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>TRE_R</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>ER_Indicators_R</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>TRE_HR_R</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Term_Run_R</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Mult</name>
      <symanticType>DOUBLE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StockAggr</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="RWorkspace" depth="0" /><port name="TRE_R" depth="0" /><port name="Mult" depth="0" /><port name="Term_Run_R" depth="0" /><port name="ER_Indicators_R" depth="0" /><port name="TRE_HR_R" depth="0" /><port name="StockAggr" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>FunMat</name><inputPorts><port><name>RWorkspace</name><depth>0</depth></port><port><name>Years</name><depth>1</depth></port></inputPorts><outputPorts><port><name>Mat_IID_S</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="RWorkspace" to="RWorkspace" /><map from="Years" to="Years" /></inputMap><outputMap><map from="Mat_IID_S" to="Mat_IID_S" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Years</name>
      <depth>1</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>Mat_IID_S</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
save(list=ls(all.names=FALSE), file="ws.tmp")
load(.wsfile)
load("ws.tmp")

#Set of Years included in reIID_Sospective Analsyes
SetIID_S&lt;-  subset(DataT_IID_S, year&gt;=Years[1] &amp; year&lt;=Years[2])[-1]


#Applying function to recreate IID matrices and estimate lambda
Mat_IID_S&lt;-FunMat(SetIID_S, Years)

</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Years</name>
      <symanticType>INTEGER_LIST</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Mat_IID_S</name>
      <symanticType>R_EXP</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="RWorkspace" depth="0" /><port name="Years" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ConvertListRToRList</name><inputPorts><port><name>list_of_r_expressions</name><depth>2</depth></port></inputPorts><outputPorts><port><name>r_list_of_expressions</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="list_of_r_expressions" to="list_of_r_expressions" /></inputMap><outputMap><map from="r_list_of_expressions" to="r_list_of_expressions" /></outputMap><configBean encoding="dataflow"><dataflow ref="f365c569-b2f3-4a8b-a4a5-fde29c2675b9" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="list_of_r_expressions" depth="2" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Finish</name><inputPorts><port><name>RWorkspace</name><depth>0</depth></port><port><name>RetroMats_pre_S</name><depth>1</depth></port></inputPorts><outputPorts><port><name>SD_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Mean_Matrix_Scenario</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Projections_of_Pop_Size_IID</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>IID_S_Matrices</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="RWorkspace" to="RWorkspace" /><map from="RetroMats_pre_S" to="RetroMats_pre_S" /></inputMap><outputMap><map from="Mean_Matrix_Scenario" to="Mean_Matrix_Scenario" /><map from="IID_S_Matrices" to="IID_S_Matrices" /><map from="Projections_of_Pop_Size_IID" to="Projections_of_Pop_Size_IID" /><map from="SD_Matrix_Scenario" to="SD_Matrix_Scenario" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RetroMats_pre_S</name>
      <depth>1</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>Projections_of_Pop_Size_IID</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>Mean_Matrix_Scenario</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>IID_S_Matrices</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>SD_Matrix_Scenario</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
save(list=ls(all.names=FALSE), file="ws.tmp")
load(.wsfile)
load("ws.tmp")
library(popbio) # lambda

RetroMats_S&lt;- RetroMats_pre_S[1:length(na.omit(unlist(lapply(RetroMats_pre_S,sum))))]

write.table(RetroMats_S, file = IID_S_Matrices, sep=',', quote = F, col.names=TRUE, row.names = FALSE)

#Applying function to estimate lambda
LambdasIID_S&lt;- as.numeric(unlist(lapply(RetroMats_S,lambda)))

#Estimating Average lambda for the lambdas belonging to each IIDuncated maIIDix
Avg_Lambda_IID_S&lt;- mean(LambdasIID_S)
cat('Average IID_S Lambda TR',Period,'=',Avg_Lambda_IID_S,'. Number of IID_S Matrices=',length(RetroMats_S),"\n")

#Replace original KW VR time series and generate a new mean matrix and a standard deviation matrix.

MeanMat_S &lt;- FunMat(DataT_IID_S[-1],Period)

SdMat_S  &lt;- matrix(NA, ncol= length(RetroMats_S[[1]][,1]),nrow= length(RetroMats_S[[1]][1,]))
for(i in 1:length(RetroMats_S[[1]][,1])){
  for(j in 1:length(RetroMats_S[[1]][1,])){
    SdMat_S [i,j] = sd(sapply(RetroMats_S,function(x)x[i,j]))
    }}
SdMat_S

#Results
write.table(MeanMat_S, file = Mean_Matrix_Scenario, sep=',', quote = F, col.names=F, row.names = F)
write.table(SdMat_S,   file = SD_Matrix_Scenario, sep=',', quote = F, col.names=F, row.names = F)

#Use these population matrices to run simulations and compute (i) stochastic population growth and
#(ii) empirical distributions of population size at a time horizon determined by the damping time

#**************  Stochastic Growth Rate  Scenarios  IID only   *****************

GR_Retro_S&lt;- stoch.growth.rate(RetroMats_S, prob = NULL, maxt = 50000, verbose=TRUE)
lambda_Retro_S&lt;-exp(GR_Retro_S$approx)
lambda_Retro_S_CI&lt;-exp(GR_Retro_S$sim.CI)
lambda_stoch_S &lt;- c(lambda_Retro_S,lambda_Retro_S_CI)


#************** Stochastic Projected Population Size Scenarios *****************

Project_S.lt &lt;- vector("list", length(tmaxes)) # create list
for(i in 1:length(tmaxes)){Project_S.lt [[i]] &lt;- matrix(data = NA,
                                     nrow = nreps ,
                                     ncol = 7,
                                     byrow = FALSE,
                                     dimnames = NULL)}
for(t in 1:length(tmaxes)){
Project_S.lt [[t]]&lt;- stoch.projection(RetroMats_S, n0=CountsLastyear$nlastYear, tmax = tmaxes[t], nreps = nreps, prob = NULL,
nmax = NULL, sumweight = rep(1, length(n0)), verbose=FALSE)
}

graphics.off()
pdf(Projections_of_Pop_Size_IID,width=10,height=8)
par( oma=c(2,2,2,2), mar=c(1.5,2,3,2),mai=c(0.4,0.8,0.8,0.4))
par (mfrow=c(2,2))
hist(apply(Project_S.lt[[1]],1,sum),col = colhS, ylab="", xlab="", main= paste(tmaxes[1],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_S.lt[[1]],1,sum)),0)))
hist(apply(Project_S.lt[[2]],1,sum),col = colhS, ylab="", xlab="", main= paste(tmaxes[2],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_S.lt[[2]],1,sum)),0)))
hist(apply(Project_S.lt[[3]],1,sum),col = colhS, ylab="", xlab="", main= paste(tmaxes[3],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_S.lt[[3]],1,sum)),0)))
hist(apply(Project_S.lt[[4]],1,sum),col = colhS, ylab="", xlab="", main= paste(tmaxes[4],'years'));legend('topleft',bty='n', paste('Mean Pop', round(mean(apply(Project_S.lt[[4]],1,sum)),0)))
 mtext(paste('Projections of Pop Size',StockAggr, "IID",Population[1], "mult of HR=",Mult),side = 3, outer = TRUE, col = "black", cex= 1.2)
 mtext (text= "Population Numbers", side=1, outer=TRUE, cex=1., font = 2 )
 mtext (text= "Frequency", side=2,outer=TRUE, cex=1., font = 2 )
 mtext(paste('Stoch. Lambda Demographic=',round(lambda_stoch[1],5),'. Scenario=',round(lambda_stoch_S[1],5)),side=4,outer=TRUE, cex=1., font = 2)
dev.off()
# }

# if(Use_F.Impacts==TRUE){
# addFI&lt;- paste('Fishing scenarios TR is disabled. Fishery impacts=',Use_F.Impacts)
# print(addFI)
# }


</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RetroMats_pre_S</name>
      <symanticType>R_EXP</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Projections_of_Pop_Size_IID</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Mean_Matrix_Scenario</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>IID_S_Matrices</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>SD_Matrix_Scenario</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="RWorkspace" depth="0" /><port name="RetroMats_pre_S" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>RWorkspace</port></sink><source type="dataflow"><port>Workspace</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>TRE_R</port></sink><source type="dataflow"><port>TRE_R</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>Mult</port></sink><source type="dataflow"><port>Mult</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>Term_Run_R</port></sink><source type="dataflow"><port>Term_Run_R</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>ER_Indicators_R</port></sink><source type="dataflow"><port>ER_Indicators_R</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>TRE_HR_R</port></sink><source type="dataflow"><port>TRE_HR_R</port></source></datalink><datalink><sink type="processor"><processor>PrepareTerminalRun</processor><port>StockAggr</port></sink><source type="dataflow"><port>StockAggr</port></source></datalink><datalink><sink type="processor"><processor>FunMat</processor><port>RWorkspace</port></sink><source type="processor"><processor>PrepareTerminalRun</processor><port>RWorkspace</port></source></datalink><datalink><sink type="processor"><processor>FunMat</processor><port>Years</port></sink><source type="dataflow"><port>YearIntervals</port></source></datalink><datalink><sink type="processor"><processor>ConvertListRToRList</processor><port>list_of_r_expressions</port></sink><source type="processor"><processor>FunMat</processor><port>Mat_IID_S</port></source></datalink><datalink><sink type="processor"><processor>Finish</processor><port>RWorkspace</port></sink><source type="processor"><processor>PrepareTerminalRun</processor><port>RWorkspace</port></source></datalink><datalink><sink type="processor"><processor>Finish</processor><port>RetroMats_pre_S</port></sink><source type="processor"><processor>ConvertListRToRList</processor><port>r_list_of_expressions</port></source></datalink><datalink><sink type="dataflow"><port>SD_Matrix_Scenario</port></sink><source type="processor"><processor>Finish</processor><port>SD_Matrix_Scenario</port></source></datalink><datalink><sink type="dataflow"><port>Mean_Matrix_Scenario</port></sink><source type="processor"><processor>Finish</processor><port>Mean_Matrix_Scenario</port></source></datalink><datalink><sink type="dataflow"><port>Projections_of_Pop_Size_IID</port></sink><source type="processor"><processor>Finish</processor><port>Projections_of_Pop_Size_IID</port></source></datalink><datalink><sink type="dataflow"><port>IID_S_Matrices</port></sink><source type="processor"><processor>Finish</processor><port>IID_S_Matrices</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>1e0ff643-3919-4669-a6e3-3e9ca2f319b5</identification>
      </annotationBean>
      <date>2014-09-19 15:17:40.397 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Fishing Scenarios Terminal Run</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ed6c646c-f2d1-4f37-9e5a-496cc43dc6fa</identification>
      </annotationBean>
      <date>2014-08-28 14:09:09.825 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>804f2782-fcc7-4154-b173-ab0bd7525ad8</identification>
      </annotationBean>
      <date>2014-09-19 15:36:29.383 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow simulates fishing scenarios for chinook terminal run. The user controls a multiplier for the harvest rate (HR) that affects the indicator stocks.  The stock aggregate is user defined from the list of significant stocks from the multiple regressions (SignifR). See section 2.7 Fishing scenarios for more information.</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ca4d5a89-f254-4274-a229-32e0afd01a95</identification>
      </annotationBean>
      <date>2014-09-19 15:17:49.178 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d93c4e1f-312d-4fcf-a5b1-1c2866b715c1</identification>
      </annotationBean>
      <date>2014-09-19 15:26:44.514 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>a1669af5-690b-43d8-964f-cadb3146658f</identification>
      </annotationBean>
      <date>2014-09-19 21:10:38.762 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>L. Antonio Vélez-Espino, H. Andres Araujo and Maria Paula Balcazar-Vargas</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></dataflow></workflow>