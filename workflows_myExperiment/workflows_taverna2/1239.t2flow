<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.1.2"><dataflow id="6e215c2d-ab30-408e-a92c-1570c0e8c7a0" role="top"><name>Protein_3D_Visualization</name><inputPorts /><outputPorts><port><name>hasJmol3DStructureVisualization</name><annotations /></port></outputPorts><processors><processor><name>UniProt_Record_value</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">  <value>P68871</value></net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>fetch_jmol_file</name><inputPorts><port><name>jmol_file_location</name><depth>0</depth></port></inputPorts><outputPorts><port><name>jmol_file</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="jmol_file_location" to="jmol_file_location" /></inputMap><outputMap><map from="jmol_file" to="jmol_file" /></outputMap><configBean encoding="dataflow"><dataflow ref="59e74157-1f57-4539-80be-f3963484a754" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="jmol_file_location" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>limit</name><inputPorts><port><name>limit</name><depth>0</depth></port><port><name>input</name><depth>2</depth></port></inputPorts><outputPorts><port><name>output</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="limit" to="limit" /><map from="input" to="input" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">  <script>output = new ArrayList();int limitInt = Integer.parseInt(limit);for (int i = 0; i &lt; input.size() &amp;&amp; limitInt &gt; 0; i++) {  List list = (List) input.get(i);  for (int j = 0; j &lt; list.size() &amp;&amp; limitInt &gt; 0; j++) {    output.add(list.get(j));    limitInt--;  }}</script>  <dependencies />  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>limit</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>input</name>      <depth>2</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <granularDepth>1</granularDepth>      <name>output</name>      <depth>1</depth>      <mimeTypes />    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs></net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="limit" depth="0" /><port name="input" depth="2" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>limit_value</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">  <value>5</value></net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>UniProt-to-PDB</name><inputPorts><port><name>UniProt_Record</name><depth>1</depth></port></inputPorts><outputPorts><port><name>has3DStructure (PDB_Record)</name><depth>2</depth><granularDepth>2</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>sadi-activity</artifact><version>0.2.0</version></raven><class>net.sf.taverna.t2.activities.sadi.SADIActivity</class><inputMap><map from="UniProt_Record" to="UniProt_Record" /></inputMap><outputMap><map from="has3DStructure (PDB_Record)" to="has3DStructure (PDB_Record)" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.sadi.SADIActivityConfigurationBean xmlns="">  <sparqlEndpoint>http://biordf.net/sparql</sparqlEndpoint>  <graphName>http://sadiframework.org/registry/</graphName>  <serviceURI>http://sadiframework.org/examples/uniprot2pdb</serviceURI>  <inputRestrictionPaths>    <list>      <string>UniProt_Record</string>    </list>  </inputRestrictionPaths>  <outputRestrictionPaths>    <list>      <string>AnnotatedUniProtRecord</string>      <string>has3DStructure (PDB_Record)</string>    </list>  </outputRestrictionPaths>  <attributes /></net.sf.taverna.t2.activities.sadi.SADIActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="UniProt_Record" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>renderProteinStructure</name><inputPorts><port><name>PDB_Record</name><depth>1</depth></port></inputPorts><outputPorts><port><name>hasJmol3DStructureVisualization (Thing)</name><depth>2</depth><granularDepth>2</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>sadi-activity</artifact><version>0.2.0</version></raven><class>net.sf.taverna.t2.activities.sadi.SADIActivity</class><inputMap><map from="PDB_Record" to="PDB_Record" /></inputMap><outputMap><map from="hasJmol3DStructureVisualization (Thing)" to="hasJmol3DStructureVisualization (Thing)" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.sadi.SADIActivityConfigurationBean xmlns="">  <sparqlEndpoint>http://biordf.net/sparql</sparqlEndpoint>  <graphName>http://sadiframework.org/registry/</graphName>  <serviceURI>http://sadiframework.org/services/renderProteinStructure</serviceURI>  <inputRestrictionPaths>    <list>      <string>PDB_Record</string>    </list>  </inputRestrictionPaths>  <outputRestrictionPaths>    <list>      <string>renderProteinStructure_Output</string>      <string>hasJmol3DStructureVisualization (Thing)</string>    </list>  </outputRestrictionPaths>  <attributes /></net.sf.taverna.t2.activities.sadi.SADIActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="PDB_Record" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>fetch_jmol_file</processor><port>jmol_file_location</port></sink><source type="processor"><processor>limit</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>limit</processor><port>limit</port></sink><source type="processor"><processor>limit_value</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>limit</processor><port>input</port></sink><source type="processor"><processor>renderProteinStructure</processor><port>hasJmol3DStructureVisualization (Thing)</port></source></datalink><datalink><sink type="processor"><processor>UniProt-to-PDB</processor><port>UniProt_Record</port></sink><source type="processor"><processor>UniProt_Record_value</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>renderProteinStructure</processor><port>PDB_Record</port></sink><source type="processor"><processor>UniProt-to-PDB</processor><port>has3DStructure (PDB_Record)</port></source></datalink><datalink><sink type="dataflow"><port>hasJmol3DStructureVisualization</port></sink><source type="processor"><processor>fetch_jmol_file</processor><port>jmol_file</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">        <text>Uniprot Protein Visualization</text>      </annotationBean>      <date>2010-05-01 12:18:46.96 PDT</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">        <text>Jmol 3D visualization of a protein structure.</text>      </annotationBean>      <date>2010-05-01 12:21:28.862 PDT</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">        <text>Protein 3D Visualization</text>      </annotationBean>      <date>2010-05-01 12:22:01.230 PDT</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">        <text>David Withers</text>      </annotationBean>      <date>2010-05-01 12:17:12.903 PDT</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></dataflow><dataflow id="59e74157-1f57-4539-80be-f3963484a754" role="nested"><name>Fetch_Jmol_file</name><inputPorts><port><name>jmol_file_location</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>jmol_file</name><annotations /></port></outputPorts><processors><processor><name>splitURL</name><inputPorts><port><name>regex</name><depth>0</depth></port><port><name>string</name><depth>0</depth></port></inputPorts><outputPorts><port><name>split</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="regex" to="regex" /><map from="string" to="string" /></inputMap><outputMap><map from="split" to="split" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <localworkerName>org.embl.ebi.escience.scuflworkers.java.SplitByRegex</localworkerName>  <script>List split = new ArrayList();if (!string.equals("")) {        String regexString = ",";        if (regex != void) {                regexString = regex;        }        String[] result = string.split(regexString);        for (int i = 0; i &lt; result.length; i++) {                split.add(result[i]);        }}</script>  <dependencies />  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>string</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>regex</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <granularDepth>1</granularDepth>      <name>split</name>      <depth>1</depth>      <mimeTypes>        <string>l('text/plain')</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="regex" depth="0" /><port name="string" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>regex_value</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">  <value>=</value></net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>selectLastUrl</name><inputPorts><port><name>in</name><depth>1</depth></port></inputPorts><outputPorts><port><name>out</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="in" to="in" /></inputMap><outputMap><map from="out" to="out" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">  <script>out = (String) in.get(in.size() - 1);</script>  <dependencies />  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>in</name>      <depth>1</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <granularDepth>0</granularDepth>      <name>out</name>      <depth>0</depth>      <mimeTypes />    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs></net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="in" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Get_Web_Page_from_URL</name><inputPorts><port><name>url</name><depth>0</depth></port></inputPorts><outputPorts><port><name>contents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="url" to="url" /></inputMap><outputMap><map from="contents" to="contents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <localworkerName>org.embl.ebi.escience.scuflworkers.java.WebPageFetcher</localworkerName>  <script>URL inputURL = null;if (base != void) {  inputURL = new URL(new URL(base), url);}else {  inputURL = new URL(url);}URLConnection con = inputURL.openConnection();InputStream in = con.getInputStream();InputStreamReader isr = new InputStreamReader(in);Reader inReader = new BufferedReader(isr);StringBuffer buf = new StringBuffer();int ch;while ((ch = inReader.read()) &gt; -1) {  buf.append((char)ch);}inReader.close();contents = buf.toString();//String NEWLINE = System.getProperty("line.separator");////URL inputURL = null;//if (base != void) {//      inputURL = new URL(new URL(base), url);//} else {//      inputURL = new URL(url);//}//StringBuffer result = new StringBuffer();//BufferedReader reader = new BufferedReader(new InputStreamReader(inputURL.openStream()));//String line = null;//while ((line = reader.readLine()) != null) {//      result.append(line);//      result.append(NEWLINE);//}////contents = result.toString();</script>  <dependencies />  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>url</name>      <depth>0</depth>      <mimeTypes>        <string>'text/x-taverna-web-url'</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>      <name>base</name>      <depth>0</depth>      <mimeTypes>        <string>'text/x-taverna-web-url'</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <granularDepth>0</granularDepth>      <name>contents</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain,text/html'</string>      </mimeTypes>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.1</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="url" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>splitURL</processor><port>regex</port></sink><source type="processor"><processor>regex_value</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>splitURL</processor><port>string</port></sink><source type="dataflow"><port>jmol_file_location</port></source></datalink><datalink><sink type="processor"><processor>selectLastUrl</processor><port>in</port></sink><source type="processor"><processor>splitURL</processor><port>split</port></source></datalink><datalink><sink type="processor"><processor>Get_Web_Page_from_URL</processor><port>url</port></sink><source type="processor"><processor>selectLastUrl</processor><port>out</port></source></datalink><datalink><sink type="dataflow"><port>jmol_file</port></sink><source type="processor"><processor>Get_Web_Page_from_URL</processor><port>contents</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">        <text>SADI jmol example</text>      </annotationBean>      <date>2010-01-07 10:32:08.517 PST</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">        <text>Fetch Jmol file</text>      </annotationBean>      <date>2010-05-01 12:23:32.363 PDT</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">        <text>SADI Jmol example</text>      </annotationBean>      <date>2010-01-07 10:32:47.70 PST</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">        <text>An example workflow showing use of the SADI activity</text>      </annotationBean>      <date>2010-01-07 10:33:38.407 PST</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">        <text>Fetches a jmol file from a url</text>      </annotationBean>      <date>2010-05-01 12:24:03.300 PDT</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">        <text>David Withers</text>      </annotationBean>      <date>2010-01-07 10:31:42.495 PST</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></dataflow></workflow>