<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-biodiversity-2.5.0"><dataflow id="6172efcd-9abe-4c4f-8473-3166ccfe4bbb" role="top"><name>Killer_whale_demogra</name><inputPorts><port><name>Sims</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>10000</text>
      </annotationBean>
      <date>2014-08-20 11:59:23.582 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Number of simulations that are used for generation of stochastic vital rate elasticities. This input indicates the number of stochastic matrices generated from randomly drawn vital rates. After computing population growth and elasticities for each of these matrices, a bootstrap is used to compute stochastic population growth and mean elasticities and their 95% confidence intervals.</text>
      </annotationBean>
      <date>2014-08-20 11:58:29.582 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>EndYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>2011</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Last year to be considered in the analysis</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>VR_combined_csv</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Time series of vital rates (fecundity and survival by life stage) for both population.

VR_combined.csv</text>
      </annotationBean>
      <date>2014-09-11 15:14:32.767 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text />
      </annotationBean>
      <date>2014-09-11 15:14:36.739 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>KWDataFile</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Itâ€™s a .csv file. Population File. This is a .csv file with the census data (i.e., counts) by age and group (juvenile, male or female) for the study population. For animals of uncertain year of death, amortized partial values were used. For instance, an animal with probable death over a span of two years was counted as 0.5 for the first year and 0.0 for the second year.

SRKW_R.csv
or
NRKW_R.csv</text>
      </annotationBean>
      <date>2014-08-20 12:28:53.57 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>
</text>
      </annotationBean>
      <date>2014-09-11 15:14:01.773 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>StartYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1987</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>First year to be considered in the analysis.</text>
      </annotationBean>
      <date>2014-08-20 11:59:47.78 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Population</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Name of studied population. 

Tutorial examples: SRKW or NRKW (Southern/Northern Resident Killer Whale population)</text>
      </annotationBean>
      <date>2014-08-20 11:58:18.421 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>SRKW</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Standr_Data</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Use standardized data? YES or NO</text>
      </annotationBean>
      <date>2014-08-20 11:59:32.920 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>NO</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>zipFile</name><lastPredictedDepth>0</lastPredictedDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Zip file with the results of workflow.
Results when a run is done with the defaults inputs (see tutorial). </text>
      </annotationBean>
      <date>2014-08-20 12:36:34.433 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1. Alive 2011 SRKW.csv
2. Alive 2011 SRKW.pdf
3. Counts and Proportions T0 SRKW 1987-2011.csv
4. Counts by Year SRKW 1987-2011.csv
5. Damping Time SRKW 1987-2011.txt
6. Det. VRs Sensitivity and Elasticity SRKW 1987-2011.pdf
7. Effects of changing KW VRs SRKW 1987-2011.pdf
8. Eigen Analysis.txt
9 MeanMatrix SRKW.csv
10. Stable Stage Projection SRKW 1987-2011.pdf
11. Stable State Values SRKW 1987-2011.csv
12. Stats by Category SRKW 1987-2011.csv
13. Stochastic Elasticity of VR SRKW.pdf
14. Stochastic Elasticity Stats SRKW.csv
15. Stochastic Vital Rates SRKW.pdf
16. Vital rates estimates SRKW 1987-2011.csv
17. VR_combined.png
</text>
      </annotationBean>
      <date>2014-09-11 16:27:17.594 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></outputPorts><processors><processor><name>Resident_killer_whal</name><inputPorts><port><name>Sims</name><depth>0</depth></port><port><name>EndYear</name><depth>0</depth></port><port><name>VR_combined_csv</name><depth>0</depth></port><port><name>KWDataFile</name><depth>0</depth></port><port><name>StartYear</name><depth>0</depth></port><port><name>Population</name><depth>0</depth></port><port><name>Standr_Data</name><depth>0</depth></port></inputPorts><outputPorts><port><name>StableStageProjectionPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>VitalRatesEstimates</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StochasticElasticityStats</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>AliveCSV</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StatsByCategory</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>DampingTime</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StableStateValues</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>CountsAndProportionsT0</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>EffectsOfChangingKWVRsPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StochasticElasticityVRPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>AlivePDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>MeanMatrix</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>EigenAnalysis</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>DetVRsSensitivityElasticityPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StochasticVitalRatesPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>VR_combined_PNG</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>CountsByYear</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="StartYear" to="StartYear" /><map from="Sims" to="Sims" /><map from="VR_combined_csv" to="VR_combined_csv" /><map from="KWDataFile" to="KWDataFile" /><map from="Population" to="Population" /><map from="EndYear" to="EndYear" /><map from="Standr_Data" to="Standr_Data" /></inputMap><outputMap><map from="StochasticElasticityStats" to="StochasticElasticityStats" /><map from="StochasticVitalRatesPDF" to="StochasticVitalRatesPDF" /><map from="AliveCSV" to="AliveCSV" /><map from="DetVRsSensitivityElasticityPDF" to="DetVRsSensitivityElasticityPDF" /><map from="EffectsOfChangingKWVRsPDF" to="EffectsOfChangingKWVRsPDF" /><map from="CountsByYear" to="CountsByYear" /><map from="MeanMatrix" to="MeanMatrix" /><map from="AlivePDF" to="AlivePDF" /><map from="CountsAndProportionsT0" to="CountsAndProportionsT0" /><map from="StableStateValues" to="StableStateValues" /><map from="DampingTime" to="DampingTime" /><map from="VR_combined_PNG" to="VR_combined_PNG" /><map from="StochasticElasticityVRPDF" to="StochasticElasticityVRPDF" /><map from="VitalRatesEstimates" to="VitalRatesEstimates" /><map from="EigenAnalysis" to="EigenAnalysis" /><map from="StatsByCategory" to="StatsByCategory" /><map from="StableStageProjectionPDF" to="StableStageProjectionPDF" /></outputMap><configBean encoding="dataflow"><dataflow ref="7eb250b2-c952-48ea-9678-78bf6dac82b6" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Sims" depth="0" /><port name="EndYear" depth="0" /><port name="VR_combined_csv" depth="0" /><port name="KWDataFile" depth="0" /><port name="StartYear" depth="0" /><port name="Population" depth="0" /><port name="Standr_Data" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Validate_Sims</name><inputPorts><port><name>s</name><depth>0</depth></port></inputPorts><outputPorts><port><name>i</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="s" to="s" /></inputMap><outputMap><map from="i" to="i" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>s</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>i=Integer.parseInt(s.trim());
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="s" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Validate_EndYear</name><inputPorts><port><name>s</name><depth>0</depth></port></inputPorts><outputPorts><port><name>i</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="s" to="s" /></inputMap><outputMap><map from="i" to="i" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>s</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>i=Integer.parseInt(s.trim());
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="s" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Validate_StartYear</name><inputPorts><port><name>s</name><depth>0</depth></port></inputPorts><outputPorts><port><name>i</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="s" to="s" /></inputMap><outputMap><map from="i" to="i" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>s</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>i=Integer.parseInt(s.trim());
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="s" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Validate_Standr_Data</name><inputPorts><port><name>s</name><depth>0</depth></port></inputPorts><outputPorts><port><name>s</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="s" to="s" /></inputMap><outputMap><map from="s" to="s" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>s</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>s</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>switch(s)
{
case "YES":
case "NO":
	break;
default:
	throw RuntimeException("Invalid value");
}
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="s" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Create_zip_file</name><inputPorts><port><name>StableStageProjectionPDF</name><depth>0</depth></port><port><name>StochasticElasticityStats</name><depth>0</depth></port><port><name>VitalRatesEstimates</name><depth>0</depth></port><port><name>AliveCSV</name><depth>0</depth></port><port><name>StochasticVitalRatesPDF</name><depth>0</depth></port><port><name>Population</name><depth>0</depth></port><port><name>DetVRsSensitivityElasticityPDF</name><depth>0</depth></port><port><name>EigenAnalysis</name><depth>0</depth></port><port><name>StochasticElasticityVRPDF</name><depth>0</depth></port><port><name>EndYear</name><depth>0</depth></port><port><name>StableStateValues</name><depth>0</depth></port><port><name>CountsAndProportionsT0</name><depth>0</depth></port><port><name>AlivePDF</name><depth>0</depth></port><port><name>StatsByCategory</name><depth>0</depth></port><port><name>CountsByYear</name><depth>0</depth></port><port><name>MeanMatrix</name><depth>0</depth></port><port><name>StartYear</name><depth>0</depth></port><port><name>VR_combined_PNG</name><depth>0</depth></port><port><name>DampingTime</name><depth>0</depth></port><port><name>EffectsOfChangingKWVRsPDF</name><depth>0</depth></port></inputPorts><outputPorts><port><name>zipFile</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="StochasticElasticityStats" to="StochasticElasticityStats" /><map from="StochasticVitalRatesPDF" to="StochasticVitalRatesPDF" /><map from="AliveCSV" to="AliveCSV" /><map from="EffectsOfChangingKWVRsPDF" to="EffectsOfChangingKWVRsPDF" /><map from="DetVRsSensitivityElasticityPDF" to="DetVRsSensitivityElasticityPDF" /><map from="CountsByYear" to="CountsByYear" /><map from="MeanMatrix" to="MeanMatrix" /><map from="AlivePDF" to="AlivePDF" /><map from="StableStateValues" to="StableStateValues" /><map from="CountsAndProportionsT0" to="CountsAndProportionsT0" /><map from="DampingTime" to="DampingTime" /><map from="VR_combined_PNG" to="VR_combined_PNG" /><map from="StartYear" to="StartYear" /><map from="StochasticElasticityVRPDF" to="StochasticElasticityVRPDF" /><map from="Population" to="Population" /><map from="EndYear" to="EndYear" /><map from="EigenAnalysis" to="EigenAnalysis" /><map from="VitalRatesEstimates" to="VitalRatesEstimates" /><map from="StatsByCategory" to="StatsByCategory" /><map from="StableStageProjectionPDF" to="StableStageProjectionPDF" /></inputMap><outputMap><map from="zipFile" to="zipFile" /></outputMap><configBean encoding="dataflow"><dataflow ref="08863eb6-933d-4f31-b809-f59f7abc8b66" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="StableStageProjectionPDF" depth="0" /><port name="StochasticElasticityStats" depth="0" /><port name="VitalRatesEstimates" depth="0" /><port name="AliveCSV" depth="0" /><port name="StochasticVitalRatesPDF" depth="0" /><port name="Population" depth="0" /><port name="DetVRsSensitivityElasticityPDF" depth="0" /><port name="EigenAnalysis" depth="0" /><port name="StochasticElasticityVRPDF" depth="0" /><port name="EndYear" depth="0" /><port name="StableStateValues" depth="0" /><port name="CountsAndProportionsT0" depth="0" /><port name="AlivePDF" depth="0" /><port name="StatsByCategory" depth="0" /><port name="CountsByYear" depth="0" /><port name="MeanMatrix" depth="0" /><port name="StartYear" depth="0" /><port name="VR_combined_PNG" depth="0" /><port name="DampingTime" depth="0" /><port name="EffectsOfChangingKWVRsPDF" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>Sims</port></sink><source type="processor"><processor>Validate_Sims</processor><port>i</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>EndYear</port></sink><source type="processor"><processor>Validate_EndYear</processor><port>i</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>VR_combined_csv</port></sink><source type="dataflow"><port>VR_combined_csv</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>KWDataFile</port></sink><source type="dataflow"><port>KWDataFile</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>StartYear</port></sink><source type="processor"><processor>Validate_StartYear</processor><port>i</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>Population</port></sink><source type="dataflow"><port>Population</port></source></datalink><datalink><sink type="processor"><processor>Resident_killer_whal</processor><port>Standr_Data</port></sink><source type="processor"><processor>Validate_Standr_Data</processor><port>s</port></source></datalink><datalink><sink type="processor"><processor>Validate_Sims</processor><port>s</port></sink><source type="dataflow"><port>Sims</port></source></datalink><datalink><sink type="processor"><processor>Validate_EndYear</processor><port>s</port></sink><source type="dataflow"><port>EndYear</port></source></datalink><datalink><sink type="processor"><processor>Validate_StartYear</processor><port>s</port></sink><source type="dataflow"><port>StartYear</port></source></datalink><datalink><sink type="processor"><processor>Validate_Standr_Data</processor><port>s</port></sink><source type="dataflow"><port>Standr_Data</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StableStageProjectionPDF</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>StableStageProjectionPDF</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StochasticElasticityStats</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>StochasticElasticityStats</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>VitalRatesEstimates</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>VitalRatesEstimates</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>AliveCSV</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>AliveCSV</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StochasticVitalRatesPDF</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>StochasticVitalRatesPDF</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>Population</port></sink><source type="dataflow"><port>Population</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>DetVRsSensitivityElasticityPDF</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>DetVRsSensitivityElasticityPDF</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>EigenAnalysis</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>EigenAnalysis</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StochasticElasticityVRPDF</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>StochasticElasticityVRPDF</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>EndYear</port></sink><source type="dataflow"><port>EndYear</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StableStateValues</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>StableStateValues</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>CountsAndProportionsT0</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>CountsAndProportionsT0</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>AlivePDF</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>AlivePDF</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StatsByCategory</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>StatsByCategory</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>CountsByYear</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>CountsByYear</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>MeanMatrix</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>MeanMatrix</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>StartYear</port></sink><source type="dataflow"><port>StartYear</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>VR_combined_PNG</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>VR_combined_PNG</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>DampingTime</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>DampingTime</port></source></datalink><datalink><sink type="processor"><processor>Create_zip_file</processor><port>EffectsOfChangingKWVRsPDF</port></sink><source type="processor"><processor>Resident_killer_whal</processor><port>EffectsOfChangingKWVRsPDF</port></source></datalink><datalink><sink type="dataflow"><port>zipFile</port></sink><source type="processor"><processor>Create_zip_file</processor><port>zipFile</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>d825eddc-7769-42e6-be05-6507f8410858</identification>
      </annotationBean>
      <date>2014-08-22 11:39:46.201 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>26b5611e-067f-4435-8175-e991a0627337</identification>
      </annotationBean>
      <date>2014-08-20 11:44:26.833 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>3634894e-bdbb-48c2-a5cc-7b7f2e2ede59</identification>
      </annotationBean>
      <date>2014-08-15 09:49:14.292 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>bdffc09c-2bbd-497c-8ab1-24597574c060</identification>
      </annotationBean>
      <date>2014-09-17 09:02:13.785 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0c016a7a-e900-4774-802b-a7ea84d81f22</identification>
      </annotationBean>
      <date>2014-08-20 12:05:03.444 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>c545ff16-a237-43ad-93b2-aa770b0b4461</identification>
      </annotationBean>
      <date>2014-08-20 11:45:31.270 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>75d9f36e-edb9-431e-b45c-d0684a3ecb3a</identification>
      </annotationBean>
      <date>2014-08-20 11:49:08.247 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>19f0bfd0-63ca-46bb-9ffe-10d5736563d9</identification>
      </annotationBean>
      <date>2014-08-29 11:14:13.140 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>bebee102-18e9-456e-8c34-64df1704397c</identification>
      </annotationBean>
      <date>2014-08-29 07:54:36.601 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>bbf61958-a377-4875-9c78-a219ca6bf640</identification>
      </annotationBean>
      <date>2014-09-18 12:28:04.632 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow analyzes the demography and population growth of resident killer whale populations. Originally created for comparative studies of Northeastern Pacific populations at risk, Southern Resident Killer Whales (SRKW) and the Northern Resident Killer Whales (NRKW), the workflow can be used for other killer whale populations or cetaceans counting with census data and life cycles that can be represented using the matrix models described in this document.

This workflow perform the following analyses:

â€¢ Vital rates estimation and probability distributions
â€¢ Construction of Birth-flow Matrix Model
â€¢ Eigen analysis
â€¢ Elasticity analysis (deterministic and stochastic)
â€¢ Damping time

To run this workflow in Taverna workbench, the users requires to have installed the Interaction Service plugin in Taverna. The workflow also requires an Rserve installation with the popbio, lattice, betareg, Formula and R.utils packages installed.

This workflow has been created by the Biodiversity Virtual e-Laboratory (BioVeL http://www.biovel.eu/) project and Fisheries and Oceans of Canada, BC, Canada. (http://www.pac.dfo-mpo.gc.ca/index-eng.html). BioVeL is funded by the EUâ€™s Seventh Framework Program, grant no. 283359.

Related publications

VÃ©lez-Espino, L.A., John K.B. Ford, Eric Ward, Chuck K. Parken, Larrie LaVoy, Ken Balcomb, M. Bradley Hanson, Dawn. P. Noren, Graeme Ellis, Tom Cooney, and Rishi Sharma. 2013. Sensitivity of resident Killer Whale population dynamics to Chinook salmon abundance. Completion Report, Pacific Salmon Commission, Southern Boundary Restoration and Enhancement Fund, Vancouver BC. 191 p.

VÃ©lez-Espino, L.A., Ford, J.K.B., Araujo, H.A., Ellis, G., Parken, C.K, &amp; Balcomb, K. Comparative demography and viability of northeast Pacific resident killer whale populations at risk. Can. Tech. Rep. Fish. Aquat. Sci. 3084: vi + 56 p.

VÃ©lez-Espino, L.A., John K.B. Ford, H. Andres Araujo, Graeme Ellis, Charles K. Parken and Rishi Sharma. 2014. Relative importance of Chinook salmon abundance  on resident killer whale population growth and viability. Aquatic Conservation: Marine and Freshwater Ecosystems. Article first published online: 21 AUG 2014. DOI: 10.1002/aqc.2494.
</text>
      </annotationBean>
      <date>2014-09-24 13:43:43.342 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>3351d009-5974-4936-9fd0-5c60d0b6a684</identification>
      </annotationBean>
      <date>2014-08-29 07:48:42.680 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7814b1e2-00c0-4c1f-9f0e-b1d939cd203f</identification>
      </annotationBean>
      <date>2014-09-09 09:13:15.804 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>091ce946-60f4-431e-a5ab-caf5dab9a825</identification>
      </annotationBean>
      <date>2014-08-29 11:21:17.675 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e8198d25-e5ba-4703-8bb1-2f6618fb057f</identification>
      </annotationBean>
      <date>2014-08-20 12:26:43.734 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>1f51fab7-e5b2-40ac-bcf8-c4aa53b213b9</identification>
      </annotationBean>
      <date>2014-08-20 12:32:15.865 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>b96911df-96bc-4cad-afa9-3264ce04b3b3</identification>
      </annotationBean>
      <date>2014-08-20 12:33:38.189 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>33536f56-fd16-4739-b9c4-c9bfa0c731d8</identification>
      </annotationBean>
      <date>2014-09-09 09:14:39.166 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>be75c7c4-bc14-43af-96d1-556ab8b10d55</identification>
      </annotationBean>
      <date>2014-09-24 13:41:21.102 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>448e0d9f-d08a-4cff-86e6-85af23000e2f</identification>
      </annotationBean>
      <date>2014-08-15 11:14:28.782 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>01127762-69e8-44d3-b126-b6cd6dc4d706</identification>
      </annotationBean>
      <date>2014-09-11 15:12:57.750 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>6172efcd-9abe-4c4f-8473-3166ccfe4bbb</identification>
      </annotationBean>
      <date>2014-09-24 13:43:44.762 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>c04d2820-e810-4cb9-bcaf-0af13e38510d</identification>
      </annotationBean>
      <date>2014-09-11 16:27:21.994 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ea4dbf95-0454-4d82-ba2e-0f6bab53f8f7</identification>
      </annotationBean>
      <date>2014-09-11 15:14:36.899 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>fea5748b-9e12-4cac-8ec3-9a6de7f739e0</identification>
      </annotationBean>
      <date>2014-08-20 12:28:15.220 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>68fec2cb-3afd-435a-a6dc-568e94c3a1b1</identification>
      </annotationBean>
      <date>2014-08-20 12:35:29.175 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>2ea3b1f8-da27-4fb4-ae4c-055029ebc8d1</identification>
      </annotationBean>
      <date>2014-09-09 08:27:50.728 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>L. Antonio VÃ©lez-Espino, H. Andres Araujo, Maria Paula Balcazar-Vargas, Jonathan  Giddy and Francisco Quevedo</text>
      </annotationBean>
      <date>2014-09-10 09:36:45.955 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>96c5ea60-70f9-4c4d-b863-589919a56eb2</identification>
      </annotationBean>
      <date>2014-08-20 11:51:00.813 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>4b1c1ef7-8b62-4086-b47b-df05827b0c4a</identification>
      </annotationBean>
      <date>2014-08-20 11:42:35.739 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Killer whale demography
</text>
      </annotationBean>
      <date>2014-09-11 15:12:56.487 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e114e940-1c58-466a-b364-2a0959c55581</identification>
      </annotationBean>
      <date>2014-08-29 07:55:07.740 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7d6fbfe2-ac1a-4a33-a6cf-7b9cdca1172f</identification>
      </annotationBean>
      <date>2014-09-09 08:31:47.381 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>a26e52ee-0355-4259-9322-25a88ade477c</identification>
      </annotationBean>
      <date>2014-09-24 13:39:18.856 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>dd7c931b-421f-4ba2-863c-25aca1080121</identification>
      </annotationBean>
      <date>2014-08-20 12:29:30.489 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>43e85fc0-29e4-4b8b-861a-ca00be3595b4</identification>
      </annotationBean>
      <date>2014-09-10 09:36:23.341 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>61ad1507-8f61-463c-9084-9dbf50940b90</identification>
      </annotationBean>
      <date>2014-09-10 09:17:47.145 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>c501d295-d9af-4233-a44d-62d95720b166</identification>
      </annotationBean>
      <date>2014-09-18 12:27:30.836 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>63a7b1be-2ed5-4350-b5f9-02d5e04ca2ae</identification>
      </annotationBean>
      <date>2014-08-29 11:13:08.952 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>b62f9e58-30f1-4f99-8509-b6f3100a449a</identification>
      </annotationBean>
      <date>2014-09-10 09:36:47.665 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>ef5d7147-265a-41b8-87f5-bbc85d5d30f4</identification>
      </annotationBean>
      <date>2014-08-20 12:37:25.88 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="7eb250b2-c952-48ea-9678-78bf6dac82b6" role="nested"><name>Resident_killer_whal</name><inputPorts><port><name>Sims</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1000</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>EndYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>2011</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Last year to be considered in the analysis</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>VR_combined_csv</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>Calf_surv_S,Calf_surv_N,Juv_surv_S,Juv_surv_N,F1_surv_S,F1_surv_N,F2_surv_S,F2_surv_N,F3_surv_S,F3_surv_N,M1_surv_S,M1_surv_N,M2_surv_S,M2_surv_N,F1_fec_S,F1_fec_N,F2_fec_S,F2_fec_N
0.75,1,1,0.993055556,1,1,1,0.970238095,1,0.785714286,1,1,1,1,0.15,0.236842105,0.057142857,0.083333333
0,0.857142857,1,0.992647059,1,1,1,0.882051282,1,0.875,0.761904762,1,1,1,0.095238095,0.164705882,0,0</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>KWDataFile</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>Year    Age Count   Offspring   Cat1
1973    1   5.5 NA  Juv
1973    2   5.5 NA  Juv
1973    3   2.5 NA  Juv
1973    4   0   NA  Juv
1973    5   0   NA  Juv
1973    6   0   NA  Juv
</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Population File. The file must be a CSV file.</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>StartYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>First year to be considered in the analysis</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>1987</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Population</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>SRKW</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Name of studied population. Currently SRKW or NRKW (Southern/Northern Resident Killer Whale population)</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port><port><name>Standr_Data</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>NO</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>StableStageProjectionPDF</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>EigenAnalysis</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>EffectsOfChangingKWVRsPDF</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>VitalRatesEstimates</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>StochasticElasticityVRPDF</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>StochasticElasticityStats</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>AliveCSV</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>MeanMatrix</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>AlivePDF</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>StatsByCategory</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>DampingTime</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>StableStateValues</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>DetVRsSensitivityElasticityPDF</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>StochasticVitalRatesPDF</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>VR_combined_PNG</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>CountsByYear</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port><port><name>CountsAndProportionsT0</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port></outputPorts><processors><processor><name>MonsterCave</name><inputPorts /><outputPorts><port><name>RWorkspace</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap /><outputMap><map from="RWorkspace" to="RWorkspace" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs />
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
#FUNCTIONS

set.seed=pi*pi



#This fuction uses counts and factors to estimate the number of individuals in each age category
CountFun&lt;-function(counts, factor){
Count&lt;- as.integer(tapply(counts,factor(factor),sum))
}

# Function modified from RPA code (does not use popbio)
eigenall &lt;- function(A) {
    EV &lt;- eigen(A, symmetric=F)                                                 #Eigen returns a lost with eigen values
          EigenVecs &lt;- EV$vectors                                               # extract matrix of right eigenvectors as columns
          lambdas &lt;- EV$values
    V  &lt;- Conj(solve(EigenVecs ))                                               # inv(A) [matlab] -&gt; solve(A) [R]
                                                                                # V=matrix with left eigenvectors of A as rows
    lambda1_dominant &lt;- as.numeric(lambdas[1])                                  # dominant eigenvalue
    w &lt;- as.numeric(EigenVecs [,1])                                             # w=stable distribution
    w &lt;- w/sum(w)                                                               # Right eigen vector
    v &lt;- Re(V[1,])                                                              # v=vector of reproductive values
    v &lt;- v/v[1]                                                                 # left eigen vector

    list(lambdas=lambdas, lambda1_dominant =lambda1_dominant, EigenVecs=EigenVecs , w=w, V=V, v=v)
}

lnorms &lt;- function(means, vars, rawelems) {
# lnorms(means, vars, rawelems)
# converts standard normal random values (rawelems) to lognormals
# with the defined means and variances.
# For 1 random value you would call: lnorms(mean, var, randn)
# Inputting vectors makese multiple lognormals simultaneously.
# Note that vars are variances, not st. deviations.

nmeans &lt;- log(means) - 0.5*log(vars/means^2+1)
nvars &lt;- log(vars/means^2+1)
normals &lt;- rawelems*sqrt(nvars) + nmeans;
lns &lt;- exp(normals)
lns
}


#function gamma=gammarv(alpha,beta,n);
# gammarv(alpha, beta,n) generates a vector of n random numbers
# from a Gamma(alpha,beta) distribution:
#   f(x)=exp(-x/beta)*x^(alpha-1)/[Gamma(alpha)*beta^alpha]   if x&gt;=0
#   f(x)=0 if x&lt;0
# where Gamma(z) is the gamma function.
# Both alpha and beta must be positive.
# Mean(x)=alpha*beta; Var(x)=alpha*beta^2
# See G.S. Fishman, 1973, Concepts and Methods in Discrete Event
# Digital Simulation, Wiley, New York, pp. 208-209.

gammarv &lt;- function(Alpha, Beta, n){
Gamm &lt;- matrix(NA, 1, n)
for(i in 1:n){
    X &lt;- 0
    k &lt;- floor(Alpha)
    g &lt;- Alpha - k
    if(k &gt; 0){
        X &lt;- -log( prod( runif(k) ) )
    }
    if(g == 0){
        Gamm[i] &lt;- Beta*X
    }
    else{
        a &lt;- g
        b &lt;- 1 - g
        y &lt;- 1
        z &lt;- 1
        while(y + z &gt; 1){
           y=runif(1)^(1/a)
           z=runif(1)^(1/b)
        }
        Y &lt;- y/(y+z)               # Y is a Beta(g,1-g) r.v.
        Z &lt;- -log( runif(1) )      # Z is a Gamma(1,1) r.v.
        Gamm[i] &lt;- Beta*(X+Y*Z)
    }
}
Gamm
}


betarv &lt;- function(m,v,n) {
# betarv(m,v,n) generates a row vector of length n, the elements of which
#% are Beta random variables with mean m and variance v;
#% see G.S. Fishman, 1973, Concepts and Methods in Discrete Event
#% Digital Simulation, Wiley, New York, pp. 204-208.
#% REQUIRES THE FILE gammarv.m

if (v==0) {
   Beta &lt;- matrix(m,1,n)
}
else if (v &gt;= m*(1-m) ) {
    print("Variance of Beta too large given the mean")
}
else {
    a &lt;- m*(m*(1-m)/v - 1)
    b &lt;- (1-m)*(m*(1-m)/v - 1)
    Beta &lt;- matrix(NA, 1,n)
    for (i in 1:n) {
        k1 &lt;- floor(a)
        k2 &lt;- floor(b)
        if (k1==0 &amp; k2==0) {
            Y &lt;- 1
            Z &lt;- 1
            while (Y+Z &gt; 1) {
                Y &lt;- runif(1)^(1/a)
                Z &lt;- runif(1)^(1/b)
            }
        }
        else {
            Y &lt;- gammarv(a,1,1)
            Z &lt;- gammarv(b,1,1)
        }
        Beta[i] &lt;- Y/(Y+Z)
    }
}
Beta

}

############ Scaled

betarv &lt;- function(m,v,n, bmin=0, bmax=1) {
# betarv(m,v,n) generates a row vector of length n, the elements of which
#% are Beta random variables with mean m and variance v;
#% see G.S. Fishman, 1973, Concepts and Methods in Discrete Event
#% Digital Simulation, Wiley, New York, pp. 204-208.
#% REQUIRES THE FILE gammarv.m
mbeta &lt;- (m-bmin)/(bmax-bmin)
vbeta &lt;- v/(bmax-bmin)^2

if (v==0) {
   Beta &lt;- matrix(m, 1,n)
}
else if (vbeta &gt;= mbeta*(1-mbeta) ) {
    print("Variance of Beta too large given the mean")
}
else {
    a &lt;- mbeta*(mbeta*(1-mbeta)/vbeta - 1)
    b &lt;- (1-mbeta)*(mbeta*(1-mbeta)/vbeta - 1)
    Beta &lt;- matrix(NA, 1,n)
    for (i in 1:n) {
        k1 &lt;- floor(a)
        k2 &lt;- floor(b)
        if (k1==0 &amp; k2==0) {
            Y &lt;- 1
            Z &lt;- 1
            while (Y+Z &gt; 1) {
                Y &lt;- runif(1)^(1/a)
                Z &lt;- runif(1)^(1/b)
            }
        }
        else {
            Y &lt;- gammarv(a,1,1)
            Z &lt;- gammarv(b,1,1)
        }
        Beta[i] &lt;- Y/(Y+Z)
    }
    Beta &lt;- Beta*(bmax-bmin)+bmin
}

Beta

}


#sample once every colum of object surv table
SampFun&lt;- function(a){
sample(Vrtable, size=1, replace = TRUE, prob = NULL)
}


#Standarizing Function
Stdz_Fun &lt;- function(x){
out&lt;- x/mean(x) ; out
}

############Survivals Function,  Simple Regression
#Produces a data.frame containg the vital rates, run name, lag, r-squared,
#regressions coefficients based on a &gt; specified p-value  of models based on Survivals
#Uses arguments
#ChinD: Chinook data (e.g. element ChinData0.1)
#SurvT: Survival table data (e.g. element SurvTable2)
#Chindef: chinoof definitins file
#p_val: p_value set up in parameters

SurvFun&lt;- function(ChinD, SurvT, Chindef, p_val){
#For loop
storemVR&lt;- matrix(NA, nrow=length(ChinD), ncol=6)
storem1&lt;- list(storemVR,storemVR, storemVR,storemVR,storemVR,storemVR, storemVR)

for (i in 1:length(SurvT[1,])){                                            #Loop through each Surv. Vrs
    for (j in 1:length(ChinD)){                                             #Loop through Chinook Runs

         y &lt;- SurvT[,i]
         x &lt;- ChinD[,j]

     lmSimple   &lt;- lm( y~x)                                                     # calculate lm, coefs, and summary stats
     coefSimple &lt;- coef(lmSimple)

     summSimple &lt;- summary(lmSimple)
                   options(digits=5)
     rsqr &lt;- summSimple$adj.r.squared                                           #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients[8]                                   # Sign. value


#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefSimple[1],coefSimple[2],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
SurvMods&lt;- rbind(storem1[[1]],storem1[[2]], storem1[[3]],storem1[[4]], storem1[[5]],storem1[[6]], storem1[[7]])

#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(SurvT), each=length(ChinD))                     #names for vital rates
Runnamex&lt;- rep(colnames(ChinD),length(SurvT[1,]))                      #names for chinook runs
SurvModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(SurvMods),Chindef$NR_Hyp)[,-(4:5)]
,
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(SurvMods),Chindef$SR_Hyp)[,-(4:5)]
 )
SurvModsRes
colnames(SurvModsRes)&lt;-SurvModsnam

#select p-values &lt; 0.1
SurvModsResSel&lt;- subset(SurvModsRes, p_value &lt;= p_val)
}


##Function modified to estimate regressions with abundance

AbundFun&lt;- function(ChinD, SurvT, Chindef, p_val){
#For loop
storemVR&lt;- matrix(NA, nrow=length(ChinD), ncol=6)
storem1&lt;- list(storemVR,storemVR, storemVR,storemVR,storemVR,storemVR, storemVR, storemVR)

for (i in 1:length(SurvT[1,])){                                            #Loop through each Surv. Vrs


    for (j in 1:length(ChinD)){                                             #Loop through Chinook Runs

         y &lt;- SurvT[,i]
         x &lt;- ChinD[,j]

     lmSimple   &lt;- lm( y~x)                                                     # calculate lm, coefs, and summary stats
     coefSimple &lt;- coef(lmSimple)

     summSimple &lt;- summary(lmSimple)
                   options(digits=5)
     rsqr &lt;- summSimple$adj.r.squared                                           #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients[8]                                   # Sign. value



#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefSimple[1],coefSimple[2],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
SurvMods&lt;- rbind(storem1[[1]],storem1[[2]], storem1[[3]],storem1[[4]], storem1[[5]],storem1[[6]], storem1[[7]],storem1[[8]] )

#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(SurvT), each=length(ChinD))                     #names for vital rates
Runnamex&lt;- rep(colnames(ChinD),length(SurvT[1,]))                      #names for chinook runs
SurvModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(SurvMods),Chindef$NR_Hyp)[,-(4:5)]
,
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(SurvMods),Chindef$SR_Hyp)[,-(4:5)]
 )
SurvModsRes
colnames(SurvModsRes)&lt;-SurvModsnam

#select p-values &lt; 0.1
SurvModsResSel&lt;- subset(SurvModsRes, p_value &lt;= p_val)
}




############Fecundities Function, Simple Regression
#Produces a data.frame containg the vital rates, run name, lag, r-squared,
#regressions coefficients based on a &gt; specified p-value of models based on Fecundities
#Uses arguments
#ChinD: Chinook data (e.g. element ChinData0.1)
#SurvT: Survival table data (e.g. element SurvTable2)
#Chindef: chinoof definitins file
#p_val: p_value set up in parameters

FecFun&lt;- function(ChinD, OffsprT, Chindef, p_val){
#For loop
storemVR&lt;- matrix(NA, nrow=length(ChinD), ncol=6)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(OffsprT[1,])){                                            #Loop through each Surv. Vrs
    for (j in 1:length(ChinD)){                                             #Loop through Chinook Runs

         y &lt;- OffsprT[,i]
         x &lt;- ChinD[,j]

     lmSimple   &lt;- lm( y~x)                                                     # calculate lm, coefs, and summary stats
     coefSimple &lt;- coef(lmSimple)

     summSimple &lt;- summary(lmSimple)
                   options(digits=5)
     rsqr &lt;- summSimple$adj.r.squared                                               #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients[8]                                   # Sign. value


#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefSimple[1],coefSimple[2],p_value)

storem1[[i]] &lt;- storemVR
   }
   }
FecMods&lt;- rbind(storem1[[1]],storem1[[2]])

#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(OffsprT), each=length(ChinD))                     #names for vital rates
Runnamex&lt;- rep(colnames(ChinD),length(OffsprT[1,]))                      #names for chinook runs
FecModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$NR_Hyp)[,-(4:5)]
,
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$SR_Hyp)[,-(4:5)]
 )
FecModsRes
colnames(FecModsRes)&lt;-FecModsnam

#select p-values &lt; 0.1
FecModsResSel&lt;- subset(FecModsRes, p_value &lt;= p_val)

}

############Fecundities Function, Multiple Regression 2 Independent Variables
#Produces a data.frame containg the vital rates, run name, lag, r-squared,
#regressions coefficients based on a &gt; specified p-value of models based on Fecundities
#Uses arguments
#ChinD: Chinook data (e.g. element ChinData0.1)
#VRateT: FEc table data (e.g. element OffsprTable)
#Chindef: chinoof definitins file
#p_val: p_value set up in parameters

FecFunMR&lt;- function(ChinD, VRateT, Chindef, p_val){
storemVR&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=7)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(VRateT[1,])){                                                #Loop through each Surv. Vrs
    for (j in 1:max(Chindef$ChinMR2)){ #28 MR indexes                           #Loop through Chinook Runs

         y &lt;- VRateT[,i]
         x1 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[1])
         x2 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[2])
x1&lt;-as.vector(x1[,1])
x2&lt;-as.vector(x2[,1])


     lmMR   &lt;- lm( y~x1+x2)                                                     # calculate lm, coefs, and summary stats
     coefMR &lt;- coef(lmMR)

     summMR &lt;- summary(lmMR)
                   options(digits=5)
     rsqr &lt;- summMR$adj.r.squared                                                   #extract elements of interest for each month of year
     p_value    &lt;-  pf(summMR$fstatistic[1],summMR$fstatistic[2],summMR$fstatistic[3],lower.tail=FALSE)                                  # Sign. value



#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefMR[1],coefMR[2],coefMR[3],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
FecMods&lt;- rbind(storem1[[1]],storem1[[2]])


#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(VRateT), each=max(Chindef$ChinMR2))                     #names for vital rates


storeVec&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=1)
Chindef$TimeSeries
F_Chindef &lt;- factor(Chindef$ChinMR2)
haha&lt;- apply(as.data.frame(tapply(Chindef$TimeSeries, F_Chindef, list) ),2,paste)
for (i in 1:length(haha)/2){
storeVec[i,]&lt;-paste(haha[,i][1],"+",haha[,i][2])
}
storeVec&lt;-as.vector(storeVec[,1])                                               #Vector of names for multiple regressions

Runnamex&lt;- rep(storeVec,length(VRateT[1,]))                                    #names for chinook runs from MR
FecModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','slope2','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$NR_Hyp)[,-(4:5)]
,
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$SR_Hyp)[,-(4:5)]
 )
FecModsRes
colnames(FecModsRes)&lt;-FecModsnam

#select p-values &lt; 0.1
FecModsResSel&lt;- subset(FecModsRes, p_value &lt;= p_val)

}

############Survivals Function, Multiple Regression 2 Independent Variables
#Produces a data.frame containg the vital rates, run name, lag, r-squared,
#regressions coefficients based on a &gt; specified p-value of models based on Survivals
#Uses arguments
#ChinD: Chinook data (e.g. element ChinData0.1)
#VRateT: Survival table data (e.g. element SurvTable2)
#Chindef: chinoof definitins file
#p_val: p_value set up in parameters

SurFunMR&lt;- function(ChinD, VRateT, Chindef, p_val){
storemVR&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=7)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(VRateT[1,])){                                               #Loop through each Surv. Vrs
    for (j in 1:max(Chindef$ChinMR2)){ #28 MR indexes                                             #Loop through Chinook Runs

         y &lt;- VRateT[,i]
         x1 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[1])
         x2 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[2])
x1&lt;-as.vector(x1[,1])
x2&lt;-as.vector(x2[,1])


     lmMR   &lt;- lm( y~x1+x2)                                                     # calculate lm, coefs, and summary stats
     coefMR &lt;- coef(lmMR)

     summMR &lt;- summary(lmMR)
                   options(digits=5)
     rsqr &lt;- summMR$adj.r.squared                                               #extract elements of interest for each month of year
     p_value    &lt;-  pf(summMR$fstatistic[1],summMR$fstatistic[2],summMR$fstatistic[3],lower.tail=FALSE)                                  # Sign. value



#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefMR[1],coefMR[2],coefMR[3],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
storem1
SurMods&lt;- rbind(storem1[[1]],storem1[[2]],storem1[[3]],storem1[[4]],storem1[[5]],storem1[[6]],storem1[[7]])


#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(VRateT), each=max(Chindef$ChinMR2))                      # Names for vital rates

#This code creates the names for the multiple regression by using ChinMR2 as factors
storeVec&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=1)
Chindef$TimeSeries
F_Chindef &lt;- factor(Chindef$ChinMR2)
haha&lt;- apply(as.data.frame(tapply(Chindef$TimeSeries, F_Chindef, list) ),2,paste)
for (i in 1:length(haha)/2){
storeVec[i,]&lt;-paste(haha[,i][1],"+",haha[,i][2])
}
storeVec&lt;-as.vector(storeVec[,1])                                               # Vector of names for multiple regressions

Runnamex&lt;- rep(storeVec,length(VRateT[1,]))                                     # Names for chinook runs from MR
SurModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','slope2','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$NR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
,
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$SR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
 )
SurModsRes
colnames(SurModsRes)&lt;-SurModsnam

#select p-values &lt; 0.1
SurModsResSel&lt;- subset(SurModsRes, p_value &lt;= p_val)

}


############Fecundities Function, Multiple Regression 3 Independent Variables
#Produces a data.frame containg the vital rates, run name, lag, r-squared,
#regressions coefficients based on a &gt; specified p-value of models based on Fecundities
#Uses arguments
#ChinD: Chinook data (e.g. element ChinData0.1)
#VRateT: Fecundity table data (e.g. element OffspringT)
#Chindef: chinoof definitins file
#p_val: p_value set up in parameters

FecFunMR3&lt;- function(ChinD, VRateT, Chindef, p_val, pop){

storemVR&lt;- matrix(NA, nrow=max(Chindef$ChinMR3), ncol=8)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(VRateT[1,])){                                                #Loop through each Surv. Vrs
    for (j in 1:max(Chindef$ChinMR3)){                                          #Loop through Chinook Runs

         y &lt;- VRateT[,i]
         x1 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR3==j)$TimeSeries)[1])
         x2 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR3==j)$TimeSeries)[2])
         x3 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR3==j)$TimeSeries)[3])
x1&lt;-as.vector(x1[,1])
x2&lt;-as.vector(x2[,1])
x3&lt;-as.vector(x3[,1])

     lmMR   &lt;- lm( y~x1+x2+x3)                                                     # calculate lm, coefs, and summary stats
     coefMR &lt;- coef(lmMR)

     summMR &lt;- summary(lmMR)
                   options(digits=5)
     rsqr &lt;- summMR$adj.r.squared                                                   #extract elements of interest for each month of year
     p_value    &lt;-  pf(summMR$fstatistic[1],summMR$fstatistic[2],summMR$fstatistic[3],lower.tail=FALSE)                                  # Sign. value



#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefMR[1],coefMR[2],coefMR[3],coefMR[4],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
storem1
SurMods&lt;- rbind(storem1[[1]],storem1[[2]])


#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(VRateT), each=max(Chindef$ChinMR3))                     #names for vital rates


storeVec&lt;- matrix(NA, nrow=max(Chindef$ChinMR3), ncol=1)
Chindef$TimeSeries
F_Chindef &lt;- factor(Chindef$ChinMR3)
haha&lt;- apply(as.data.frame(tapply(Chindef$TimeSeries, F_Chindef, list) ),2,paste)
for (i in 1:length(haha)/3){
storeVec[i,]&lt;-paste(haha[,i][1],"+",haha[,i][2],"+",haha[,i][3])
}
storeVec&lt;-as.vector(storeVec[,1])                                               #Vector of names for multiple regressions

Runnamex&lt;- rep(storeVec,length(VRateT[1,]))                                     #names for chinook runs from MR
SurModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','slope2','slope3','p_value', ifelse(Population[1]=="NRKW", paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$NR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
,
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$SR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
 )
SurModsRes
colnames(SurModsRes)&lt;-SurModsnam

#select p-values &lt; 0.1
SurModsResSel&lt;- subset(SurModsRes, p_value &lt;= p_val)

}





#&lt;&lt;&lt;******************        Beta Regressions betareg              ************** &gt;&gt;&gt;




SurvFunB&lt;- function(ChinD, SurvT, Chindef, p_val){
#For loop

storemVR&lt;- matrix(NA, nrow=length(ChinD), ncol=6)
storem1&lt;- list(storemVR,storemVR, storemVR,storemVR,storemVR,storemVR, storemVR)

for (i in 1:length(SurvT[1,])){                                                 #Loop through each Surv. Vrs
    for (j in 1:length(ChinD)){                                                 #Loop through Chinook Runs
         y &lt;- SurvT[,i]
         x &lt;- ChinD[,j]
        y= ifelse(y==1,0.9999,y)
        y= ifelse(y==0,0.0001,y)
     lmSimple   &lt;- betareg( y~x, na.action=na.omit)                             # calculate lm, coefs, and summary stats
     #bptest(lmSimple)
     coefSimple &lt;- coef(lmSimple) #}}
     summSimple &lt;- summary(lmSimple)
                   options(digits=5)
     summSimple$residuals
     rsqr &lt;- summSimple$pseudo.r.squared                                        #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients$mean[8]                               # Sign. value # summSimple$coefficients$precision[4]


#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefSimple[1],coefSimple[2],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
storem1
SurvMods&lt;- rbind(storem1[[1]],storem1[[2]], storem1[[3]],storem1[[4]], storem1[[5]],storem1[[6]], storem1[[7]])

#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(SurvT), each=length(ChinD))                     #names for vital rates
Runnamex&lt;- rep(colnames(ChinD),length(SurvT[1,]))                      #names for chinook runs
SurvModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(SurvMods),Chindef$NR_Hyp)[,-(4:5)]
,
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(SurvMods),Chindef$SR_Hyp)[,-(4:5)]
 )
SurvModsRes
colnames(SurvModsRes)&lt;-SurvModsnam

#select p-values &lt; 0.1
SurvModsResSel&lt;- subset(SurvModsRes, p_value &lt;= p_val)

}



###################  Beta FecFun
FecFunB&lt;- function(ChinD, OffsprT, Chindef, p_val){
#For loop
storemVR&lt;- matrix(NA, nrow=length(ChinD), ncol=6)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(OffsprT[1,])){                                            #Loop through each Surv. Vrs
    for (j in 1:length(ChinD)){                                             #Loop through Chinook Runs

         y &lt;- OffsprT[,i]
         x &lt;- ChinD[,j]
         y= ifelse(y==1,0.9999,y)
         y= ifelse(y==0,0.0001,y)
     lmSimple   &lt;- betareg( y~x, na.action=na.omit)                                                     # calculate lm, coefs, and summary stats
     coefSimple &lt;- coef(lmSimple)

     summSimple &lt;- summary(lmSimple)
                   options(digits=5)
     rsqr &lt;- summSimple$pseudo.r.squared                                        #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients$mean[8]                              # Sign. value &lt;&lt;&lt;Phi p-value&gt;&gt;&gt;


#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefSimple[1],coefSimple[2],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
storem1
FecMods&lt;- rbind(storem1[[1]],storem1[[2]])

#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(OffsprT), each=length(ChinD))                     #names for vital rates
Runnamex&lt;- rep(colnames(ChinD),length(OffsprT[1,]))                      #names for chinook runs
FecModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$NR_Hyp)[,-(4:5)]
,
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$SR_Hyp)[,-(4:5)]
 )
FecModsRes
colnames(FecModsRes)&lt;-FecModsnam

#select p-values &lt; 0.1
FecModsResSel&lt;- subset(FecModsRes, p_value &lt;= p_val)
}



############ Beta Fecundities Function, Multiple Regression 2 Independent Variables
FecFunMRB&lt;- function(ChinD, VRateT, Chindef, p_val){
storemVR&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=7)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(VRateT[1,])){                                                #Loop through each Surv. Vrs
    for (j in 1:max(Chindef$ChinMR2)){ #28 MR indexes                           #Loop through Chinook Runs

         y &lt;- VRateT[,i]
         x1 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[1])
         x2 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[2])
x1&lt;-as.vector(x1[,1])
x2&lt;-as.vector(x2[,1])
        y= ifelse(y==1,0.9999,y)
        y= ifelse(y==0,0.0001,y)


     lmMR   &lt;- betareg( y~x1+x2, na.action=na.omit)                                                     # calculate lm, coefs, and summary stats
     coefMR &lt;- coef(lmMR)

     summMR &lt;- summary(lmMR)
                   options(digits=5)
     rsqr &lt;- summMR$pseudo.r.squared                                            # extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients$precision[4]                         # Sign. value &lt;&lt;&lt;Phi p-value&gt;&gt;&gt;



#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefMR[1],coefMR[2],coefMR[3],p_value)
storem1[[i]] &lt;- storemVR
   }
   }
storem1
FecMods&lt;- rbind(storem1[[1]],storem1[[2]])


#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(VRateT), each=max(Chindef$ChinMR2))                     #names for vital rates


storeVec&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=1)
Chindef$TimeSeries
F_Chindef &lt;- factor(Chindef$ChinMR2)
haha&lt;- apply(as.data.frame(tapply(Chindef$TimeSeries, F_Chindef, list) ),2,paste)
for (i in 1:length(haha)/2){
storeVec[i,]&lt;-paste(haha[,i][1],"+",haha[,i][2])
}
storeVec&lt;-as.vector(storeVec[,1])                                               #Vector of names for multiple regressions

Runnamex&lt;- rep(storeVec,length(VRateT[1,]))                                    #names for chinook runs from MR
FecModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','slope2','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$NR_Hyp)[,-(4:5)]
,
 FecModsRes&lt;-cbind(VRnamex, Runnamex, Chindef$lag, as.data.frame(FecMods),Chindef$SR_Hyp)[,-(4:5)]
 )
FecModsRes
colnames(FecModsRes)&lt;-FecModsnam

#select p-values &lt; 0.1
FecModsResSel&lt;- subset(FecModsRes, p_value &lt;= p_val)

}




############ Beta Survivals Function, Multiple Regression 2 Independent Variables
SurFunMRB&lt;- function(ChinD, VRateT, Chindef, p_val){
storemVR&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=7)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(VRateT[1,])){                                               #Loop through each Surv. Vrs
    for (j in 1:max(Chindef$ChinMR2)){ #28 MR indexes                                             #Loop through Chinook Runs

         y &lt;- VRateT[,i]
         x1 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[1])
         x2 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR2==j)$TimeSeries)[2])
x1&lt;-as.vector(x1[,1])
x2&lt;-as.vector(x2[,1])
      y= ifelse(y==1,0.9999,y)
      y= ifelse(y==0,0.0001,y)

     lmMR   &lt;- betareg( y~x1+x2, na.action=na.omit)                                                     # calculate lm, coefs, and summary stats
     coefMR &lt;- coef(lmMR)

     summMR &lt;- summary(lmMR)
                   options(digits=5)
     rsqr &lt;- summMR$pseudo.r.squared                                                   #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients$precision[4]                         # Sign. value &lt;&lt;&lt;Phi p-value&gt;&gt;&gt;



#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefMR[1],coefMR[2],coefMR[3],p_value)
storem1[[i]] &lt;- storemVR
   }
   }

SurMods&lt;- rbind(storem1[[1]],storem1[[2]],storem1[[3]],storem1[[4]],storem1[[5]],storem1[[6]],storem1[[7]])


#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(VRateT), each=max(Chindef$ChinMR2))                      # Names for vital rates

#This code creates the names for the multiple regression by using ChinMR2 as factors
storeVec&lt;- matrix(NA, nrow=max(Chindef$ChinMR2), ncol=1)
Chindef$TimeSeries
F_Chindef &lt;- factor(Chindef$ChinMR2)
haha&lt;- apply(as.data.frame(tapply(Chindef$TimeSeries, F_Chindef, list) ),2,paste)
for (i in 1:length(haha)/2){
storeVec[i,]&lt;-paste(haha[,i][1],"+",haha[,i][2])
}
storeVec&lt;-as.vector(storeVec[,1])                                               # Vector of names for multiple regressions

Runnamex&lt;- rep(storeVec,length(VRateT[1,]))                                     # Names for chinook runs from MR
SurModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','slope2','p_value', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$NR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
,
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$SR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
 )
SurModsRes
colnames(SurModsRes)&lt;-SurModsnam

#select p-values &lt; 0.1
SurModsResSel&lt;- subset(SurModsRes, p_value &lt;= p_val)
}


############ Beta Fecundities Function, Multiple Regression 3 Independent Variables
FecFunMR3B&lt;- function(ChinD, VRateT, Chindef, p_val, pop){

storemVR&lt;- matrix(NA, nrow=max(Chindef$ChinMR3), ncol=8)
storem1&lt;- list(storemVR,storemVR)

for (i in 1:length(VRateT[1,])){                                                #Loop through each Surv. Vrs
    for (j in 1:max(Chindef$ChinMR3)){                                          #Loop through Chinook Runs

         y &lt;- VRateT[,i]
         x1 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR3==j)$TimeSeries)[1])
         x2 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR3==j)$TimeSeries)[2])
         x3 &lt;- subset(ChinD,select=as.vector(subset(Chindef, ChinMR3==j)$TimeSeries)[3])
x1&lt;-as.vector(x1[,1])
x2&lt;-as.vector(x2[,1])
x3&lt;-as.vector(x3[,1])
        y= ifelse(y==1,0.9999,y)
        y= ifelse(y==0,0.0001,y)


     lmMR   &lt;- betareg( y~x1+x2+x3, na.action=na.omit)                                                     # calculate lm, coefs, and summary stats
     coefMR &lt;- coef(lmMR)

     summMR &lt;- summary(lmMR)
                   options(digits=5)
     rsqr &lt;- summMR$pseudo.r.squared                                                   #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients$precision[4]                         # Sign. value &lt;&lt;&lt;Phi p-value&gt;&gt;&gt;


#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefMR[1],coefMR[2],coefMR[3],coefMR[4],p_value)
storem1[[i]] &lt;- storemVR
   }
   }

SurMods&lt;- rbind(storem1[[1]],storem1[[2]])


#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(VRateT), each=max(Chindef$ChinMR3))                     #names for vital rates


storeVec&lt;- matrix(NA, nrow=max(Chindef$ChinMR3), ncol=1)
Chindef$TimeSeries
F_Chindef &lt;- factor(Chindef$ChinMR3)
haha&lt;- apply(as.data.frame(tapply(Chindef$TimeSeries, F_Chindef, list) ),2,paste)
for (i in 1:length(haha)/3){
storeVec[i,]&lt;-paste(haha[,i][1],"+",haha[,i][2],"+",haha[,i][3])
}
storeVec&lt;-as.vector(storeVec[,1])                                               #Vector of names for multiple regressions

Runnamex&lt;- rep(storeVec,length(VRateT[1,]))                                     #names for chinook runs from MR
SurModsnam&lt;- c('VitalRate','Chinook_Run','Lag','R_squared','intercept','slope1','slope2','slope3','p_value', ifelse(Population[1]=="NRKW", paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$NR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
,
 SurModsRes&lt;-cbind(VRnamex, Runnamex, rep(Chindef$lag[Chindef$lag==0],length(VRateT[1,])), as.data.frame(SurMods),rep(Chindef$SR_Hyp[Chindef$lag==0],length(VRateT[1,])))[,-(4:5)]
 )
SurModsRes
colnames(SurModsRes)&lt;-SurModsnam

#select p-values &lt; 0.1
SurModsResSel&lt;- subset(SurModsRes, p_value &lt;= p_val)

}


###################Mean Matrices for direct perturbation:
#This section contains a several matrices as a fucntion of the a new vital rate
#estimated from perturbations of chinook abundances. There is one function for each
#vital rate.


KW.matNames&lt;- c('KW.matSs1','KW.matSs2','KW.matSs3','KW.matSs4','KW.matSs5','KW.matSs6','KW.matSs7','KW.matSf3','KW.matSf4')
#
#
FunTSs1&lt;- function(Ss1_){    #    (Ss1_1+Ss1_2)
KW.matSs1_&lt;- matrix(c(
        0, (Ss1_^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1_^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1_^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1_^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }



FunTSs2&lt;- function(Ss2_){
KW.matSs2&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2_*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2_*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2_*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2_*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }

FunTSs3&lt;- function(Ss3_){ # Ss3_1 , Ss3_2
KW.matSs3&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3_*(1-Sg3)))*Sf3)+(Ss3_*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3_*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3_*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )


        }

FunTSs4&lt;- function(Ss4_){
KW.matSs4_&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4_*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4_*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4_*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }

FunTSs5&lt;- function(Ss5_){
KW.matSs5&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5_, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }

FunTSs6&lt;- function(Ss6_){
KW.matSs6_&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6_*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6_*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }

FunTSs7&lt;- function(Ss7_){
KW.matSs7&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7_),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }

FunTSf3&lt;- function(Sf3_){
KW.matSf3&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3_))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3_)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }

FunTSf4&lt;- function(Sf4_){
KW.matSf4&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4_)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4_))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )
        }




###################Mean Matrices for elasticity of interactions using method 1 (R-squared):
#This section contains a several matrices as a fucntion of the the vital rate partitioned in two.
#The first having to do with the 'other' elasticity and the second with the elasticity of chinook interaction

FunSs1&lt;- function(VR_o,VR_ch){
#Ss1_1=VR_o, Ss1_2=VR_ch
KW.vr_Ss1&lt;- list(Ss1=Ss1,Ss1_1=VR_o, Ss1_2=VR_ch,Ss3=Ss3 ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss1&lt;- expression(
        0, (Ss1^0.5*((Ss1_1+Ss1_2)*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, (Ss1_1+Ss1_2)*(1-Sg2), 0, 0, 0, 0, 0,
        0, (Ss1_1+Ss1_2)*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, (Ss1_1+Ss1_2)*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Ss1  &lt;- vitalsens(KW.EC_Ss1, KW.vr_Ss1)
ElasVR_2 &lt;- as.numeric(KW2_Ss1["Ss1_2",][3])
        }


FunSs2&lt;- function(VR_o,VR_ch){
#Ss2_1=VR_o, Ss2_2=VR_ch
KW.vr_Ss2&lt;- list(Ss1=Ss1,Ss2_1=VR_o, Ss2_2=VR_ch,Ss3=Ss3 ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss2&lt;- expression(
        0, (Ss1^0.5*((Ss2_1+Ss2_2)*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, (Ss2_1+Ss2_2)*(1-Sg2), 0, 0, 0, 0, 0,
        0, (Ss2_1+Ss2_2)*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, (Ss2_1+Ss2_2)*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Ss2  &lt;- vitalsens(KW.EC_Ss2, KW.vr_Ss2)
ElasVR_2 &lt;- as.numeric(KW2_Ss2["Ss2_2",][3])
        }


FunSs3&lt;- function(VR_o,VR_ch){
#Ss3_1=VR_o, Ss3_2=VR_ch
KW.vr_Ss3&lt;- list(Ss1=Ss1, Ss2=Ss2 ,Ss3_1=VR_o, Ss3_2=VR_ch ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss3&lt;- expression( #(Ss3_1+Ss3_2)
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+((Ss3_1+Ss3_2)*(1-Sg3)))*Sf3)+((Ss3_1+Ss3_2)*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, (Ss3_1+Ss3_2)*(1-Sg3), 0, 0, 0, 0,
        0, 0, (Ss3_1+Ss3_2)*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Ss3  &lt;- vitalsens(KW.EC_Ss3, KW.vr_Ss3)
ElasVR_3 &lt;- as.numeric(KW2_Ss3["Ss3_2",][3])
        }


FunSs4&lt;- function(VR_o,VR_ch){
#Ss4_1=VR_o, Ss4_2=VR_ch
KW.vr_Ss4&lt;- list(Ss1=Ss1, Ss2=Ss2  ,Ss3=Ss3 ,Ss4_1=VR_o, Ss4_2=VR_ch ,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss4&lt;- expression( #Ss2_1+Ss2_2(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+((Ss4_1+Ss4_2)*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, (Ss4_1+Ss4_2)*(1-Sg4), 0, 0, 0,
        0, 0, 0, (Ss4_1+Ss4_2)*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Ss4  &lt;- vitalsens(KW.EC_Ss4, KW.vr_Ss4)
ElasVR_2 &lt;- as.numeric(KW2_Ss4["Ss4_2",][3])
        }

FunSs5&lt;- function(VR_o,VR_ch){
#Ss5_1=VR_o, Ss5_2=VR_ch
KW.vr_Ss5&lt;- list(Ss1=Ss1,Ss2=Ss2, Ss3=Ss3 ,Ss4=Ss4 ,Ss5_1=VR_o, Ss5_2=VR_ch   ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss5&lt;- expression( #Ss2_1+Ss2_2(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, (Ss5_1+Ss5_2), 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Ss5  &lt;- vitalsens(KW.EC_Ss5, KW.vr_Ss5)
ElasVR_2 &lt;- as.numeric(KW2_Ss5["Ss5_2",][3])
        }


FunSs6&lt;- function(VR_o,VR_ch){
#Ss6_1=VR_o, Ss6_2=VR_ch
KW.vr_Ss6&lt;- list(Ss1=Ss1,Ss2=Ss2,Ss3=Ss3 ,Ss4=Ss4 ,Ss5=Ss5 , Ss6_1=VR_o, Ss6_2=VR_ch, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss6&lt;- expression( #Ss2_1+Ss2_2(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, (Ss6_1+Ss6_2)*(1-Sg6), 0,
        0, 0, 0, 0, 0, (Ss6_1+Ss6_2)*Sg6, Ss7
        )
KW2_Ss6  &lt;- vitalsens(KW.EC_Ss6, KW.vr_Ss6)
ElasVR_2 &lt;- as.numeric(KW2_Ss6["Ss6_2",][3])
        }


FunSs7&lt;- function(VR_o,VR_ch){
#Ss7_1=VR_o, Ss7_2=VR_ch
KW.vr_Ss7&lt;- list(Ss1=Ss1,Ss2=Ss2   ,Ss3=Ss3 ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6,Ss7_1=VR_o, Ss7_2=VR_ch  ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss7&lt;- expression( #Ss2_1+Ss2_2(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, (Ss7_1+Ss7_2)
        )
KW2_Ss7  &lt;- vitalsens(KW.EC_Ss7, KW.vr_Ss7)
ElasVR_2 &lt;- as.numeric(KW2_Ss7["Ss7_2",][3])
        }

FunSf3&lt;- function(VR_o,VR_ch){
#Sf3_1=VR_o, Sf3_2=VR_ch
KW.vr_Sf3&lt;- list(Ss1=Ss1,Ss2=Ss2   ,Ss3=Ss3 ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 , Sf3_1=VR_o, Sf3_2=VR_ch ,Sf4=Sf4)
KW.EC_Sf3&lt;- expression( #Ss2_1+Ss2_2(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*(Sf3_1+Sf3_2)))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*(Sf3_1+Sf3_2))+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Sf3  &lt;- vitalsens(KW.EC_Sf3, KW.vr_Sf3)
ElasVR_2 &lt;- as.numeric(KW2_Sf3["Sf3_2",][3])
        }

FunSf4&lt;- function(VR_o,VR_ch){
#Sf4_1=VR_o, Sf4_2=VR_ch
KW.vr_Sf4&lt;- list(Ss1=Ss1,Ss2=Ss2 ,Ss3=Ss3 ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 , Sf4_1=VR_o, Sf4_2=VR_ch )
KW.EC_Sf4&lt;- expression( #Ss2_1+Ss2_2(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*(Sf4_1+Sf4_2))))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*(Sf4_1+Sf4_2)))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Sf4  &lt;- vitalsens(KW.EC_Sf4, KW.vr_Sf4)
ElasVR_2 &lt;- as.numeric(KW2_Sf4["Sf4_2",][3])
        }

#************ Testing Chinook Runs affecting Several VRs***********&gt;&gt;&gt;


FunSs3_Ss4&lt;- function(VR_o1,VR_ch1,VR_o2,VR_ch2){

KW.vr_Ss3_Ss4&lt;- list(Ss1=Ss1, Ss2=Ss2 ,Ss3_1=VR_o1, Ss3_2=VR_ch1 ,Ss4_1=VR_o2, Ss4_2=VR_ch2,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
KW.EC_Ss3_Ss4&lt;- expression(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+((Ss3_1+Ss3_2)*(1-Sg3)))*Sf3)+((Ss3_1+Ss3_2)*Sg3*Sf4)))/2,  (Ss1^0.5*((1+((Ss4_1+Ss4_2)*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, (Ss3_1+Ss3_2)*(1-Sg3), 0, 0, 0, 0,
        0, 0, (Ss3_1+Ss3_2)*Sg3, (Ss4_1+Ss4_2)*(1-Sg4), 0, 0, 0,
        0, 0, 0, (Ss4_1+Ss4_2)*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )
KW2_Ss3_Ss4  &lt;- vitalsens(KW.EC_Ss3_Ss4,KW.vr_Ss3_Ss4)
ElasVR_3_4&lt;- c( as.numeric(KW2_Ss3_Ss4["Ss3_2",][3]),as.numeric(KW2_Ss3_Ss4["Ss4_2",][3]))
        }




############Function modified from PopBio to estimate lambda only.
lambdaPop&lt;- function (A, zero = TRUE){
    ev &lt;- eigen(A)
    lmax &lt;- which.max(Re(ev$values))
    lambda &lt;- Re(ev$values[lmax])
    dr &lt;- rle(round(Mod(ev$values), 5))$values
    dr &lt;- dr[1]/dr[2]
    W &lt;- ev$vectors
    w &lt;- abs(Re(W[, lmax]))
    V &lt;- try(Conj(solve(W)), silent = TRUE)
    if (class(V) == "try-error") {
        eigen.analysis &lt;- list(lambda1 = lambda, stable.stage = w/sum(w),
            sensitivities = A * NA, elasticities = A * NA, repro.value = w *
                NA, damping.ratio = dr)
    }
    else {
        v &lt;- abs(Re(V[lmax, ]))
        s &lt;- v %o% w
        if (zero) {
            s[A == 0] &lt;- 0
        }
        e &lt;- s * A/lambda
        x &lt;- dimnames(A)
        dimnames(s) &lt;- x
        names(w) &lt;- x[[1]]
        names(v) &lt;- x[[1]]
        lambdaPop &lt;- list(lambda1 = lambda)
    }
    lambdaPop
}


######## This function creates a set of truncated matrixes based on two arguments:
#1) DataTrunc: It's basically the survival and offspring data by year from all stages of the truncated model
#2) Set: an interval if the years that will be the limits of the subset for which we are creating the matrix e.g. 1987-1990
#The set argument is determined in the beginning  of the section. The DataTrunc argumant is determined automatically.


FunTrunc&lt;- function(DataTrunc,Set){
#Creating vectors of  Vital rates
SurvDeltaTR&lt;- as.numeric(colMeans(DataTrunc[,1:5], na.rm = TRUE, dims = 1))    #Means of yearly survivals
MaxAgeTR&lt;-c(CalfAges[2],JuvsAges[2], YRFemAges[2],ORFemAges[2], NA)             #Max age of any individual in any year (when counts are &gt;0)
SurvGammaTR&lt;-c(1, 1/(MaxAge[2]-MaxAge[1]), 1/(MaxAge[3]-MaxAge[2]),  1/(MaxAge[4]-MaxAge[3]), NA)
MuOffspTR&lt;- c(0,0,mean(DataTrunc[,6]),mean(DataTrunc[,7]) ,0)

#Vital Rates Matrix
VitalR_TR&lt;- rbind(SurvDeltaTR,MaxAgeTR,SurvGammaTR,MuOffspTR)

Mean.Ratio.Fem

#*****Defining Vital rates of Truncated Model
Ss1tr = SurvDeltaTR[1]
Ss2tr = SurvDeltaTR[2]
Ss3tr = SurvDeltaTR[3]
Ss4tr = SurvDeltaTR[4]
Ss5tr = SurvDeltaTR[5]
Sg2tr = SurvGammaTR[2]
Sg3tr = SurvGammaTR[3]
Sg4tr = SurvGammaTR[4]
Sp2tr = Mean.Ratio.Fem
Sf3tr = MuOffspTR [3]
Sf4tr = MuOffspTR [4]
MeanVRtr=c(Ss1tr,Ss2tr,Ss3tr,Ss4tr,Ss5tr,Sg2tr,Sg3tr,Sg4tr,Sp2tr,Sf3tr,Sf4tr)

KW.TR.ep&lt;- expression(
        0, (Ss1tr^0.5*(Ss2tr*Sg2tr*Sp2tr*Sf3tr))/2, (Ss1tr^0.5*(((1+(Ss3tr*(1-Sg3tr)))*Sp2tr*Sf3tr)+(Ss3tr*Sg3tr*Sp2tr*Sf4tr)))/2,  (Ss1tr^0.5*((1+(Ss4tr*(1-Sg4tr)))*Sp2tr*Sf4tr))/2,
       	Ss1tr^0.5, Ss2tr*(1-Sg2tr), 0, 0,
        0, Ss2tr*Sg2tr, Ss3tr*(1-Sg3tr), 0,
        0, 0, Ss3tr*Sg3tr, Ss4tr*(1-Sg4tr)
        )
#MeanMat expressed in technical notation
KW.mat.TR&lt;- matrix(c(
            0, (Ss1tr^0.5*(Ss2tr*Sg2tr*Sp2tr*Sf3tr))/2, (Ss1tr^0.5*(((1+(Ss3tr*(1-Sg3tr)))*Sp2tr*Sf3tr)+(Ss3tr*Sg3tr*Sp2tr*Sf4tr)))/2,  (Ss1tr^0.5*((1+(Ss4tr*(1-Sg4tr)))*Sp2tr*Sf4tr))/2,
       	Ss1tr^0.5, Ss2tr*(1-Sg2tr), 0, 0,
        0, Ss2tr*Sg2tr, Ss3tr*(1-Sg3tr), 0,
        0, 0, Ss3tr*Sg3tr, Ss4tr*(1-Sg4tr)),
        nrow = 4, ncol = 4, byrow = TRUE
        )

cat(paste('Mean Matrix Period',Set[1],'-',Set[2],Population[1]),"\n");print(KW.mat.TR)
}



######## This function creates a set of matrixes based on two arguments:
#1) Data: It's basically the survival and offspring data by year from all stages of the model
#2) Set: an interval if the years that will be the limits of the subset for which we are creating the matrix e.g. 1987-1990
#The set argument is determined in the beginning  of the section. The DataTrunc argumant is determined automatically.

FunMat&lt;- function(VRData,Set){
#Creating vectors of  Vital rates


#Creating vectors of  Vital rates
SurvSigmaF&lt;- as.numeric(colMeans(VRData, na.rm = TRUE, dims = 1))#[-1]         #Means of yearly survivals

MaxAge&lt;-c(CalfAges[2],JuvsAges[2], YRFemAges[2],ORFemAges[2], max(PRFem[PRFem$Count&gt;0,]$Age),YMMalAges[2],max(OMMal[OMMal$Count&gt;0,]$Age)) #For ref: max(PRFem[PRFem$Count&gt;0,]$Age) # Max age of any individual in any year (when counts are &gt;0)

SurvGamma&lt;-c(1, 1/(MaxAge[2]-MaxAge[1]), 1/(MaxAge[3]-MaxAge[2]),  1/(MaxAge[4]-MaxAge[3]),  1/(MaxAge[5]-MaxAge[4]), 1/(MaxAge[6]-MaxAge[2]),1/(MaxAge[7]-MaxAge[6]) )

#EstimatingPhi : for ages 10 only  (from % Juveniles to sex)
Temp1.Mal&lt;-Temp1[Temp1$Cat1=='Male',]                                           #Temp1 df where agews 10 are.
Temp1.Fem&lt;-Temp1[Temp1$Cat1=='Female',]
Perc.Mal&lt;-Temp1.Mal[3]/(Temp1.Mal[3]+Temp1.Fem[3])                              #proportion of males compared to females
Perc.Fem&lt;-Temp1.Fem[3]/(Temp1.Mal[3]+Temp1.Fem[3])                              #proportion of females compared to females. It could also be abs(1-Perc.Mal)

Mean.Perc.Mal&lt;- colMeans(Perc.Mal,na.rm = TRUE);Var.Perc.Mal&lt;- var(Perc.Mal,na.rm = TRUE) #Mean and variance of Males age 10
Mean.Perc.Fem&lt;- colMeans(Perc.Fem,na.rm = TRUE);Var.Perc.Fem&lt;- var(Perc.Fem,na.rm = TRUE) #Mean and variance of Females age10

Mean.Ratio.Mal&lt;- sum(Temp1.Mal[3])/sum(Temp1.Mal[3]+Temp1.Fem[3])               #Ratio males to malesage10
Mean.Ratio.Fem&lt;- sum(Temp1.Fem[3])/sum(Temp1.Mal[3]+Temp1.Fem[3])               #Ratio females to malesage10

PercentPhi&lt;- c(NaN,NaN,as.numeric(Mean.Ratio.Fem[1]),NaN,NaN, as.numeric(Mean.Ratio.Mal[1]), NaN)
MuOffspF&lt;- c(0,0,mean(na.omit(VRData[,8])),mean(na.omit(VRData[,9])),0,0,0)

#Vital Rates Matrix
#VitalR&lt;- rbind(SurvSigmaF,MaxAge,SurvGamma,PercentPhi,MuOffspF)


#*****Defining Vital rates

FSs1 = SurvSigmaF[1]
FSs2 = SurvSigmaF[2]
FSs3 = SurvSigmaF[3]
FSs4 = SurvSigmaF[4]
FSs5 = SurvSigmaF[5]
FSs6 = SurvSigmaF[6]
FSs7 = SurvSigmaF[7]
Sg2 = SurvGamma [2]
Sg3 = SurvGamma [3]
Sg4 = SurvGamma [4]
Sg6 = SurvGamma [6]
Sp2 = Mean.Ratio.Fem  #PercentPhi[3]
Sp3 = PercentPhi[6]
FSf3 = MuOffspF [3]
FSf4 = MuOffspF [4]
FMeanVR=c(FSs1,FSs2,FSs3,FSs4,FSs5,FSs6,FSs7,Sg2,Sg3,Sg4,Sg6,Sp2,Sp3,FSf3,FSf4)


#Alternatively, MeanMat expreFSsed in technical notation
KW.matF&lt;- matrix(c(
        0, (FSs1^0.5*(FSs2*Sg2*Sp2*FSf3))/2, (FSs1^0.5*(((1+(FSs3*(1-Sg3)))*FSf3)+(FSs3*Sg3*FSf4)))/2,  (FSs1^0.5*((1+(FSs4*(1-Sg4)))*FSf4))/2, 0, 0, 0,
       	FSs1^0.5, FSs2*(1-Sg2), 0, 0, 0, 0, 0,
        0, FSs2*Sg2*Sp2, FSs3*(1-Sg3), 0, 0, 0, 0,
        0, 0, FSs3*Sg3, FSs4*(1-Sg4), 0, 0, 0,
        0, 0, 0, FSs4*Sg4, FSs5, 0, 0,
        0, FSs2*Sg2*Sp3, 0, 0, 0, FSs6*(1-Sg6), 0,
        0, 0, 0, 0, 0, FSs6*Sg6, FSs7),
        nrow = 7, ncol = 7, byrow = TRUE
        )

cat(paste('Mean Matrix',Set[1],'-',Set[2],Population[1]),"\n");print(KW.matF)
}



#############   Functions to estimate vital rates from either a Beta or Linear regression coefficients

#Logit
LogitApl&lt;- function(intercept, slope, x){
VR_Y &lt;-  1/(1+exp(-intercept-(slope*x)))
VR_Y
}

#Linear
LinearApl&lt;- function(intercept, slope, x){
VR_Y &lt;- intercept+ (slope*x)
VR_Y
}



############ Function to estimate dependent variable based on the beatreg coeficients
beta_backtr&lt;- function(intercept,slope,data){
      1 /(1+exp(-intercept-(slope*data)))
      }


##########Function to plot CI elasticities
funElastCI&lt;- function(VR, table, filename){
# Taverna does not like optional file outputs, so ensure file exists
file.create(filename)
Elast_VRa  &lt;-  subset(table, VitalRate==VR); options(warn=-1)
graphics.off()

if(length(Elast_VRa[,1])&lt;1){
addNoVR&lt;- paste('No significant regressions with',VR)
print(addNoVR)
}

if(Population=="SRKW"){
colbars&lt;-   ifelse(Elast_VRa$SR_Hyp=='1a','blue','gray')}
if(Population=="NRKW"){
colbars&lt;-   ifelse(Elast_VRa$NR_Hyp=='1b','green','gray')}


if(length(Elast_VRa[,1])&gt;1){
# pdf(paste('Elasticity with upper CI',Population[1],VR,'.pdf'),width=8,height=8)
pdf(filename, width=8, height=8)
par(mai=c(1.7,0.8,0.8,0.4))
dum&lt;- barplot(Elast_VRa$Elast.Inter, col=colbars,
names.arg=Elast_VRa$Chinook_Run, las=3, main=unique(Elast_VRa$VitalRate), ylim=c(0,max(Elast_VRa$Elast.Inter95)+0.005))
points(x=dum, y=Elast_VRa$Elast.Inter95, pch=16)
lines(x=dum,y=Elast_VRa$Elast.Inter95,type='h',lty=2,col=colbars)
dev.off()
}}


########## Beta Function for Chum, all KW VRs

AllFunB&lt;- function(chumD, AllvrT, ChumDef, p_val){
#For loop

storemVR&lt;- matrix(NA, nrow=length(chumD), ncol=7)
storem1&lt;- list(storemVR,storemVR, storemVR,storemVR,storemVR,storemVR, storemVR,storemVR, storemVR)


for (i in 1:length(AllvrT[1,])){                                                 #Loop through each Surv. Vrs
    for (j in 1:length(chumD)){                                                 #Loop through Chinook Runs
         y &lt;- AllvrT[,i]
         x &lt;- chumD[,j]
        y= ifelse(y==1,0.9999,y)
        y= ifelse(y==0,0.0001,y)
     BSimple   &lt;- betareg( y~x, na.action=na.omit)                             # calculate lm, coefs, and summary stats
     #bptest(BSimple)
     coefSimple &lt;- coef(BSimple) #}}
     summSimple &lt;- summary(BSimple)
                   options(digits=5)
     summSimple$residuals
     rsqr &lt;- summSimple$pseudo.r.squared                                        #extract elements of interest for each month of year
     p_value    &lt;- summSimple$coefficients$mean[8]                               # Sign. value # summSimple$coefficients$precision[4]

     AIC_B&lt;-  AIC(BSimple)

AIC_storem[i,]&lt;- c(AIC_B,AIC_L)
#store elements of interest in matrix
storemVR[j,] &lt;- c(i,j,rsqr,coefSimple[1],coefSimple[2],p_value, AIC_B)
storem1[[i]] &lt;- storemVR
   }
   }
storem1
SurvMods&lt;- rbind(storem1[[1]],storem1[[2]], storem1[[3]],storem1[[4]], storem1[[5]],storem1[[6]], storem1[[7]],storem1[[8]], storem1[[9]])

#Preparing elemenst that match results
VRnamex&lt;- rep(colnames(AllvrT), each=length(chumD))                     #names for vital rates
Runnamex&lt;- rep(colnames(chumD),length(AllvrT[1,]))                      #names for chinook runs
SurvModsnam&lt;- c('VitalRate','Chum_Run','Lag','R_squared','intercept','slope1','p_value', 'AIC', ifelse(Population[1]=='NRKW', paste('NR_Hyp'), paste('SR_Hyp')))           #names for elemenst in results

#Prelim. Results
ifelse(Population[1]=='NRKW',
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, ChumDef$lag, as.data.frame(SurvMods),ChumDef$NR_Hyp)[,-(4:5)]
,
 SurvModsRes&lt;-cbind(VRnamex, Runnamex, ChumDef$lag, as.data.frame(SurvMods),ChumDef$SR_Hyp)[,-(4:5)]
 )
SurvModsRes
colnames(SurvModsRes)&lt;-SurvModsnam

#select p-values &lt; 0.1
SurvModsResSel&lt;- subset(SurvModsRes, p_value &lt;= p_val)
 }


funElastMR&lt;- function(inputTable){

percIncr &lt;- 0.1
Variant&lt;- 2


#Create a Table for each regresion model type containg the Value of the VR
VRnames_SF&lt;- c(colnames(SurvTable2),colnames(OffsprTable2))
MeanVR_SF&lt;-c(Ss1,Ss2,Ss3,Ss4,Ss5,Ss6,Ss7,Sf3,Sf4)
MeanVR_SFnam&lt;-c('Ss1_','Ss2_','Ss3_','Ss4_','Ss5_','Ss6_','Ss7_','Sf3_','Sf4_')
symsNVR&lt;- c("Ss1","Ss2","Ss3","Ss4","Ss5","Ss6","Ss7","Sf3","Sf4")
Table_SF&lt;- data.frame(VRnames_SF, MeanVR_SF, MeanVR_SFnam, symsNVR)

RegMod&lt;- inputTable   #Simple regressions selected. Alternatively

RegMod$MatName  &lt;- Table_SF$MeanVR_SFnam[match(RegMod$VitalRate,Table_SF$VRnames_SF)]


RegMod$VR_Name &lt;- Table_SF$symsNVR[match(RegMod$VitalRate ,Table_SF$VRnames_SF)]
TableStc.elas &lt;- as.data.frame(t(ElasStats.KW))

colnames(TableStc.elas)&lt;- c('ElasMean.KW','ElasMed.KW','ElasMin.KW','ElasMax.KW','CI_5','CI_95')
TableStc.elas$Sx &lt;- rownames(TableStc.elas)

RegMod$E.VR_Stc &lt;- TableStc.elas$ElasMed.KW[match(RegMod$VR_Name,TableStc.elas$Sx)]
RegMod$E.VR_95  &lt;- TableStc.elas$CI_95[match(RegMod$VR_Name,TableStc.elas$Sx)]    #For the 95%


PerturbNames  &lt;- data.frame(KW.matNames, MeanVR_SFnam)
RegMod$PerturbMat &lt;- PerturbNames$KW.matNames[match(RegMod$MatName,PerturbNames$MeanVR_SFnam)]


X_A&lt;-colMeans(na.omit(ChinData))[-1]
RegMod$X_A &lt;- X_A[match(RegMod$Chinook_Run,names(X_A))]


if (BetaQ_SR=="NO") {
VR_A&lt;- 0.
for (e in 1:length(RegMod[,1])){
VR_A [e] &lt;- RegMod$intercept[e]+ (RegMod$slope1[e] * RegMod$X_A[e])
}
RegMod$VR_A&lt;-VR_A
}


if (BetaQ_SR=="YES") {
VR_A&lt;- 0.
for (e in 1:length(RegMod[,1])){
VR_A [e] &lt;-  1/(1+exp(-RegMod$intercept[e]-(RegMod$slope1[e] * RegMod$X_A[e])))
}
RegMod$VR_A&lt;-VR_A                                                       #Estimated Vital rate including the perturbation of Chinook abundances
}


#Create an element to store all Matrices
df.list &lt;- vector("list", length(RegMod[,1]))
for(i in 1:length(RegMod[,1])){df.list[[i]] &lt;- matrix(data = NA,
                                     nrow = 7,
                                     ncol = 7,
                                     byrow = FALSE,
                                     dimnames = NULL)}

for (f in 1:length(RegMod[,1])){

 if(RegMod$MatName[f]=='Ss1_') {df.list[[f]]&lt;- FunTSs1(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Ss2_') {df.list[[f]]&lt;- FunTSs2(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Ss3_') {df.list[[f]]&lt;- FunTSs3(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Ss4_') {df.list[[f]]&lt;- FunTSs4(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Ss5_') {df.list[[f]]&lt;- FunTSs5(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Ss6_') {df.list[[f]]&lt;- FunTSs6(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Ss7_') {df.list[[f]]&lt;- FunTSs7(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Sf3_') {df.list[[f]]&lt;- FunTSf3(RegMod$VR_A[f])}
 if(RegMod$MatName[f]=='Sf4_') {df.list[[f]]&lt;- FunTSf4(RegMod$VR_A[f])}
 }


RegMod$LambdaA&lt;- as.numeric(unlist(lapply(df.list,lambda)))



RegMod$X_B&lt;- RegMod$X_A*(1+percIncr)


if (BetaQ_SR=="NO") {
VR_B&lt;- 0.
for (e in 1:length(RegMod[,1])){
VR_B [e] &lt;- RegMod$intercept[e]+ (RegMod$slope1[e] * RegMod$X_B[e])
}
RegMod$VR_B&lt;-VR_B
}


if (BetaQ_SR=="YES") {
VR_B&lt;- 0.
for (e in 1:length(RegMod[,1])){
VR_B [e] &lt;-  1/(1+exp(-RegMod$intercept[e]-(RegMod$slope1[e] * RegMod$X_B[e])))
}
RegMod$VR_B&lt;-VR_B
}



#Build a set of matrices given the VR_B in RegMod
for (f in 1:length(RegMod[,1])){

 if(RegMod$MatName[f]=='Ss1_') {df.list[[f]]&lt;- FunTSs1(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Ss2_') {df.list[[f]]&lt;- FunTSs2(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Ss3_') {df.list[[f]]&lt;- FunTSs3(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Ss4_') {df.list[[f]]&lt;- FunTSs4(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Ss5_') {df.list[[f]]&lt;- FunTSs5(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Ss6_') {df.list[[f]]&lt;- FunTSs6(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Ss7_') {df.list[[f]]&lt;- FunTSs7(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Sf3_') {df.list[[f]]&lt;- FunTSf3(RegMod$VR_B[f])}
 if(RegMod$MatName[f]=='Sf4_') {df.list[[f]]&lt;- FunTSf4(RegMod$VR_B[f])}
 }


RegMod$LambdaB&lt;- as.numeric(unlist(lapply(df.list,lambdaPop)))


ElX_V1&lt;-  ((RegMod$LambdaB/RegMod$LambdaA)-1)/((RegMod$X_B/RegMod$X_A)-1)

ElX_V2    &lt;-   (RegMod$E.VR_Stc*((RegMod$VR_B/RegMod$VR_A)-1))/((RegMod$X_B/RegMod$X_A)-1)
ElX_V2_95 &lt;-   (RegMod$E.VR_95* ((RegMod$VR_B/RegMod$VR_A)-1))/((RegMod$X_B/RegMod$X_A)-1)

ifelse(Variant==1,
RegMod$Elast.Inter &lt;- ElX_V1 ,
RegMod$Elast.Inter &lt;- ElX_V2)

#Adding Elasticity for the 95% CI
RegMod$Elast.Inter95&lt;- ElX_V2_95

#Filtering out negative slopes (ecologically impossible) and getting date ready to plot.
RegModPos&lt;- subset(RegMod, slope1&gt;=0)
RegModPos&lt;- RegModPos[order(RegModPos$Chinook_Run),]

#Filtering out Stages
RegModPos&lt;- subset(RegModPos,MatName  != "Ss5_"&amp; MatName  != "Ss6_"&amp; MatName  != "Ss7_")

#filtering by hypothesis (Remove hybrid and NAs).
ifelse(Population[1]=='SRKW',
RegModPos &lt;- subset(RegModPos, SR_Hyp != 'NA' &amp; SR_Hyp !='Hybrid'),
RegModPos &lt;- subset(RegModPos, NR_Hyp != 'NA' &amp; NR_Hyp !='Hybrid'))

#Creating categories to match VRs
FreqVRs= as.data.frame(table(factor(RegModPos$VitalRate)) )             #data frame with frequencies of VRs
UniqDF&lt;-  unique(factor(RegModPos$VitalRate))                           #Vector with unique names of VRs
NAsdm&lt;- rep(NA,length(UniqDF))                                                  #Dummy NA seq

RegModPos
}


save(list=ls(all.names=FALSE), file=.wsfile)
"RWorkspace"&lt;-.wsfile
</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes />
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>KillerWhales_1_8</name><inputPorts><port><name>Sims</name><depth>0</depth></port><port><name>EndYear</name><depth>0</depth></port><port><name>VR_combined_csv</name><depth>0</depth></port><port><name>KWDataFile</name><depth>0</depth></port><port><name>StartYear</name><depth>0</depth></port><port><name>Population</name><depth>0</depth></port><port><name>RWorkspace</name><depth>0</depth></port></inputPorts><outputPorts><port><name>StableStageProjectionPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>EigenAnalysis</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>EffectsOfChangingKWVRsPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>VitalRatesEstimates</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StochasticElasticityVRPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StochasticElasticityStats</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>AliveCSV</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>MeanMatrix</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>AlivePDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StatsByCategory</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>DampingTime</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StableStateValues</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>DetVRsSensitivityElasticityPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>StochasticVitalRatesPDF</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>VR_combined_PNG</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>CountsByYear</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>CountsAndProportionsT0</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="StartYear" to="StartYear" /><map from="Sims" to="Sims" /><map from="RWorkspace" to="RWorkspace" /><map from="VR_combined_csv" to="VR_combined_csv" /><map from="KWDataFile" to="KWDataFile" /><map from="Population" to="Population" /><map from="EndYear" to="EndYear" /></inputMap><outputMap><map from="StochasticElasticityStats" to="StochasticElasticityStats" /><map from="StochasticVitalRatesPDF" to="StochasticVitalRatesPDF" /><map from="AliveCSV" to="AliveCSV" /><map from="DetVRsSensitivityElasticityPDF" to="DetVRsSensitivityElasticityPDF" /><map from="EffectsOfChangingKWVRsPDF" to="EffectsOfChangingKWVRsPDF" /><map from="CountsByYear" to="CountsByYear" /><map from="CountsAndProportionsT0" to="CountsAndProportionsT0" /><map from="StableStateValues" to="StableStateValues" /><map from="MeanMatrix" to="MeanMatrix" /><map from="AlivePDF" to="AlivePDF" /><map from="DampingTime" to="DampingTime" /><map from="VR_combined_PNG" to="VR_combined_PNG" /><map from="StochasticElasticityVRPDF" to="StochasticElasticityVRPDF" /><map from="VitalRatesEstimates" to="VitalRatesEstimates" /><map from="EigenAnalysis" to="EigenAnalysis" /><map from="StatsByCategory" to="StatsByCategory" /><map from="StableStageProjectionPDF" to="StableStageProjectionPDF" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Sims</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StartYear</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>EndYear</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>VR_combined_csv</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>KWDataFile</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Population</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>StableStageProjectionPDF</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>VitalRatesEstimates</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>StochasticElasticityStats</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>AliveCSV</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>StatsByCategory</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>DampingTime</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>StableStateValues</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>CountsAndProportionsT0</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>EffectsOfChangingKWVRsPDF</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>RWorkspace</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>StochasticElasticityVRPDF</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>AlivePDF</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>MeanMatrix</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>EigenAnalysis</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>DetVRsSensitivityElasticityPDF</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>StochasticVitalRatesPDF</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>VR_combined_PNG</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>CountsByYear</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>.wsfile&lt;-get("RWorkspace")
rm("RWorkspace")
save(list=ls(all.names=FALSE), file="ws.tmp")
load(.wsfile)
load("ws.tmp")
#Killer Whale interactions with Chinook Abundance
#Andres Araujo January, 2013


#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@          Settings         @@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;


#getwd()                                                                        #Where are we working exacly?
#setwd()                                                                        #Uncomment(#) to change workfolder, if needed. E.G. setwd("C:/KillerWhales/R_code)


# Population&lt;- c('SRKW')                                                          #Defines the population to be used in the analyses: Northern (NRKW) or Southern (SRKW)
# Period&lt;- c(1987,2011)                                                           #Period for Demographic analyses. Note: Double check IID periods is this  setting is changed
set.seed= pi*pi                                                                 #Seed for Stochastic simulations
install_pcks = "NO"                                                             #Select "YES" to install packages if it is the first time running the code
options(width = 200, digits = 5, prompt = "Chido&gt;", continue = "+")             #Options to control R output
# source('MonsterCave.r')                                                         #File with Functions


#Recommended Tinn-R version:
#&lt;&lt;&lt; http://sourceforge.net/projects/tinn-r/files/Tinn-R%20setup/1.19.1.9/ &gt;&gt;&gt;

if (interactive()) {
    # To test this script, run:
    # R --interactive --no-save &lt; script.r

    options(error=quit)

    # Inputs:
    if (!exists("Population")) Population&lt;- c('SRKW')
    if (!exists("StartYear")) StartYear &lt;- 1987
    if (!exists("EndYear")) EndYear &lt;- 2011
    if (!exists("KWDataFile")) KWDataFile &lt;- "data/KWDataFile.csv"
    if (!exists("Sims")) Sims&lt;- 1000

    # Outputs:
    if (!exists("CountsByYear")) CountsByYear &lt;- "output/CountsByYear.csv"
    if (!exists("VitalRatesEstimates")) VitalRatesEstimates &lt;- "output/VitalRatesEstimates.csv"
    if (!exists("MeanMatrix")) MeanMatrix &lt;- "output/MeanMatrix.csv"
    if (!exists("AliveCSV")) AliveCSV &lt;- "output/Alive.csv"
    if (!exists("AlivePDF")) AlivePDF &lt;- "output/Alive.pdf"
    if (!exists("StableStateValues")) StableStateValues &lt;- "output/StableStateValues.csv"
    if (!exists("CountsAndProportionsT0")) CountsAndProportionsT0 &lt;- "output/CountsAndProportionsT0.csv"
    if (!exists("EigenAnalysis")) EigenAnalysis &lt;- "output/EigenAnalysis.txt"
    if (!exists("DampingTime")) DampingTime &lt;- "output/DampingTime.csv"
    if (!exists("StableStageProjectionPDF")) StableStageProjectionPDF &lt;- "output/StableStageProjection.pdf"
    if (!exists("StatsByCategory")) StatsByCategory &lt;- "output/StatsByCategory.csv"
    if (!exists("EffectsOfChangingKWVRsPDF")) EffectsOfChangingKWVRsPDF &lt;- "output/EffectsOfChangingKWVRs.pdf"
    if (!exists("DetVRsSensitivityElasticityPDF")) DetVRsSensitivityElasticityPDF &lt;- "output/DetVRsSensitivityElasticity.pdf"
    if (!exists("StochasticVitalRatesPDF")) StochasticVitalRatesPDF &lt;- "output/StochasticVitalRates.pdf"
    if (!exists("StochasticElasticityVRPDF")) StochasticElasticityVRPDF &lt;- "output/StochasticElasticityVRPDF.pdf"
    if (!exists("StochasticElasticityStats")) StochasticElasticityStats &lt;- "output/StochasticElasticityStats.csv"
}

# Derived:
Period &lt;- c(StartYear, EndYear)

# BEGIN 1
#@@@@@@@@@@@@@@@@@@         Defining  Age Categoriess        @@@@@@@@@@@@@@@@@@@

#This age categories can be changed according to the user needs, except for Juveniles.
#Starting age for young males and femaes must be 10. Age groups must be continuous
#(e.i. no gaps in ages). See section 2.2 Killer Whale matrix population modeling
#of the progress report (PR) for more information.

CalfAges &lt;- c(0,1)         #   calfs age range                       (default 0 to 1)
JuvsAges &lt;- c(2,9)         #   juveniles age range                   (default 2 to 9)
YRFemAges&lt;- c(10,30)       #   young reproductive females age range  (default 10 to 30)
ORFemAges&lt;- c(31,50)       #   old reproductive females age range    (default 31 to 50)
PRFemAges&lt;- c(51,200)      #   post reproductive females age range   (default 51 to 200)
YMMalAges&lt;- c(10,21)       #   young mature males                    (default 10 to 21)
OMMalAges&lt;- c(22,200)      #   old mature males                      (default 22 to 200)

#_______________________________________________________________________________
#-------------------------------------------------------------------------------

# BEGIN 2
#Require 1
#This fuction uses counts and factors to estimate the number of individuals in each age category
CountFun&lt;-function(counts, factor){
Count&lt;- as.integer(tapply(counts,factor(factor),sum))
}
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@             Demographic Data Processing            @@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#This section inputs demographic data of KW and estimates counts by year and stage
#according to the selection criteria from the age categories. See secion 2.3.1
# of the PR Killer Whale demographic data for more information.


Cat2Names&lt;- c('calve','Juvenil','YoungRFem','OldRFem','PostRFem','YoungMale','OldMale')     #These names can be changed, as long as the number of categories is maintained
#_______________________________________________________________________________
#-------------------------------------------------------------------------------

#Data input
#KWdata&lt;- read.table(paste(getwd(),'/','R_Inputs','/',Population,'_R.csv',sep=""),header=T, sep=",") #
KWdata&lt;- read.table(KWDataFile,header=T, sep=",")

KWdata&lt;-  subset(KWdata, Year &gt;= StartYear &amp; Year &lt;= EndYear)


#------ STAGES ------
# This section creates a series of subsets according to the ages specified above.



Females&lt;- subset(KWdata, Cat1=='Female')
Males  &lt;- subset(KWdata, Cat1=='Male')

calvs&lt;- subset(subset(KWdata, Cat1 == 'Juv')
                ,Age &gt;= CalfAges[1] &amp; Age &lt;= CalfAges[2])                       #calves, only ages 0 to 1
Cat2&lt;- rep(Cat2Names[1],length(calvs[,1]))
calvs&lt;- cbind(calvs,Cat2)


juvsC&lt;- subset(subset(KWdata, Cat1 == 'Juv')                                    #juveniles for counts
                ,Age &gt;= JuvsAges[1] &amp; Age &lt;= JuvsAges[2])
Cat2&lt;- rep(Cat2Names[2],length(juvsC[,1]))
juvsC&lt;- cbind(juvsC,Cat2)


juvs&lt;-  subset(KWdata, Cat1 == 'Juv')                                           #juveniles for Survivals  (past one year but inmature [ages 1-9], undetermined sex
Cat2&lt;- rep(Cat2Names[2],length(juvs[,1]))
juvs&lt;- cbind(juvs,Cat2)

YRFem&lt;- subset(subset(KWdata, Cat1 == 'Female')
                ,Age &gt;= YRFemAges[1] &amp; Age &lt;= YRFemAges[2])                     #young reproductive females
Cat2&lt;- rep(Cat2Names[3],length(YRFem[,1]))
YRFem&lt;- cbind(YRFem,Cat2)

ORFem&lt;- subset(subset(KWdata, Cat1 == 'Female')
                ,Age &gt;= ORFemAges[1] &amp; Age &lt;= ORFemAges[2])                     #old reproductive females
Cat2&lt;- rep(Cat2Names[4],length(ORFem[,1]))
ORFem&lt;- cbind(ORFem,Cat2)

PRFem&lt;- subset(subset(KWdata, Cat1 == 'Female')
                ,Age &gt;= PRFemAges[1])                                           #post-reproductive females (51 year old and older)
Cat2&lt;- rep(Cat2Names[5],length(PRFem[,1]))
PRFem&lt;- cbind(PRFem,Cat2)

YMMal&lt;- subset(subset(KWdata, Cat1 == 'Male')
                ,Age &gt;= YMMalAges[1] &amp; Age &lt;= YMMalAges[2])                     #young mature males (ages 10-21);
Cat2&lt;- rep(Cat2Names[6],length(YMMal[,1]))
YMMal&lt;- cbind(YMMal,Cat2)

OMMal&lt;- subset(subset(KWdata, Cat1 == 'Male')
                ,Age &gt;= OMMalAges[1] &amp; Age &lt;= OMMalAges[2])                     #old mature males (22 year old and older).
Cat2&lt;- rep(Cat2Names[7],length(OMMal[,1]))
OMMal&lt;- cbind(OMMal,Cat2)


#Counts by year and stage

#use of 'factors' to sum individuals across age categories using CountFun
Count_Calves &lt;- CountFun(calvs$Count,calvs$Year)
Count_Juvs   &lt;- CountFun(juvsC$Count,juvsC$Year)
Count_YRFem  &lt;- CountFun(YRFem$Count,YRFem$Year)
Count_ORFem  &lt;- CountFun(ORFem$Count,ORFem$Year)
Count_PRFem  &lt;- CountFun(PRFem$Count,PRFem$Year)
Count_YMMal  &lt;- CountFun(YMMal$Count,YMMal$Year)
Count_OMMal  &lt;- CountFun(OMMal$Count,OMMal$Year)


df.abundances&lt;- as.data.frame(cbind(seq(StartYear,EndYear,1),Count_Calves,
    Count_Juvs,Count_YRFem,Count_ORFem,Count_PRFem,Count_YMMal,Count_OMMal))
colnames(df.abundances)&lt;- c("Year",Cat2Names)

Total_KW&lt;- apply(df.abundances[-1],1,sum)
df.abundances&lt;- cbind(df.abundances,Total_KW)


write.table(df.abundances, file = CountsByYear, sep=',', quote = FALSE, row.names = FALSE)


# BEGIN 3
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@  3. ESTIMATING SURVIVALS &amp; FECUNDITIES       @@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#This section estimates the KW survivals and fecundities (Vital rates) for the
#different age categories. See section 2.2 Killer Whale matrix population modeling
#of the PR.

#_______________________________________________________________________________
#-------------------------------------------------------------------------------

#***************************        Juveniles   ********************************


SurtempJ&lt;- 0.
for (j in 1:length(juvs$Year)){                                                 #Nr. of age classes
    SurtempJ [j]&lt;- (1/juvs$Count[j])*juvs$Count[j+YRFemAges[1]]                 #Nr. of age classes in between
    }
SurtempJ &lt;- c(NA,SurtempJ[-length(juvs$Year)])                                  #Adjusting the survivals so that they match age


# Estimating the survival of age 9s
Temp1     &lt;- subset(rbind(YRFem,YMMal), Age == 10)                              #creating a subset of ages 10 each year for both male and females
F_yearM_F &lt;- factor(Temp1$Year)                                                 #Then create a factor by year and sum both male and female counts
factor.juvs &lt;- tapply(Temp1$Count,F_yearM_F,sum)
Countjuvs= as.integer(factor.juvs)


Temp1df&lt;- data.frame(Year= seq(min(Temp1$Year),max(Temp1$Year),1), Age=rep(10,length(Countjuvs)),       #integrating into a data frame (df)the vector of male/female counts
          Count=Countjuvs, Offspring=rep(NA,length(Countjuvs)), Cat1=rep('M+F',length(Countjuvs)),Cat2=rep('Juvs2',length(Countjuvs)))

Temp2df&lt;- rbind(subset(juvs, Age == JuvsAges[2]),Temp1df)                       #creating a dataframe of Juvs age 9 and merge with dataframe Temp1df


#Estimating survival of age 10s
Surtemp10s&lt;- 0.
for (k in 1:length(Temp2df$Year)){
     Surtemp10s[k]&lt;- (1/Temp2df$Count[k])*Temp2df$Count[k+length(Temp1df$Year)+1]
    }
Surtemp10s&lt;-Surtemp10s[-seq((length(Females[Females$Age==YRFemAges[1],]$Year)+1),
                      (length(Females[Females$Age==YRFemAges[1],]$Year)*2),1)]

#Dummy objects are intermediate objects.
#Creating a survival df of juveniles ages 10 AND
Dummy5&lt;- cbind(juvs,SurtempJ) [cbind(juvs,SurtempJ) $Age ==1,]                  #Subset of Ages 1
Dummy5$SurtempJ&lt;-Surtemp10s                                                     #Replace 'wrong' Surv in Ages 1 for the 'right' survival estimate above
Dummy6&lt;- cbind(juvs,SurtempJ) [!(cbind(juvs,SurtempJ) $Age==1),]                #Ages 1 &amp; 2 are not used
Dummy7&lt;-rbind(Dummy5,Dummy6)
Dummy7$Age&lt;-ifelse(Dummy7$Age==1, 10,Dummy7$Age)                                #Replane ages 1 fpr ages 10, which is waht really was estimated above.
Dummy8 &lt;- Dummy7[order(Dummy7$Year,Dummy7$Age),]                                #Order by year and then by Age


#Estimating yearly survival ages 3  to 10
Dummy9&lt;- subset(Dummy8, Age&gt;=JuvsAges[1]+1 &amp; Age &lt;=JuvsAges[2]+1)
Dummy10&lt;- subset(Dummy9, Dummy9$SurtempJ!= "NaN")                               # Subset of not equal to 'NaN'
F_SurvJuvsYear &lt;- factor(Dummy10$Year)                                          #convert year into factors for the age category
Juvenile_Survival &lt;- as.numeric(tapply(Dummy10$SurtempJ,F_SurvJuvsYear, mean))     #Juvenile Survival


#***************************        Calves     *********************************
#Ages 2  to 10
Dummy11&lt;- subset(Dummy8, Age==JuvsAges[1])
Dummy11&lt;- subset(Dummy11, Dummy11$SurtempJ!= "NA")
Calf_Survival&lt;- Dummy11$SurtempJ


#***************************        Females    *********************************
#This procedure is different from the one above used to estimate the survival of Juveniles.
#The main reason is that it uses a foor loop plus a index (IND) which allows adding one
#year to the max age each year. For example, if in 1990 the max age of females
#was 56, in 1991 the max age will be 57. The procedure also allows estimating all
#survivals of the different groups of females at once, rather than one at the time.


#IND = rep (0 to Nr of years in data, Nr of obs in Year 1 (Ages 10+):Nr of obs in last year (2011))
IND&lt;- rep(0:(length(Females[Females$Age==YRFemAges[1],]$Year)-1),length(Females[Females$Year==min(Females$Year),]$Year):length(Females[Females$Year==max(Females$Year),]$Year))

SurFem&lt;-0.
for (j in 1:length(Females$Year)){
    SurFem [j]&lt;- (1/Females$Count[j])*Females$Count[j+(max(Females[Females$Year== min(Females$Year),]$Age) -YRFemAges[1]+2+IND[j])]
    }


FemaleSurvs&lt;- as.data.frame(cbind(Females,SurFem))
FemaleSurvs&lt;- subset(FemaleSurvs, FemaleSurvs$SurFem!= "NaN")


#YRF
YRFSurvs&lt;- subset(FemaleSurvs, Age &gt;= YRFemAges[1] &amp; Age &lt;=YRFemAges[2])
F_SurvYRFYear &lt;- factor(YRFSurvs$Year)
F1_Survival &lt;- as.numeric(tapply(YRFSurvs$SurFem,F_SurvYRFYear, mean))


#ORF
ORFSurvs&lt;- subset(FemaleSurvs, Age &gt;= ORFemAges[1] &amp; Age &lt;=ORFemAges[2])
F_SurvORFYear &lt;- factor(ORFSurvs$Year)
F2_Survival &lt;- as.numeric(tapply(ORFSurvs$SurFem,F_SurvORFYear, mean))


#PRF
PRFSurvs&lt;- subset(FemaleSurvs, Age &gt;= PRFemAges[1] &amp; Age &lt;=PRFemAges[2])
F_SurvPRFYear &lt;- factor(PRFSurvs$Year)
F3_Survival &lt;- as.numeric(tapply(PRFSurvs$SurFem,F_SurvPRFYear, mean))



#***************************        Males      *********************************
#Similar procedure as in Females
INDm&lt;- rep(0:(length(Males[Males$Age==YMMalAges[1],]$Year)-1),length(Males[Males$Year==min(Males$Year),]$Year):length(Males[Males$Year==max(Males$Year),]$Year))

SurMal&lt;-0.
for (j in 1:length(Males$Year)){
    SurMal [j]&lt;- (1/Males$Count[j])*Males$Count[j+(max(Males[Males$Year== min(Males$Year),]$Age)-YMMalAges[1]+2+INDm[j])]
    }

Malesurvs&lt;- as.data.frame(cbind(Males,SurMal))
Malesurvs&lt;- subset(Malesurvs, Malesurvs$SurMal!= "NaN")

#YMM
YMMSurvs&lt;- subset(Malesurvs, Age &gt;= YMMalAges[1] &amp; Age &lt;=YMMalAges[2])
F_SurvYMMYear &lt;- factor(YMMSurvs$Year)
M1_Survival &lt;- as.numeric(tapply(YMMSurvs$SurMal,F_SurvYMMYear, mean))


#OMM
OMMSurvs&lt;- subset(Malesurvs, Age &gt;= OMMalAges[1] &amp; Age &lt;=OMMalAges[2])
F_SurvOMMYear &lt;- factor(OMMSurvs$Year)
M2_Survival &lt;- as.numeric(tapply(OMMSurvs$SurMal,F_SurvOMMYear, mean))

#@@@@@@@@@@@@@@@@@            Survival Table                    @@@@@@@@@@@@@@@@

Year&lt;- seq(min(KWdata$Year),max(KWdata$Year)-1,1)
SurvTable&lt;- cbind(Year, Calf_Survival, Juvenile_Survival,F1_Survival,F2_Survival,F3_Survival,M1_Survival, M2_Survival)


#@@@@@@@@@@@@@@@@@        OFFSPRING PRODUCTION                   @@@@@@@@@@@@@@@
#Subsets using factors and estimates the offspring production

#YRF
F_yearYRFem &lt;- factor(YRFem$Year)
Offs.YRFem &lt;- as.numeric(tapply(YRFem$Offspring , F_yearYRFem, sum))
Count.YRFem &lt;- as.numeric(tapply(YRFem$Count, F_yearYRFem, sum))
F1_Fecundity&lt;- Offs.YRFem/Count.YRFem

#ORF
F_yearORFem &lt;- factor(ORFem$Year)
Offs.ORFem &lt;- as.numeric(tapply(ORFem$Offspring , F_yearORFem, sum))
Count.ORFem &lt;- as.numeric(tapply(ORFem$Count, F_yearORFem, sum))
F2_Fecundity&lt;- Offs.ORFem/Count.ORFem

YearOff&lt;- seq(min(KWdata$Year),max(KWdata$Year),1)
OffspringTable&lt;- cbind(YearOff, F1_Fecundity,F2_Fecundity )


#Results
SurvTable
OffspringTable

#Redefining data without the year
SurvTable2&lt;- rbind(SurvTable[,-1],rep(NA,7))
OffsprTable2&lt;-OffspringTable[,-1]

#Results of Vital rates
VR_orig&lt;- cbind(SurvTable2,OffsprTable2)
write.table(cbind(OffspringTable[,1],VR_orig), file = VitalRatesEstimates, sep=',', quote = FALSE, row.names = FALSE)

# Grafica VRs
VR_combined &lt;- read.table(VR_combined_csv, header=T, sep=",")
png(VR_combined_PNG)
boxplot(VR_combined, main=paste(" "), ylim=c(0,1), col=c('white' ,'gray'), las=2, cex.axis=0.8, mgp=c(5,1,0,1))
dev.off()

# BEGIN 4
# Require: 1
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@     4. DETERMINISTIC MATRIX ELEMENTS AND MEAN MATRIX        @@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#This section produces a series of matrix elements constructed from the
#vital rates estimated previously. See section 2.2 Killer Whale matrix population
#modeling of the PR.


#Creating vectors of  Vital rates
SurvSigma&lt;- as.numeric(colMeans(SurvTable, na.rm = TRUE, dims = 1))[-1]         #Means of yearly survivals
MaxAge&lt;-c(CalfAges[2],JuvsAges[2], YRFemAges[2],ORFemAges[2], max(PRFem[PRFem$Count&gt;0,]$Age),YMMalAges[2],max(OMMal[OMMal$Count&gt;0,]$Age)) #For ref: max(PRFem[PRFem$Count&gt;0,]$Age) # Max age of any individual in any year (when counts are &gt;0)
SurvGamma&lt;-c(1, 1/(MaxAge[2]-MaxAge[1]), 1/(MaxAge[3]-MaxAge[2]),  1/(MaxAge[4]-MaxAge[3]),  1/(MaxAge[5]-MaxAge[4]), 1/(MaxAge[6]-MaxAge[2]),1/(MaxAge[7]-MaxAge[6]) )

#EstimatingPhi : for ages 10 only  (from % Juveniles to sex)
Temp1.Mal&lt;-Temp1[Temp1$Cat1=='Male',]                                           #Temp1 df where agews 10 are.
Temp1.Fem&lt;-Temp1[Temp1$Cat1=='Female',]
Perc.Mal&lt;-Temp1.Mal[3]/(Temp1.Mal[3]+Temp1.Fem[3])                              #proportion of males compared to females
Perc.Fem&lt;-Temp1.Fem[3]/(Temp1.Mal[3]+Temp1.Fem[3])                              #proportion of females compared to females. It could also be abs(1-Perc.Mal)

Mean.Perc.Mal&lt;- colMeans(Perc.Mal,na.rm = TRUE);Var.Perc.Mal&lt;- var(Perc.Mal,na.rm = TRUE) #Mean and variance of Males age 10
Mean.Perc.Fem&lt;- colMeans(Perc.Fem,na.rm = TRUE);Var.Perc.Fem&lt;- var(Perc.Fem,na.rm = TRUE) #Mean and variance of Females age10

Mean.Ratio.Mal&lt;- sum(Temp1.Mal[3])/sum(Temp1.Mal[3]+Temp1.Fem[3])               #Ratio males to malesage10
Mean.Ratio.Fem&lt;- sum(Temp1.Fem[3])/sum(Temp1.Mal[3]+Temp1.Fem[3])               #Ratio females to malesage10

PercentPhi&lt;- c(NaN,NaN,as.numeric(Mean.Ratio.Fem[1]),NaN,NaN, as.numeric(Mean.Ratio.Mal[1]), NaN)
MuOffsp&lt;- c(0,0,na.omit(mean(F1_Fecundity)),na.omit(mean(F2_Fecundity)),0,0,0)

#Vital Rates Matrix
VitalR&lt;- rbind(SurvSigma,MaxAge,SurvGamma,PercentPhi,MuOffsp)


#***************************         Ps &amp;  Gs       ****************************
                             # &lt;&lt;&lt; Matrix Elements&gt;&gt;&gt;


P1=SurvSigma[1] *(1-SurvGamma[1])
P2=SurvSigma[2] *(1-SurvGamma[2])
P3=SurvSigma[3] *(1-SurvGamma[3])
P4=SurvSigma[4] *(1-SurvGamma[4])
P5=SurvSigma[5] #*(1-SurvGamma[5])
P6=SurvSigma[6] *(1-SurvGamma[6])
P7=SurvSigma[7] #*(1-SurvGamma[7])

G1&lt;-SurvSigma[1]^0.5
G2f&lt;-SurvSigma[2]*SurvGamma[2]*PercentPhi[3]
G3&lt;-SurvSigma[3]*SurvGamma[3]
G4&lt;-SurvSigma[4]*SurvGamma[4]
G2m&lt;-SurvSigma[2]*SurvGamma[2]*PercentPhi[6]
G5&lt;-SurvSigma[6]*SurvGamma[6]

#***************************      MEAN MATRIX       ****************************
#Matrix data entered by Stages--Columns--

CalveMat&lt;-c(0,G1,0,0,0,0,0)
JuvMat  &lt;-c(G1*(((1+P2)*MuOffsp[2])+(G2f*MuOffsp[3]))/2, P2,G2f,0,0,G2m,0)
YoFemMat&lt;-c(G1*(((1+P3)*MuOffsp[3])+(G3* MuOffsp[4]))/2, 0,P3,G3,0,0,0)
OlFemMat&lt;-c(G1*(((1+P4)*MuOffsp[4])+(G4* MuOffsp[5]))/2, 0,0,P4,G4,0,0)
PRFemMat&lt;-c(0,0,0,0,P5,0,0)
YoMalMat&lt;-c(0,0,0,0,0,P6,G5)
OlMalMat&lt;-c(0,0,0,0,0,0,P7)


MeanMat&lt;- as.matrix(cbind(CalveMat,JuvMat,YoFemMat,OlFemMat,PRFemMat,YoMalMat,OlMalMat))#, dimnames = list(Cat2Names,Cat2Names),byrow = TRUE)
write.table(MeanMat, file = MeanMatrix, sep=',', quote = FALSE, row.names = FALSE)
cat(paste('Mean Matrix',Population[1]),'(saved in working folder)',"\n");print(MeanMat)


# BEGIN 5
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@           5. ALIVE IN LAST YEAR              @@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;

#This section estimates the percentage of individuals alive in a determined year
#(Year_Q) by year of birth. It determines how young or senile the population in
#a year is.

Year_Q &lt;- EndYear    # Year of the query, by default the last year in Period. It could be change e.g. 1987.


#_______________________________________________________________________________
#-------------------------------------------------------------------------------
tempalive&lt;- KWdata[KWdata$Year==Year_Q,]
F_Agetempalive&lt;- factor(tempalive$Age)
tempalive2 &lt;- as.numeric(tapply(tempalive$Count, F_Agetempalive, sum))
tempalive3&lt;-tempalive2/sum(tempalive2)

Yearsback&lt;- seq(Year_Q,Year_Q-length(tempalive3)+1,-1)
alive&lt;- cbind(Yearsback,tempalive3*100)
colnames(alive)&lt;-c('Year','Percentage')
write.table(alive, file =AliveCSV, sep=',', quote = FALSE, row.names = FALSE)

graphics.off()
pdf(AlivePDF,width=12,height=8)
plot(alive, type='h', lwd=2, main=paste('Percentage of individuals alive in',Year_Q[1],'by year of birth'), ylim=c(0,10), ylab='percentage')
dev.off()


# BEGIN 6
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@    6. BASIC MATRIX ESTIMATES  @@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#This section estimates dominant lambda and other eigenvectors, the stable stage
#distribution (and population projection), and the damping ratio. See section
#3.1 KW demography of the PR.

#&lt;&lt;&lt;Prior Running the following modules, these R packages must be intalled.
# Select "YES" from install all packages in settings. Everytime a new R version
# is installed, packages need to be re-intalled.&gt;&gt;&gt;


# Sims&lt;- 1000                                                                     #Number of simulations  used for the population projection

#_______________________________________________________________________________
#-------------------------------------------------------------------------------

if(install_pcks == "YES"){
install.packages("popbio")
install.packages("lattice")
install.packages("betareg")}

library(popbio)
library(lattice)
library(betareg)


#**********************     Estimating Eigen Vactors        *******************

eigenall (MeanMat)

#Running function
#-lambdas
#-lambda1_dominant
#-EigenVecs
#-w: stable distribution
#-v: reproductive value
#-V: matrix with left eigenvectors of A as rows


#**********************        Population Projection         *******************


# Creating a projection Matrix

#Counts in last year of data
nlastYear&lt;- c(
sum(calvs[calvs$Year==max(KWdata$Year),]$Count),
sum(juvs [ juvs$Year==max(KWdata$Year),]$Count)-sum(calvs[calvs$Year==max(KWdata$Year),]$Count),
sum(YRFem[YRFem$Year==max(KWdata$Year),]$Count),
sum(ORFem[ORFem$Year==max(KWdata$Year),]$Count),
sum(PRFem[PRFem$Year==max(KWdata$Year),]$Count),
sum(YMMal[YMMal$Year==max(KWdata$Year),]$Count),
sum(OMMal[OMMal$Year==max(KWdata$Year),]$Count))

propLastYear&lt;-nlastYear/sum(nlastYear)
CountsLastyear&lt;- data.frame(Cat2Names,nlastYear,propLastYear)

#Projecting using popbio
p.projection &lt;- pop.projection(MeanMat, nlastYear, Sims)

#Graphic Output
CountsLastYearOrd &lt;- CountsLastyear[order(CountsLastyear$nlastYear),]           #Initial population numbers ordered in last year
StableStage&lt;-p.projection$stage.vectors                                         #Stable State Vector
Cat2Names-&gt;rownames(StableStage)                                                #Row names

#Tabular Output
write.table(StableStage, file = StableStateValues, sep=',', quote = TRUE, row.names = TRUE, col.names = NA)   #Stable State Output Simulations
write.table(CountsLastYearOrd, file = CountsAndProportionsT0, sep=',', quote = TRUE, row.names = TRUE, col.names = NA)   #Stable State Output Counts and Proportion



eigVals  &lt;- eigen.analysis(MeanMat)
eigVals
capture.output(eigVals, file=EigenAnalysis)

Lambda1&lt;- eigVals$lambda1

#Damping time @ Z=10
ResultsLambda&lt;- eigenall (MeanMat)
DampTime10 &lt;- log(10) / (log(Lambda1 / ResultsLambda$lambdas[2]))
DampTime10&lt;- c("damping ratio'", round(DampTime10,0))

write.table(DampTime10, file = DampingTime, sep=',', quote = TRUE, col.names=FALSE, row.names = FALSE)
cat(paste('Damping time @ Z=10',Population[1]),'(Saved to Folder)',"\n");print(DampTime10)


graphics.off()
pdf(StableStageProjectionPDF,width=8,height=8)
stage.vector.plot(StableStage,proportions=TRUE, legend.coords="topright",
        ylim=c(0,max(CountsLastYearOrd$propLastYear)+0.1), xlab="Years into the future", xlim=c(-2, 50),
        ylab='proportion of total population', col=rainbow(7), main=paste("Stable Stage Projection from",
        Population[1], StartYear,'-',EndYear))
        text(5, y = CountsLastYearOrd$propLastYear, labels = round(CountsLastYearOrd$nlastYear,0), col = 2, font = 2, cex=1)
        text(10, y = max(CountsLastYearOrd$propLastYear)+0.05, labels = paste('Counts',EndYear), col = 2, font = 2, cex=1)
dev.off()


# BEGIN 7
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@      DETERMINISTIC VITAL RATE ELASTICITY AND SENSITIVITY       @@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
# This section estimates deterministic sensitivities of vital rates, and
# deterministic elasticities of vital rates. See section 2.5 Perturbation analysis
# of the PR for more information.

#_______________________________________________________________________________
#-------------------------------------------------------------------------------

#***************             Defining Vital Rates            *******************

MeansSigma&lt;- as.numeric(colMeans(SurvTable, na.rm = TRUE, dims = 1))[-1]        #Means of yearly survivals, [-1] removes year.
VarsSigma&lt;- as.numeric(apply(SurvTable, 2, var,na.rm = TRUE))[-1]               #Vars of yearly survivals, 2 indicates by columns

MeansMuOffsp&lt;- c(0,0,mean(F1_Fecundity),mean(F2_Fecundity),0,0,0)                     #Means of offspring
VarsMuOffsp&lt;- c(0,0,var(F1_Fecundity),var(F2_Fecundity),0,0,0)                        #Vars of offspring

SummaryVrs&lt;- data.frame(Cat2Names,MeansSigma,VarsSigma, MeansMuOffsp, VarsMuOffsp)
names(SummaryVrs)&lt;-  c('Category','Mean_Surv', 'Var_Surv', 'Mean_Offspr', 'Var_Offspr')
write.table(SummaryVrs, file = StatsByCategory, sep=',', quote = TRUE, row.names = FALSE)

# Vital rates names, see below.
symsN&lt;- c('Ss1','Ss2','Ss3','Ss4','Ss5','Ss6','Ss7','Sg2','Sg3','Sg4','Sg6','Sp2','Sp3','Sf3','Sf4')

#S=vital rate
#s= survival
#i=*(number)stage
#g=transition probs(gammas)
#p2=prop femaes
#p3=pro males
#f= fecundity

Ss1 = SurvSigma[1]
Ss2 = SurvSigma[2]
Ss3 = SurvSigma[3]
Ss4 = SurvSigma[4]
Ss5 = SurvSigma[5]
Ss6 = SurvSigma[6]
Ss7 = SurvSigma[7]
Sg2 = SurvGamma [2]
Sg3 = SurvGamma [3]
Sg4 = SurvGamma [4]
Sg6 = SurvGamma [6]
Sp2 = PercentPhi[3]
Sp3 = PercentPhi[6]
Sf3 = MeansMuOffsp [3]
Sf4 = MeansMuOffsp [4]
MeanVR=c(Ss1,Ss2,Ss3,Ss4,Ss5,Ss6,Ss7,Sg2,Sg3,Sg4,Sg6,Sp2,Sp3,Sf3,Sf4)


#***********      Deterministic Elasticities of Vital Rates        *************

#Using POPbio fun vitalsens
KW.vr&lt;- list(Ss1=Ss1 ,Ss2=Ss2 ,Ss3=Ss3 ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6, Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3, Sg4=Sg4 ,Sg6=Sg6 ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)

KW.el&lt;- expression(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7
        )

#Alternatively, MeanMat expressed in technical notation
KW.mat&lt;- matrix(c(
        0, (Ss1^0.5*(Ss2*Sg2*Sp2*Sf3))/2, (Ss1^0.5*(((1+(Ss3*(1-Sg3)))*Sf3)+(Ss3*Sg3*Sf4)))/2,  (Ss1^0.5*((1+(Ss4*(1-Sg4)))*Sf4))/2, 0, 0, 0,
       	Ss1^0.5, Ss2*(1-Sg2), 0, 0, 0, 0, 0,
        0, Ss2*Sg2*Sp2, Ss3*(1-Sg3), 0, 0, 0, 0,
        0, 0, Ss3*Sg3, Ss4*(1-Sg4), 0, 0, 0,
        0, 0, 0, Ss4*Sg4, Ss5, 0, 0,
        0, Ss2*Sg2*Sp3, 0, 0, 0, Ss6*(1-Sg6), 0,
        0, 0, 0, 0, 0, Ss6*Sg6, Ss7),
        nrow = 7, ncol = 7, byrow = TRUE
        )

# Effects of changing vital rates
KW.n&lt;-length(KW.vr); vr&lt;-seq(0,1,.1)
vrsen&lt;-matrix(numeric(KW.n*length(vr)), ncol=KW.n, dimnames=list(vr, names(KW.vr)))

for (h in 1:KW.n)
{
KW.vr2&lt;-list(Ss1=Ss1 ,Ss2=Ss2 ,Ss3=Ss3  ,Ss4=Ss4 ,Ss5=Ss5 ,Ss6=Ss6 ,Ss7=Ss7 ,Sg2=Sg2 ,Sg3=Sg3 ,Sg4=Sg4 ,Sg6=Sg6  ,Sp2=Sp2 ,Sp3=Sp3 ,Sf3=Sf3 ,Sf4=Sf4)
for (i in 1:length(vr)){
KW.vr2[[h]]&lt;-vr[i]
A&lt;-matrix(sapply(KW.el, eval,KW.vr2,NULL), nrow=sqrt(length(KW.el)), byrow=TRUE)
vrsen[i,h] &lt;- max(Re(eigen(A)$values))
}}


graphics.off()
pdf(EffectsOfChangingKWVRsPDF,width=8,height=8)
matplot(rownames(vrsen), vrsen, type='l', lwd=2, las=1, col= rainbow(15), lty=1:15,
ylab="KW population growth", xlab="Value of vital rate",
main=paste("Effects of changing KW vital rates ", StartYear,'-',EndYear,Population[1]))
vrn&lt;-expression('Ss1','Ss2','Ss3','Ss4','Ss5','Ss6','Ss7','Sg2','Sg3','Sg4','Sg6','Sp2','Sp3','Sf3','Sf4')
legend(.05, max(vrsen), vrn, lwd=2, lty=1:15, col= rainbow(15), cex=0.75, border="gray100")
dev.off()


#calculating Elasticity
graphics.off()
pdf(DetVRsSensitivityElasticityPDF,width=12,height=8)
x.KW&lt;-vitalsens(KW.el, KW.vr)
sum(x.KW$elasticity)
barplot(t(x.KW[,2:3]), beside=TRUE, legend=TRUE, las=1, xlab="Vital rate",
main=paste("KW vital rate sensitivity and elasticity",StartYear,'-',EndYear,Population[1]))
abline(h=0, lwd=2, col=1)
dev.off()

# BEGIN 8
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@      8. STOCHASTIC VITAL RATE ELASTICITY AND SENSITIVITY       @@@@@@&gt;&gt;&gt;
#&lt;&lt;&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&gt;&gt;&gt;
# This section estimates stochastic sensitivities of vital rates, and
# stochastic elasticities of vital rates as well as it produces a series of
# elasticity statistics. The procedure uses stochastic sampling of beta and
# lognormal distributions fit to the KW vital rate data. See section
# 2.5 Perturbation analysis of the PR for more information.


reps=Sims                                                                       # number of repetitions used in stochastic sampling

#_______________________________________________________________________________
#-------------------------------------------------------------------------------

# Recommended beta for survival and lognormal (or beta) for other VRs. Otherwise
# Survival can be higher than 1 and will produce and error in subsequent analyses.

VDts1 =  'beta'
VDts2 =  'beta'
VDts3 =  'beta'
VDts4 =  'beta'
VDts5 =  'beta'
VDts6 =  'beta'
VDts7 =  'beta'
VDtg2 =  'lognorm'
VDtg3 =  'lognorm'
VDtg4 =  'lognorm'
VDtg6 =  'lognorm'
VDtp2 =  'lognorm'
VDtp3 =  'lognorm'
VDtf3 =  'lognorm'
VDtf4 =  'lognorm'
VDtVR= c(VDts1,VDts2,VDts3,VDts4,VDts5,VDts6,VDts7,VDtg2,VDtg3,VDtg4,VDtg6,VDtp2,VDtp3,VDtf3,VDtf4)
VDtVR_T &lt;- cbind(symsN,VDtVR)


#Variances
Vs1 = VarsSigma[1]
Vs2 = VarsSigma[2]
Vs3 = VarsSigma[3]
Vs4 = VarsSigma[4]
Vs5 = VarsSigma[5]
Vs6 = VarsSigma[6]
Vs7 = VarsSigma[7]
Vg2 = 0.00000
Vg3 = 0.00000
Vg4 = 0.00000
Vg6 = 0.00000
Vp2 = 0.00000
Vp3 = 0.00000
Vf3 = VarsMuOffsp [3]
Vf4 = VarsMuOffsp [4]
VarVR=c(Vs1,Vs2,Vs3,Vs4,Vs5,Vs6,Vs7,Vg2,Vg3,Vg4,Vg6,Vp2,Vp3,Vf3,Vf4)

numvrs &lt;- length(KW.vr)
randvrsBeta &lt;- matrix(NA, nrow=reps, ncol=numvrs)                               # matrix to store random vital rates for Beta
randvrsLN &lt;- matrix(NA, nrow=reps, ncol=numvrs)                                 # matrix to store random vital rates for LN

# BETA vital rates
beta.Ind &lt;- which(VDtVR=="beta")
for (i in beta.Ind) {
    set.seed=pi*pi
    randvrsBeta[,i] &lt;- betarv(m=MeanVR[i], v=VarVR[i], n=reps)                  # arrays of random beta variables with mean and var.
}



# LOG NORMAL vital rates
lognorm.Ind &lt;- which(VDtVR=="lognorm")
for (i in lognorm.Ind) {
    set.seed=pi*pi
    randvrsLN[,i] &lt;- rlnorm(reps, meanlog=log(MeanVR[i]), sdlog=sqrt(VarVR[i]))
    }


#Creating a single matrix of stochstic rates from randvrsBeta and  randvrsLN,
apply(randvrsBeta,2,function(x){!all(is.na(x))})
randvrsBeta&lt;- randvrsBeta[,apply(randvrsBeta,2,function(x){!all(is.na(x))})]
colnames(randvrsBeta)&lt;- subset(VDtVR_T, VDtVR=="beta")[,1]

apply(randvrsLN,2,function(x){!all(is.na(x))})
randvrsLN&lt;- randvrsLN[,apply(randvrsLN,2,function(x){!all(is.na(x))})]
colnames(randvrsLN)&lt;- subset(VDtVR_T, VDtVR=="lognorm")[,1]

StochRates&lt;- cbind(randvrsBeta,randvrsLN)
StochRates&lt;- StochRates[,symsN]                                                 # need to order data frame according to condition

StochRates.df&lt;- as.data.frame(StochRates)

graphics.off()
pdf(StochasticVitalRatesPDF,width=8,height=8)
par( mar=c(2,2,2,2), oma=c(2,2,2,2) )
par (mfrow=c(3,3),yaxt='n')
hist(StochRates.df$Ss1,main='Ss1', xlab="", ylab="")
hist(StochRates.df$Ss2,main='Ss2', xlab="", ylab="")
hist(StochRates.df$Ss3,main='Ss3', xlab="", ylab="")
hist(StochRates.df$Ss4,main='Ss4', xlab="", ylab="")
hist(StochRates.df$Ss5,main='Ss5', xlab="", ylab="")
hist(StochRates.df$Ss6,main='Ss6', xlab="", ylab="")
hist(StochRates.df$Ss7,main='Ss7', xlab="", ylab="")
hist(StochRates.df$Sf3,main='Sf3', xlab="", ylab="")
hist(StochRates.df$Sf4,main='Sf4', xlab="", ylab="" )
 mtext(paste('Stochastic Vital rates for',Population[1]),     side = 3, outer = TRUE, col = "black", cex= 1.2, font = 2)
 mtext (text= "", side=1, outer=TRUE, cex=1., font = 2 )
 mtext (text= " ", side=2,outer=TRUE, cex=1., font = 2 )
dev.off()

# warning how many reps
if (interactive()) {
    dev.new(width=7, height=4)
    plot(rep(0,10)~seq(1,10), ylim=c(0,1),type='l',xlab="", ylab="", col='white', tck=0)
    axis(1, NULL, col.axis = "white",tcl=0)
    axis(2, NULL, col.axis = "white",tcl=0 )
    text(5.3,0.6,  paste("Running Stochastic VR Elasticities for",Population[1],'...'),cex=1.5, col=1)
    text(5.3,0.3,  paste(reps,"Repetitions"),cex=1.5, col=1)
}

#Using POPbio function vitalsens to estimate stochastic elasticities
df.Elast&lt;- as.data.frame(matrix(NA, nrow=reps, ncol=length(KW.vr)))
for (i in 1:reps){
stoch.KW &lt;-vitalsens(KW.el, as.list(StochRates[i,]))
df.Elast[i,]&lt;- stoch.KW$elasticity
}
colnames(df.Elast)&lt;-names(KW.vr)

#Plotting stochastic elasticities
graphics.off()
pdf(StochasticElasticityVRPDF,width=12,height=8)
boxplot(df.Elast, main=paste('Stochastic Elasticity of Vital rates for',Population[1]), ylim=c(0,1), col=rainbow(length(KW.vr)))
legend(9,1, legend=names(KW.vr), lty=0 , lwd= 1.5, cex= 1, bty='n')
legend(10,1, legend= VDtVR,       lty=0 , lwd= 1.5, cex= 1, bty='n')
dev.off()


# Stats median and 95% CI
ElasMean.KW &lt;-apply(df.Elast,2,mean)
ElasMed.KW &lt;- apply(df.Elast,2,median)
ElasMin.KW &lt;- apply(df.Elast,2,min)
ElasMax.KW &lt;- apply(df.Elast,2,max)
ElasQuan.KW&lt;- apply(df.Elast,2,quantile,probs = c(0.05, 0.95))
ElasStats.KW&lt;- rbind(ElasMean.KW,ElasMed.KW,ElasMin.KW,ElasMax.KW,ElasQuan.KW)

write.table(ElasStats.KW, file = StochasticElasticityStats, sep=',', row.names = TRUE, col.names = NA)
cat(paste('Stoch. Elasticity Stats',Population[1]),'(saved in working folder)',"\n");print(ElasStats.KW)

save(list=ls(all.names=FALSE), file=.wsfile)
"RWorkspace"&lt;-.wsfile
</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Sims</name>
      <symanticType>INTEGER</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StartYear</name>
      <symanticType>INTEGER</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>EndYear</name>
      <symanticType>INTEGER</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>VR_combined_csv</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>KWDataFile</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Population</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StableStageProjectionPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>VitalRatesEstimates</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StochasticElasticityStats</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>AliveCSV</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StatsByCategory</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>DampingTime</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StableStateValues</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>CountsAndProportionsT0</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>EffectsOfChangingKWVRsPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>RWorkspace</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StochasticElasticityVRPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>AlivePDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>MeanMatrix</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>EigenAnalysis</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>DetVRsSensitivityElasticityPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StochasticVitalRatesPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>VR_combined_PNG</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>CountsByYear</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Sims" depth="0" /><port name="EndYear" depth="0" /><port name="VR_combined_csv" depth="0" /><port name="KWDataFile" depth="0" /><port name="StartYear" depth="0" /><port name="Population" depth="0" /><port name="RWorkspace" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>KillerWhales_1_8</processor><port>Sims</port></sink><source type="dataflow"><port>Sims</port></source></datalink><datalink><sink type="processor"><processor>KillerWhales_1_8</processor><port>EndYear</port></sink><source type="dataflow"><port>EndYear</port></source></datalink><datalink><sink type="processor"><processor>KillerWhales_1_8</processor><port>VR_combined_csv</port></sink><source type="dataflow"><port>VR_combined_csv</port></source></datalink><datalink><sink type="processor"><processor>KillerWhales_1_8</processor><port>KWDataFile</port></sink><source type="dataflow"><port>KWDataFile</port></source></datalink><datalink><sink type="processor"><processor>KillerWhales_1_8</processor><port>StartYear</port></sink><source type="dataflow"><port>StartYear</port></source></datalink><datalink><sink type="processor"><processor>KillerWhales_1_8</processor><port>Population</port></sink><source type="dataflow"><port>Population</port></source></datalink><datalink><sink type="processor"><processor>KillerWhales_1_8</processor><port>RWorkspace</port></sink><source type="processor"><processor>MonsterCave</processor><port>RWorkspace</port></source></datalink><datalink><sink type="dataflow"><port>StableStageProjectionPDF</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>StableStageProjectionPDF</port></source></datalink><datalink><sink type="dataflow"><port>EigenAnalysis</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>EigenAnalysis</port></source></datalink><datalink><sink type="dataflow"><port>EffectsOfChangingKWVRsPDF</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>EffectsOfChangingKWVRsPDF</port></source></datalink><datalink><sink type="dataflow"><port>VitalRatesEstimates</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>VitalRatesEstimates</port></source></datalink><datalink><sink type="dataflow"><port>StochasticElasticityVRPDF</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>StochasticElasticityVRPDF</port></source></datalink><datalink><sink type="dataflow"><port>StochasticElasticityStats</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>StochasticElasticityStats</port></source></datalink><datalink><sink type="dataflow"><port>AliveCSV</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>AliveCSV</port></source></datalink><datalink><sink type="dataflow"><port>MeanMatrix</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>MeanMatrix</port></source></datalink><datalink><sink type="dataflow"><port>AlivePDF</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>AlivePDF</port></source></datalink><datalink><sink type="dataflow"><port>StatsByCategory</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>StatsByCategory</port></source></datalink><datalink><sink type="dataflow"><port>DampingTime</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>DampingTime</port></source></datalink><datalink><sink type="dataflow"><port>StableStateValues</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>StableStateValues</port></source></datalink><datalink><sink type="dataflow"><port>DetVRsSensitivityElasticityPDF</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>DetVRsSensitivityElasticityPDF</port></source></datalink><datalink><sink type="dataflow"><port>StochasticVitalRatesPDF</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>StochasticVitalRatesPDF</port></source></datalink><datalink><sink type="dataflow"><port>VR_combined_PNG</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>VR_combined_PNG</port></source></datalink><datalink><sink type="dataflow"><port>CountsByYear</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>CountsByYear</port></source></datalink><datalink><sink type="dataflow"><port>CountsAndProportionsT0</port></sink><source type="processor"><processor>KillerWhales_1_8</processor><port>CountsAndProportionsT0</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow analyses the demography and population viability analysis (PVA) of endangered SRKW and threatened NRKW. Two distinct populations of resident killer whales (Orcinus orca) in the north-eastern Pacific Ocean have been listed in Canada and the U.S. as of conservation concern. The Southern Resident Killer Whale (SRKW) population is currently listed as endangered in both countries. The Northern Resident Killer Whale (NRKW) population has been listed as threatened in Canada.

This workflow can be used to analyse the demography and extinction probability of other killer whales populations. See necessary input data.

This workflow requires an instance of Rserve on localhost.

This workflow uses R packages popbio, lattice, betareg, Formula and R.utils.

This workflow has been created by the Biodiversity Virtual e-Laboratory (BioVeL http://www.biovel.eu/) project and Fisheries and Oceans of Canada, BC, Canada. (http://www.pac.dfo-mpo.gc.ca/index-eng.html). BioVeL is funded by the EUâ€™s Seventh Framework Program, grant no. 283359.

References:

VÃ©lez-Espino, L.A., Ford, J.K.B., Araujo, H.A., Ellis, G., Parken, C.K., and Balcomb, K.C. 2013a. Comparative demography and viability of northeast Pacific resident killer whale populations at risk. Biological Conservation BIOC-S-13-00856. In press.
</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>692aca7b-f0d5-46ca-9249-a7b5405a523c</identification>
      </annotationBean>
      <date>2014-08-15 09:49:14.600 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>67e5c6e2-11e8-46fb-a702-5a9aaa67f571</identification>
      </annotationBean>
      <date>2014-09-09 08:47:13.763 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>Resident killer whale population dynamics: sensitivity to Chinook salmon abundance 2014-07-02</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7eb250b2-c952-48ea-9678-78bf6dac82b6</identification>
      </annotationBean>
      <date>2014-09-09 08:52:31.778 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>L. Antonio VÃ©lez-Espino, H. Andres Araujo and Maria Paula Balcazar-Vargas</text>
      </annotationBean>
      <date>2013-11-27 14:27:50.10 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>2444a976-fa63-4f8a-8d20-6b28d542ba04</identification>
      </annotationBean>
      <date>2014-09-09 08:45:40.70 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>cf1f594e-c1ac-4035-b43f-52f0849c64ba</identification>
      </annotationBean>
      <date>2014-09-09 08:52:22.627 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="08863eb6-933d-4f31-b809-f59f7abc8b66" role="nested"><name>Workflow16</name><inputPorts><port><name>AliveCSV</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>AlivePDF</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>CountsByYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>CountsAndProportionsT0</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>DampingTime</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>DetVRsSensitivityElasticityPDF</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>EffectsOfChangingKWVRsPDF</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>MeanMatrix</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StableStageProjectionPDF</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StableStateValues</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StatsByCategory</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StochasticElasticityStats</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StochasticElasticityVRPDF</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StochasticVitalRatesPDF</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>VitalRatesEstimates</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>VR_combined_PNG</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>Population</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>StartYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>EndYear</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>EigenAnalysis</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>zipFile</name><lastPredictedDepth>0</lastPredictedDepth><annotations /></port></outputPorts><processors><processor><name>save_results_and_rename_files</name><inputPorts><port><name>EndYear</name><depth>0</depth></port><port><name>StartYear</name><depth>0</depth></port><port><name>Population</name><depth>0</depth></port><port><name>VR_combined_PNG</name><depth>0</depth></port><port><name>VitalRatesEstimates</name><depth>0</depth></port><port><name>StochasticVitalRatesPDF</name><depth>0</depth></port><port><name>StochasticElasticityVRPDF</name><depth>0</depth></port><port><name>StochasticElasticityStats</name><depth>0</depth></port><port><name>StatsByCategory</name><depth>0</depth></port><port><name>StableStateValues</name><depth>0</depth></port><port><name>StableStageProjectionPDF</name><depth>0</depth></port><port><name>MeanMatrix</name><depth>0</depth></port><port><name>EffectsOfChangingKWVRsPDF</name><depth>0</depth></port><port><name>DetVRsSensitivityElasticityPDF</name><depth>0</depth></port><port><name>DampingTime</name><depth>0</depth></port><port><name>AlivePDF</name><depth>0</depth></port><port><name>AliveCSV</name><depth>0</depth></port><port><name>CountsAndProportionsT0</name><depth>0</depth></port><port><name>CountsByYear</name><depth>0</depth></port><port><name>EigenAnalysis</name><depth>0</depth></port><port><name>resultsFolder</name><depth>0</depth></port></inputPorts><outputPorts><port><name>pathFolderResults</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>rshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.rshell.RshellActivity</class><inputMap><map from="StochasticElasticityStats" to="StochasticElasticityStats" /><map from="StochasticVitalRatesPDF" to="StochasticVitalRatesPDF" /><map from="AliveCSV" to="AliveCSV" /><map from="DetVRsSensitivityElasticityPDF" to="DetVRsSensitivityElasticityPDF" /><map from="EffectsOfChangingKWVRsPDF" to="EffectsOfChangingKWVRsPDF" /><map from="CountsByYear" to="CountsByYear" /><map from="CountsAndProportionsT0" to="CountsAndProportionsT0" /><map from="AlivePDF" to="AlivePDF" /><map from="MeanMatrix" to="MeanMatrix" /><map from="StableStateValues" to="StableStateValues" /><map from="DampingTime" to="DampingTime" /><map from="VR_combined_PNG" to="VR_combined_PNG" /><map from="StartYear" to="StartYear" /><map from="StochasticElasticityVRPDF" to="StochasticElasticityVRPDF" /><map from="resultsFolder" to="resultsFolder" /><map from="Population" to="Population" /><map from="EndYear" to="EndYear" /><map from="VitalRatesEstimates" to="VitalRatesEstimates" /><map from="EigenAnalysis" to="EigenAnalysis" /><map from="StatsByCategory" to="StatsByCategory" /><map from="StableStageProjectionPDF" to="StableStageProjectionPDF" /></inputMap><outputMap><map from="pathFolderResults" to="pathFolderResults" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StableStageProjectionPDF</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>VitalRatesEstimates</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StochasticElasticityStats</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>AliveCSV</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StatsByCategory</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>DampingTime</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StableStateValues</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>CountsAndProportionsT0</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>EffectsOfChangingKWVRsPDF</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StochasticElasticityVRPDF</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>AlivePDF</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>MeanMatrix</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>EigenAnalysis</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>DetVRsSensitivityElasticityPDF</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StochasticVitalRatesPDF</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>VR_combined_PNG</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>CountsByYear</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>EndYear</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>StartYear</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>Population</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>resultsFolder</name>
      <depth>0</depth>
      <allowsLiteralValues>false</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>pathFolderResults</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <rVersion>false</rVersion>
  <script>
pathFolderResults &lt;- normalizePath(resultsFolder)

# Save results to files
tempAliveCSV &lt;- paste("Alive ",EndYear," ",Population,".csv",sep="")
file.copy(AliveCSV, paste(pathFolderResults,tempAliveCSV,sep="/"))

tempAlivePDF &lt;- paste("Alive ",EndYear," ",Population,".pdf",sep="")
file.copy(AlivePDF, paste(pathFolderResults,tempAlivePDF,sep="/"))

tempCountsByYear &lt;- paste("Counts by Year ",Population," ",StartYear,"-",EndYear,".csv",sep="")
file.copy(CountsByYear, paste(pathFolderResults,tempCountsByYear,sep="/"))

tempCountsAndProportionsT0 &lt;- paste("Counts and Proportions T0 ",Population," ",StartYear,"-",EndYear,".csv",sep="")
file.copy(CountsAndProportionsT0, paste(pathFolderResults,tempCountsAndProportionsT0,sep="/"))

tempDampingTime &lt;- paste("Damping Time ",Population," ",StartYear,"-",EndYear,".txt",sep="")
file.copy(DampingTime, paste(pathFolderResults,tempDampingTime,sep="/"))

tempDetVRsSensitivityElasticityPDF &lt;- paste("Det. VRs Sensitivity and Elasticity ",Population," ",StartYear,"-",EndYear,".pdf",sep="")
file.copy(DetVRsSensitivityElasticityPDF, paste(pathFolderResults,tempDetVRsSensitivityElasticityPDF,sep="/"))

tempEffectsOfChangingKWVRsPDF &lt;- paste("Effects of changing KW VRs ",Population," ",StartYear,"-",EndYear,".pdf",sep="")
file.copy(EffectsOfChangingKWVRsPDF, paste(pathFolderResults,tempEffectsOfChangingKWVRsPDF,sep="/"))

tempEigenAnalysis &lt;- paste("Eigen Analysis",".txt",sep="")
file.copy(EigenAnalysis, paste(pathFolderResults,tempEigenAnalysis,sep="/"))

tempMeanMatrix &lt;- paste("MeanMatrix ",Population,".csv",sep="")
file.copy(MeanMatrix, paste(pathFolderResults,tempMeanMatrix,sep="/"))

tempStableStageProjectionPDF &lt;- paste("Stable Stage Projection ",Population," ",StartYear,"-",EndYear,".pdf",sep="")
file.copy(StableStageProjectionPDF, paste(pathFolderResults,tempStableStageProjectionPDF,sep="/"))

tempStableStateValues &lt;- paste("Stable State Values ",Population," ",StartYear,"-",EndYear,".csv",sep="")
file.copy(StableStateValues, paste(pathFolderResults,tempStableStateValues,sep="/"))

tempStatsByCategory &lt;- paste("Stats by Category ",Population," ",StartYear,"-",EndYear,".csv",sep="")
file.copy(StatsByCategory, paste(pathFolderResults,tempStatsByCategory,sep="/"))

tempStochasticElasticityStats &lt;- paste("Stochastic Elasticity Stats ",Population,".csv",sep="")
file.copy(StochasticElasticityStats, paste(pathFolderResults,tempStochasticElasticityStats,sep="/"))

tempStochasticElasticityVRPDF &lt;- paste("Stochastic Elasticity of VR ",Population,".pdf",sep="")
file.copy(StochasticElasticityVRPDF, paste(pathFolderResults,tempStochasticElasticityVRPDF,sep="/"))

tempStochasticVitalRatesPDF &lt;- paste("Stochastic Vital Rates ",Population,".pdf",sep="")
file.copy(StochasticVitalRatesPDF, paste(pathFolderResults,tempStochasticVitalRatesPDF,sep="/"))

tempVitalRatesEstimates &lt;- paste("Vital rates estimates ",Population," ",StartYear,"-",EndYear,".csv",sep="")
file.copy(VitalRatesEstimates, paste(pathFolderResults,tempVitalRatesEstimates,sep="/"))

tempVR_combined_PNG &lt;- paste("VR_combined",".png",sep="")
file.copy(VR_combined_PNG, paste(pathFolderResults,tempVR_combined_PNG,sep="/"))
</script>
  <connectionSettings>
    <host>localhost</host>
    <port>6311</port>
    <keepSessionAlive>false</keepSessionAlive>
    <newRVersion>false</newRVersion>
  </connectionSettings>
  <inputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StableStageProjectionPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>VitalRatesEstimates</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StochasticElasticityStats</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>AliveCSV</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StatsByCategory</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>DampingTime</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StableStateValues</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>CountsAndProportionsT0</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>EffectsOfChangingKWVRsPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StochasticElasticityVRPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>AlivePDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>MeanMatrix</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>EigenAnalysis</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>DetVRsSensitivityElasticityPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StochasticVitalRatesPDF</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>VR_combined_PNG</name>
      <symanticType>PNG_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>CountsByYear</name>
      <symanticType>TEXT_FILE</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>EndYear</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>StartYear</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>Population</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>resultsFolder</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </inputSymanticTypes>
  <outputSymanticTypes>
    <net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
      <name>pathFolderResults</name>
      <symanticType>STRING</symanticType>
    </net.sf.taverna.t2.activities.rshell.RShellPortSymanticTypeBean>
  </outputSymanticTypes>
</net.sf.taverna.t2.activities.rshell.RshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="EndYear" depth="0" /><port name="StartYear" depth="0" /><port name="Population" depth="0" /><port name="VR_combined_PNG" depth="0" /><port name="VitalRatesEstimates" depth="0" /><port name="StochasticVitalRatesPDF" depth="0" /><port name="StochasticElasticityVRPDF" depth="0" /><port name="StochasticElasticityStats" depth="0" /><port name="StatsByCategory" depth="0" /><port name="StableStateValues" depth="0" /><port name="StableStageProjectionPDF" depth="0" /><port name="MeanMatrix" depth="0" /><port name="EffectsOfChangingKWVRsPDF" depth="0" /><port name="DetVRsSensitivityElasticityPDF" depth="0" /><port name="DampingTime" depth="0" /><port name="AlivePDF" depth="0" /><port name="AliveCSV" depth="0" /><port name="CountsAndProportionsT0" depth="0" /><port name="CountsByYear" depth="0" /><port name="EigenAnalysis" depth="0" /><port name="resultsFolder" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>create_zip_File</name><inputPorts><port><name>pathFolderResults</name><depth>0</depth></port></inputPorts><outputPorts><port><name>zipFile</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="pathFolderResults" to="pathFolderResults" /></inputMap><outputMap><map from="zipFile" to="zipFile" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>pathFolderResults</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>zipFile</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

//Create zip file
File zipDir = new File(pathFolderResults);

File zipFile = File.createTempFile(zipDir.getName(), ".zip");
FileOutputStream fos = new FileOutputStream(zipFile,true);
ZipOutputStream zos = new ZipOutputStream(fos);

File[] fileList = zipDir.listFiles();
for (File file : fileList) {
		FileInputStream fis = new FileInputStream(file);

		String zipFilePath = zipDir.toURI().relativize(file.toURI()).getPath();
		ZipEntry zipEntry = new ZipEntry(zipFilePath);
		zos.putNextEntry(zipEntry);

		byte[] bytes = new byte[1024];
		int length;
		while ((length = fis.read(bytes)) &gt;= 0) {
			zos.write(bytes, 0, length);
		}

		zos.closeEntry();
		fis.close();
}

zos.close();
fos.close();


//Delete results folder
for (File file : fileList) {
 file.delete();
}
zipDir.delete();</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="pathFolderResults" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>create_results_folder</name><inputPorts /><outputPorts><port><name>resultsFolder</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap /><outputMap><map from="resultsFolder" to="resultsFolder" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs />
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>resultsFolder</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>import java.io.File;
import java.lang.System;
import java.util.UUID;

File sysTempDir = new File(System.getProperty("java.io.tmpdir"));
String dirName = "killerWhalesResults_" + UUID.randomUUID().toString();
File newTempDir = new File(sysTempDir, dirName);
         
newTempDir.mkdir();

//Set folder permissions
//newTempDir.setExecutable(true, false);
newTempDir.setReadable(true, false);
newTempDir.setWritable(true, false);


resultsFolder = newTempDir.getCanonicalPath();</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.5</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>EndYear</port></sink><source type="dataflow"><port>EndYear</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StartYear</port></sink><source type="dataflow"><port>StartYear</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>Population</port></sink><source type="dataflow"><port>Population</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>VR_combined_PNG</port></sink><source type="dataflow"><port>VR_combined_PNG</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>VitalRatesEstimates</port></sink><source type="dataflow"><port>VitalRatesEstimates</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StochasticVitalRatesPDF</port></sink><source type="dataflow"><port>StochasticVitalRatesPDF</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StochasticElasticityVRPDF</port></sink><source type="dataflow"><port>StochasticElasticityVRPDF</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StochasticElasticityStats</port></sink><source type="dataflow"><port>StochasticElasticityStats</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StatsByCategory</port></sink><source type="dataflow"><port>StatsByCategory</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StableStateValues</port></sink><source type="dataflow"><port>StableStateValues</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>StableStageProjectionPDF</port></sink><source type="dataflow"><port>StableStageProjectionPDF</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>MeanMatrix</port></sink><source type="dataflow"><port>MeanMatrix</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>EffectsOfChangingKWVRsPDF</port></sink><source type="dataflow"><port>EffectsOfChangingKWVRsPDF</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>DetVRsSensitivityElasticityPDF</port></sink><source type="dataflow"><port>DetVRsSensitivityElasticityPDF</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>DampingTime</port></sink><source type="dataflow"><port>DampingTime</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>AlivePDF</port></sink><source type="dataflow"><port>AlivePDF</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>AliveCSV</port></sink><source type="dataflow"><port>AliveCSV</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>CountsAndProportionsT0</port></sink><source type="dataflow"><port>CountsAndProportionsT0</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>CountsByYear</port></sink><source type="dataflow"><port>CountsByYear</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>EigenAnalysis</port></sink><source type="dataflow"><port>EigenAnalysis</port></source></datalink><datalink><sink type="processor"><processor>save_results_and_rename_files</processor><port>resultsFolder</port></sink><source type="processor"><processor>create_results_folder</processor><port>resultsFolder</port></source></datalink><datalink><sink type="processor"><processor>create_zip_File</processor><port>pathFolderResults</port></sink><source type="processor"><processor>save_results_and_rename_files</processor><port>pathFolderResults</port></source></datalink><datalink><sink type="dataflow"><port>zipFile</port></sink><source type="processor"><processor>create_zip_File</processor><port>zipFile</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>351fa57a-1579-4996-9914-496cfb709a65</identification>
      </annotationBean>
      <date>2014-09-18 09:24:26.945 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>1160f631-ac10-4612-bd6e-7f8f39abe8a5</identification>
      </annotationBean>
      <date>2014-09-18 08:24:46.971 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>50ea4a05-0ccf-41de-8f84-cf60c99ac096</identification>
      </annotationBean>
      <date>2014-09-18 10:12:48.712 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e776da44-4b55-4366-9afc-b88992adb323</identification>
      </annotationBean>
      <date>2014-09-18 09:32:12.571 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>55874747-5fd5-498b-a52d-814448e8c7fd</identification>
      </annotationBean>
      <date>2014-09-18 10:17:27.341 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>bab6f4cd-2a1d-40fd-b23d-5781a82b5b3b</identification>
      </annotationBean>
      <date>2014-09-18 08:36:41.641 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e02fe129-70ae-41d4-a1a8-5371733d6b2c</identification>
      </annotationBean>
      <date>2014-09-18 08:19:58.510 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>f6a338ef-212b-4f1d-a0d6-c838b61db948</identification>
      </annotationBean>
      <date>2014-09-18 10:45:29.902 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>eaf71d98-e7aa-4c2c-8da1-61a654053854</identification>
      </annotationBean>
      <date>2014-09-18 08:31:47.794 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>a3223e77-07bf-42e0-81a1-edd1c7135301</identification>
      </annotationBean>
      <date>2014-09-18 10:28:58.537 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>cb6f468d-bc17-4bbe-8e87-d49e347b673d</identification>
      </annotationBean>
      <date>2014-09-15 10:31:38.150 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>27ba098a-df54-4d42-9ca9-a39ff5c40e0a</identification>
      </annotationBean>
      <date>2014-09-18 09:11:25.862 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0599015f-c422-4b5c-947a-41bfc1d7e169</identification>
      </annotationBean>
      <date>2014-09-15 10:40:02.653 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>e8da52c6-f368-494e-b010-fe712950d075</identification>
      </annotationBean>
      <date>2014-09-15 10:46:52.995 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>028214aa-a2b4-4608-95ab-16fcf319460a</identification>
      </annotationBean>
      <date>2014-09-18 08:56:24.246 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>6fc9f64c-b1d7-4db0-860d-f96d9bc1e50e</identification>
      </annotationBean>
      <date>2014-09-18 10:12:22.638 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>08863eb6-933d-4f31-b809-f59f7abc8b66</identification>
      </annotationBean>
      <date>2014-09-18 10:49:40.790 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0fba2348-4b1d-4b06-a923-80e1d796a633</identification>
      </annotationBean>
      <date>2014-09-18 09:26:37.713 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>7edc7ed2-4868-474a-be12-c38124fa36f7</identification>
      </annotationBean>
      <date>2014-09-18 09:16:13.519 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>960680cd-6a97-4c36-bb88-f55a66185567</identification>
      </annotationBean>
      <date>2014-09-18 08:22:42.396 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
        <identification>0cbf02fb-2b10-4f15-bcc3-bb57208d4ec6</identification>
      </annotationBean>
      <date>2014-09-18 10:34:49.458 UTC</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow></workflow>