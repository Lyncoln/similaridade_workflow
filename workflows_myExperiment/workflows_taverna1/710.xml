<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:577d5a78-f733-4751-ac9d-94daef4ba265" author="Paul Fisher" title="Get relations">This workflow gets all the realtions from a given Ondex graph</s:workflowdescription>
  <s:processor name="getRelations">
    <s:arbitrarywsdl>
<s:wsdl>http://rpc274.cs.man.ac.uk:8080/ondex/services/ondex-graph?wsdl</s:wsdl>
      <s:operation>getRelations</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="parametersXML">
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="getRelations" name="parameters" qname="{http://webservice.ondex.sourceforge.net/}getRelations">
          <s:elements>
            <s:basetype optional="true" unbounded="false" typename="long" name="graphId" qname="getRelations&gt;graphId" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="parametersXML1">
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLOutputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="getRelationsResponse" name="parameters" qname="{http://webservice.ondex.sourceforge.net/}getRelationsResponse">
          <s:elements>
            <s:arraytype optional="true" unbounded="true" wrapped="false" typename="wsRelation" name="relations" qname="getRelationsResponse&gt;relations">
              <s:elementtype>
                <s:complextype optional="false" unbounded="false" typename="wsRelation" name="" qname="{http://webservice.ondex.sourceforge.net/}wsRelation">
                  <s:elements>
                    <s:complextype optional="true" unbounded="false" typename="wsConcept" name="fromConcept" qname="wsRelation&gt;fromConcept">
                      <s:elements>
                        <s:basetype optional="true" unbounded="false" typename="string" name="annotation" qname="wsConcept&gt;annotation" />
                        <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wsConcept&gt;description" />
                        <s:complextype optional="true" unbounded="false" typename="wscv" name="elementOf" qname="wsConcept&gt;elementOf">
                          <s:elements>
                            <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wscv&gt;description" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="fullname" qname="wscv&gt;fullname" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="id" qname="wscv&gt;id" />
                          </s:elements>
                        </s:complextype>
                        <s:basetype optional="true" unbounded="false" typename="int" name="id" qname="wsConcept&gt;id" />
                        <s:complextype optional="true" unbounded="false" typename="wsConceptClass" name="ofType" qname="wsConcept&gt;ofType">
                          <s:elements>
                            <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wsConceptClass&gt;description" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="fullname" qname="wsConceptClass&gt;fullname" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="id" qname="wsConceptClass&gt;id" />
                            <s:complextype optional="true" unbounded="false" typename="wsConceptClass" name="specialisationOf" qname="wsConceptClass&gt;specialisationOf">
                              <s:elements>
                                <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wsConceptClass&gt;description" />
                                <s:basetype optional="true" unbounded="false" typename="string" name="fullname" qname="wsConceptClass&gt;fullname" />
                                <s:basetype optional="true" unbounded="false" typename="string" name="id" qname="wsConceptClass&gt;id" />
                                <s:complextype id="wsConceptClass&gt;specialisationOf" optional="true" unbounded="false" typename="wsConceptClass" name="specialisationOf" />
                              </s:elements>
                            </s:complextype>
                          </s:elements>
                        </s:complextype>
                      </s:elements>
                    </s:complextype>
                    <s:basetype optional="true" unbounded="false" typename="int" name="id" qname="wsRelation&gt;id" />
                    <s:complextype optional="true" unbounded="false" typename="wsRelationType" name="ofType" qname="wsRelation&gt;ofType">
                      <s:elements>
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="antisymmetric" qname="wsRelationType&gt;antisymmetric" />
                        <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wsRelationType&gt;description" />
                        <s:basetype optional="true" unbounded="false" typename="string" name="fullname" qname="wsRelationType&gt;fullname" />
                        <s:basetype optional="true" unbounded="false" typename="string" name="id" qname="wsRelationType&gt;id" />
                        <s:basetype optional="true" unbounded="false" typename="string" name="inverseName" qname="wsRelationType&gt;inverseName" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="reflexive" qname="wsRelationType&gt;reflexive" />
                        <s:complextype optional="true" unbounded="false" typename="wsRelationType" name="specialisationOf" qname="wsRelationType&gt;specialisationOf">
                          <s:elements>
                            <s:basetype optional="false" unbounded="false" typename="boolean" name="antisymmetric" qname="wsRelationType&gt;antisymmetric" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wsRelationType&gt;description" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="fullname" qname="wsRelationType&gt;fullname" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="id" qname="wsRelationType&gt;id" />
                            <s:basetype optional="true" unbounded="false" typename="string" name="inverseName" qname="wsRelationType&gt;inverseName" />
                            <s:basetype optional="false" unbounded="false" typename="boolean" name="reflexive" qname="wsRelationType&gt;reflexive" />
                            <s:complextype id="wsRelationType&gt;specialisationOf" optional="true" unbounded="false" typename="wsRelationType" name="specialisationOf" />
                            <s:basetype optional="false" unbounded="false" typename="boolean" name="symmetric" qname="wsRelationType&gt;symmetric" />
                            <s:basetype optional="false" unbounded="false" typename="boolean" name="transitiv" qname="wsRelationType&gt;transitiv" />
                          </s:elements>
                        </s:complextype>
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="symmetric" qname="wsRelationType&gt;symmetric" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="transitiv" qname="wsRelationType&gt;transitiv" />
                      </s:elements>
                    </s:complextype>
                    <s:complextype optional="true" unbounded="false" typename="wsConcept" name="qualifier" qname="wsRelation&gt;qualifier">
                      <s:elements>
                        <s:basetype optional="true" unbounded="false" typename="string" name="annotation" qname="wsConcept&gt;annotation" />
                        <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wsConcept&gt;description" />
                        <s:complextype id="wsConcept&gt;elementOf" optional="true" unbounded="false" typename="wscv" name="elementOf" />
                        <s:basetype optional="true" unbounded="false" typename="int" name="id" qname="wsConcept&gt;id" />
                        <s:complextype id="wsConcept&gt;ofType" optional="true" unbounded="false" typename="wsConceptClass" name="ofType" />
                      </s:elements>
                    </s:complextype>
                    <s:complextype optional="true" unbounded="false" typename="wsConcept" name="toConcept" qname="wsRelation&gt;toConcept">
                      <s:elements>
                        <s:basetype optional="true" unbounded="false" typename="string" name="annotation" qname="wsConcept&gt;annotation" />
                        <s:basetype optional="true" unbounded="false" typename="string" name="description" qname="wsConcept&gt;description" />
                        <s:complextype id="wsConcept&gt;elementOf" optional="true" unbounded="false" typename="wscv" name="elementOf" />
                        <s:basetype optional="true" unbounded="false" typename="int" name="id" qname="wsConcept&gt;id" />
                        <s:complextype id="wsConcept&gt;ofType" optional="true" unbounded="false" typename="wsConceptClass" name="ofType" />
                      </s:elements>
                    </s:complextype>
                  </s:elements>
                </s:complextype>
              </s:elementtype>
            </s:arraytype>
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:link source="getRelations:parameters" sink="parametersXML1:input" />
  <s:link source="graphId" sink="parametersXML:graphId" />
  <s:link source="parametersXML1:relations" sink="relations" />
  <s:link source="parametersXML:output" sink="getRelations:parameters" />
  <s:source name="graphId" />
  <s:sink name="relations" />
</s:scufl>

