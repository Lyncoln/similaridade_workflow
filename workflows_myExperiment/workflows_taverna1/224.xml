<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:45f03eb6-c31a-4ebe-9b61-398685e28502" author="Hamish McWilliam" title="EBI_MaxSprout">Generation of protein backbone and side chain co-ordinates from a C(alpha) trace using the MaxSprout tool. The EBI's WSMaxsprout service (see http://www.ebi.ac.uk/Tools/webservices/services/maxsprout) is used to access the tool.</s:workflowdescription>
  <s:processor name="Contents_list">
    <s:description>Wrap input data in list.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:arraytype optional="false" unbounded="false" wrapped="false" typename="WSArrayofData" name="content" qname="{http://www.ebi.ac.uk/WSMaxsprout}WSArrayofData">
          <s:elementtype>
            <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSMaxsprout}data">
              <s:elements>
                <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
              </s:elements>
            </s:complextype>
          </s:elementtype>
        </s:arraytype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="Input_data">
    <s:description>Add type to input data.</s:description>
    <s:defaults>
      <s:default name="type">sequence</s:default>
    </s:defaults>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSMaxsprout}data">
          <s:elements>
            <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
            <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="Job_params">
    <s:description>Parameters for job.</s:description>
    <s:defaults>
      <s:default name="async">1</s:default>
    </s:defaults>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="inputParams" name="params" qname="{http://www.ebi.ac.uk/WSMaxsprout}inputParams">
          <s:elements>
            <s:basetype optional="false" unbounded="false" typename="string" name="sequence" qname="inputParams&gt;sequence" />
            <s:basetype optional="false" unbounded="false" typename="boolean" name="async" qname="inputParams&gt;async" />
            <s:basetype optional="false" unbounded="false" typename="string" name="email" qname="inputParams&gt;email" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="Unpack_result">
    <s:description>Unpack byte[] into string.</s:description>
    <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
  </s:processor>
  <s:processor name="runMaxsprout">
    <s:description>Submit a MaxSprout job (see http://www.ebi.ac.uk/Tools/webservices/services/maxsprout#runmaxsprout_params_content)</s:description>
    <s:arbitrarywsdl>
      <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSMaxsprout.wsdl</s:wsdl>
      <s:operation>runMaxsprout</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="EBI_MaxSprout_poll_job">
    <s:description>Check job status. Fails if not done.</s:description>
    <s:workflow maxretries="100" retrydelay="5000">
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:a0b2fd97-a106-4b23-9e6a-f232bc882786" author="" title="EBI_MaxSprout_poll_job" />
        <s:processor name="Success">
          <s:local critical="true">org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
        </s:processor>
        <s:processor name="Is_done">
          <s:beanshell>
            <s:scriptvalue>if(job_status.equals("DONE")) {
  is_done = "true";
} else {
  is_done = "false";
}</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">job_status</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">is_done</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
        </s:processor>
        <s:processor name="checkStatus">
          <s:description>Get the status of a submited job (see http://www.ebi.ac.uk/Tools/webservices/services/maxsprout#checkstatus_jobid)</s:description>
          <s:arbitrarywsdl>
            <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSMaxsprout.wsdl</s:wsdl>
            <s:operation>checkStatus</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:link source="Job_ID" sink="checkStatus:jobid" />
        <s:link source="Is_done:is_done" sink="Success:test" />
        <s:link source="checkStatus:status" sink="Is_done:job_status" />
        <s:link source="checkStatus:status" sink="Job_status" />
        <s:source name="Job_ID" />
        <s:sink name="Job_status" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Get_result">
    <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/maxsprout#poll_jobid_type)</s:description>
    <s:defaults>
      <s:default name="type">tooloutput</s:default>
    </s:defaults>
    <s:arbitrarywsdl>
      <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSMaxsprout.wsdl</s:wsdl>
      <s:operation>poll</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="Structure_or_ID">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:70d8a2a8-a369-4824-879d-dbfa36fcecc8" author="Hamish McWilliam" title="Structure_or_ID">Given a structure or structure entry identifer (e.g. PDB:1crn), return the structure in PDB format.

If a structure identifier, in database:identifier format, is input the EBI's WSDbfetch web service (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch) is used to retrive the structure in PDB format. Otherwise the input is assumed to be a formated structure and is passed through to the output.</s:workflowdescription>
        <s:processor name="Fail_if_identifer">
          <s:description>Fails if the workflow input is an identifier (i.e. is an actual structure).</s:description>
          <s:local>org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
        </s:processor>
        <s:processor name="Fail_if_structure">
          <s:description>Fails if the workflow input was a structure (i.e. is an identifer).</s:description>
          <s:local>org.embl.ebi.escience.scuflworkers.java.FailIfTrue</s:local>
        </s:processor>
        <s:processor name="Is_structure">
          <s:description>Return true if the input is a structure or false if the input is a structure identifer (e.g. PDB:1crn).</s:description>
          <s:beanshell>
            <s:scriptvalue>lineLen = structure.indexOf("\n");
if(lineLen &lt; 1) {
  lineLen = structure.length();
}
if(!structure.startsWith("ID ") &amp;&amp;
   structure.indexOf(":") &gt; 0 &amp;&amp;
   structure.indexOf(":") &lt; lineLen) {
  is_structure = "false";
} else {
  is_structure = "true";
}</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">structure</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">is_structure</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
        </s:processor>
        <s:processor name="fetchData">
          <s:description>Fetch the structure in PDB format from the identifer using EBI's WSDbfetch service (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch).</s:description>
          <s:defaults>
            <s:default name="format">pdb</s:default>
            <s:default name="style">raw</s:default>
          </s:defaults>
          <s:arbitrarywsdl>
            <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSDbfetch.wsdl</s:wsdl>
            <s:operation>fetchData</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:processor name="Use_structure">
          <s:description>Pass the input structure to the output.</s:description>
          <s:beanshell>
            <s:scriptvalue>out_structure = in_structure;</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">in_structure</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">out_structure</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
        </s:processor>
        <s:link source="Structure_or_ID" sink="Is_structure:structure" />
        <s:link source="Structure_or_ID" sink="fetchData:query" />
        <s:link source="Is_structure:is_structure" sink="Fail_if_identifer:test" />
        <s:link source="Is_structure:is_structure" sink="Fail_if_structure:test" />
        <s:link source="Structure_or_ID" sink="Use_structure:in_structure" />
        <s:link source="Use_structure:out_structure" sink="Structure" />
        <s:link source="fetchData:fetchDataReturn" sink="Structure" />
        <s:source name="Structure_or_ID">
          <s:metadata>
            <s:description>Either a atructure in PDB format or a PDB entry identifer in database:identifier format (e.g. PDB:1crn).</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="Structure">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>chemical/x-pdb</s:mimeType>
            </s:mimeTypes>
            <s:description>Structure in PDB format.</s:description>
          </s:metadata>
        </s:sink>
        <s:coordination name="fetchData_BLOCKON_Fail_if_sequence">
          <s:condition>
            <s:state>Completed</s:state>
            <s:target>Fail_if_structure</s:target>
          </s:condition>
          <s:action>
            <s:target>fetchData</s:target>
            <s:statechange>
              <s:from>Scheduled</s:from>
              <s:to>Running</s:to>
            </s:statechange>
          </s:action>
        </s:coordination>
        <s:coordination name="Use_structure_BLOCKON_Fail_if_identifer">
          <s:condition>
            <s:state>Completed</s:state>
            <s:target>Fail_if_identifer</s:target>
          </s:condition>
          <s:action>
            <s:target>Use_structure</s:target>
            <s:statechange>
              <s:from>Scheduled</s:from>
              <s:to>Running</s:to>
            </s:statechange>
          </s:action>
        </s:coordination>
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:link source="Contents_list:output" sink="runMaxsprout:content" />
  <s:link source="Email_address" sink="Job_params:email" />
  <s:link source="Get_result:output" sink="Unpack_result:bytes" />
  <s:link source="Input_data:output" sink="Contents_list:WSArrayofData" />
  <s:link source="Job_params:output" sink="runMaxsprout:params" />
  <s:link source="Structure_or_ID" sink="Structure_or_ID:Structure_or_ID" />
  <s:link source="Structure_or_ID:Structure" sink="Input_data:content" />
  <s:link source="Structure_or_ID:Structure" sink="Input_structure" />
  <s:link source="Unpack_result:string" sink="MaxSprout_result" />
  <s:link source="runMaxsprout:jobid" sink="EBI_MaxSprout_poll_job:Job_ID" />
  <s:link source="runMaxsprout:jobid" sink="Get_result:jobid" />
  <s:source name="Structure_or_ID">
    <s:metadata>
      <s:description>Input C(alpha) trace in PDB format. Either the actual structure data or an entry identifier in database:identifier format (e.g. PDB:1crn.).</s:description>
    </s:metadata>
  </s:source>
  <s:source name="Email_address">
    <s:metadata>
      <s:description>User e-mail address.</s:description>
    </s:metadata>
  </s:source>
  <s:sink name="MaxSprout_result">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>chemical/x-pdb</s:mimeType>
      </s:mimeTypes>
      <s:description>MaxSprout backbone and side chain co-ordinates in PDB like format.</s:description>
    </s:metadata>
  </s:sink>
  <s:sink name="Input_structure">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>chemical/x-pdb</s:mimeType>
      </s:mimeTypes>
      <s:description>Input structure in PDB format. If a structure identifier is used as input, this is the corresponding structure from PDB, otherwise this will be the same as the input.</s:description>
    </s:metadata>
  </s:sink>
  <s:coordination name="Get_result_BLOCKON_EBI_MaxSprout_poll_job">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>EBI_MaxSprout_poll_job</s:target>
    </s:condition>
    <s:action>
      <s:target>Get_result</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
</s:scufl>

