<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:5faddc8a-32ca-43d5-b3ca-7ac03ff3f643" author="" title="bioquali_workflow_blocking" />
  <s:processor name="inputNetworkFileXML">
    <s:description>This object represent the input network file.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="InputFileType" name="inputNetworkFile" qname="JobInputType&gt;inputNetworkFile">
          <s:elements>
            <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
            <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
            <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
            <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="launchJobBlockingInputXML">
    <s:description>This object represent the input data to give to BioQuali (files and options).</s:description>
    <s:defaults>
      <s:default name="predictionsOutputFile">output.txt</s:default>
      <s:default name="xmlOutputFile">output.xml</s:default>
      <s:default name="numProcs">0</s:default>
      <s:default name="wallClockTime">3600</s:default>
    </s:defaults>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="launchJobBlockingInput" name="launchJobBlockingInput" qname="{http://nbcr.sdsc.edu/opal/types}launchJobBlockingInput">
          <s:elements>
            <s:basetype optional="true" unbounded="false" typename="boolean" name="calculateCoreNetwork" qname="JobInputType&gt;calculateCoreNetwork" />
            <s:basetype optional="true" unbounded="false" typename="boolean" name="findAllInconsistentSubgraphs" qname="JobInputType&gt;findAllInconsistentSubgraphs" />
            <s:complextype optional="false" unbounded="false" typename="InputFileType" name="inputNetworkFile" qname="JobInputType&gt;inputNetworkFile">
              <s:elements>
                <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
                <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
                <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
                <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
              </s:elements>
            </s:complextype>
            <s:complextype optional="true" unbounded="false" typename="InputFileType" name="inputObservationsFile" qname="JobInputType&gt;inputObservationsFile">
              <s:elements>
                <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
                <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
                <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
                <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
              </s:elements>
            </s:complextype>
            <s:basetype optional="false" unbounded="false" typename="string" name="predictionsOutputFile" qname="JobInputType&gt;predictionsOutputFile" />
            <s:basetype optional="false" unbounded="false" typename="string" name="xmlOutputFile" qname="JobInputType&gt;xmlOutputFile" />
            <s:basetype optional="true" unbounded="false" typename="int" name="numProcs" qname="JobInputType&gt;numProcs" />
            <s:basetype optional="true" unbounded="false" typename="nonNegativeInteger" name="wallClockTime" qname="JobInputType&gt;wallClockTime" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="launchJobBlockingOutputXML">
    <s:description>This object represent the output data produced by BioQuali.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLOutputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="launchJobBlockingOutput" name="launchJobBlockingOutput" qname="{http://nbcr.sdsc.edu/opal/types}launchJobBlockingOutput">
          <s:elements>
            <s:complextype optional="false" unbounded="false" typename="StatusOutputType" name="status" qname="BlockingOutputType&gt;status">
              <s:elements>
                <s:basetype optional="false" unbounded="false" typename="int" name="code" qname="StatusOutputType&gt;code" />
                <s:basetype optional="false" unbounded="false" typename="string" name="message" qname="StatusOutputType&gt;message" />
                <s:basetype optional="false" unbounded="false" typename="anyURI" name="baseURL" qname="StatusOutputType&gt;baseURL" />
              </s:elements>
            </s:complextype>
            <s:complextype optional="false" unbounded="false" typename="JobOutputType" name="jobOut" qname="BlockingOutputType&gt;jobOut">
              <s:elements>
                <s:basetype optional="true" unbounded="false" typename="anyURI" name="stdOut" qname="JobOutputType&gt;stdOut" />
                <s:basetype optional="true" unbounded="false" typename="anyURI" name="stdErr" qname="JobOutputType&gt;stdErr" />
                <s:arraytype optional="true" unbounded="true" wrapped="false" typename="OutputFileType" name="outputFile" qname="JobOutputType&gt;outputFile">
                  <s:elementtype>
                    <s:complextype optional="false" unbounded="false" typename="OutputFileType" name="" qname="{http://nbcr.sdsc.edu/opal/types}OutputFileType">
                      <s:elements>
                        <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="OutputFileType&gt;name" />
                        <s:basetype optional="false" unbounded="false" typename="anyURI" name="url" qname="OutputFileType&gt;url" />
                      </s:elements>
                    </s:complextype>
                  </s:elementtype>
                </s:arraytype>
              </s:elements>
            </s:complextype>
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="inputObservationsFileXML">
    <s:description>This object represent the input observations file.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="true" unbounded="false" typename="InputFileType" name="inputObservationsFile" qname="JobInputType&gt;inputObservationsFile">
          <s:elements>
            <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
            <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
            <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
            <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="launchJobBlocking">
    <s:description>Same as launchJob but blocks until the remote execution is complete, and returns job outputs (as described above) as the response. This operation may only be appropriate for jobs that are not long running.</s:description>
    <s:arbitrarywsdl>
      <s:wsdl>http://webservices.genouest.org/typedservices/BioQuali.wsdl</s:wsdl>
      <s:operation>launchJobBlocking</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:link source="calculateCoreNetwork" sink="launchJobBlockingInputXML:calculateCoreNetwork" />
  <s:link source="contentDataInput" sink="inputObservationsFileXML:contents" />
  <s:link source="contentGraphInput" sink="inputNetworkFileXML:contents" />
  <s:link source="findAllInconsistentSubgraphs" sink="launchJobBlockingInputXML:findAllInconsistentSubgraphs" />
  <s:link source="inputNetworkFileXML:output" sink="launchJobBlockingInputXML:inputNetworkFile" />
  <s:link source="inputObservationsFileXML:output" sink="launchJobBlockingInputXML:inputObservationsFile" />
  <s:link source="launchJobBlocking:launchJobBlockingOutput" sink="launchJobBlockingOutputXML:input" />
  <s:link source="nameDataInput" sink="inputObservationsFileXML:name" />
  <s:link source="nameGraphInput" sink="inputNetworkFileXML:name" />
  <s:link source="launchJobBlockingInputXML:output" sink="launchJobBlocking:launchJobBlockingInput" />
  <s:link source="launchJobBlockingOutputXML:status" sink="result" />
  <s:source name="nameGraphInput">
    <s:metadata>
      <s:description>Name of the input network file (usually something like input.net).</s:description>
    </s:metadata>
  </s:source>
  <s:source name="contentGraphInput">
    <s:metadata>
      <s:description>Content of the input network file, loaded from a file on your hard drive.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="nameDataInput">
    <s:metadata>
      <s:description>Name of the input observations file (usually something like input.obs).</s:description>
    </s:metadata>
  </s:source>
  <s:source name="contentDataInput">
    <s:metadata>
      <s:description>Content of the input observations file, loaded from a file on your hard drive.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="calculateCoreNetwork">
    <s:metadata>
      <s:description>Calculate core network. Set to 'true' or 'false'.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="findAllInconsistentSubgraphs">
    <s:metadata>
      <s:description>Find all inconsistent subgraphs. Set to 'true' or 'false'.</s:description>
    </s:metadata>
  </s:source>
  <s:sink name="result">
    <s:metadata>
      <s:description>Result of the job. It includes exit status and URL to access output files. There are other operations defined in the WSDL to retrieve output data.</s:description>
    </s:metadata>
  </s:sink>
</s:scufl>

