<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:5faddc8a-32ca-43d5-b3ca-7ac03ff3f643" author="" title="bioquali_workflow_async" />
  <s:processor name="PollStatus">
    <s:description>This nested workflow is a loop which will regularly request the job status to the server until it is finished.</s:description>
    <s:workflow maxretries="10000" retrydelay="10000" critical="true">
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:9107748f-d593-40d1-8fee-e6ba2b47e440" author="" title="Untitled workflow #24" />
        <s:processor name="queryStatus">
          <s:description>Expects a Job ID to query the status of a running job. A status code, message, and URL of the working directory for the job are returned.</s:description>
          <s:arbitrarywsdl>
            <s:wsdl>http://webservices.genouest.org/typedservices/BioQuali.wsdl</s:wsdl>
            <s:operation>queryStatus</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:processor name="queryStatusOutputXML">
          <s:local>
            org.embl.ebi.escience.scuflworkers.java.XMLOutputSplitter
            <s:extensions>
              <s:complextype optional="false" unbounded="false" typename="queryStatusOutput" name="queryStatusOutput" qname="{http://nbcr.sdsc.edu/opal/types}queryStatusOutput">
                <s:elements>
                  <s:basetype optional="false" unbounded="false" typename="int" name="code" qname="StatusOutputType&gt;code" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="message" qname="StatusOutputType&gt;message" />
                  <s:basetype optional="false" unbounded="false" typename="anyURI" name="baseURL" qname="StatusOutputType&gt;baseURL" />
                </s:elements>
              </s:complextype>
            </s:extensions>
          </s:local>
        </s:processor>
        <s:processor name="IsFinished">
          <s:beanshell>
            <s:scriptvalue>isFinished = code.equals("8").toString();</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">code</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">isFinished</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
        </s:processor>
        <s:processor name="Fail_if_false">
          <s:local critical="true">org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
        </s:processor>
        <s:link source="JobID" sink="queryStatus:queryStatusInput" />
        <s:link source="IsFinished:isFinished" sink="Fail_if_false:test" />
        <s:link source="queryStatus:queryStatusOutput" sink="queryStatusOutputXML:input" />
        <s:link source="queryStatusOutputXML:code" sink="IsFinished:code" />
        <s:link source="queryStatusOutputXML:code" sink="Status" />
        <s:source name="JobID" />
        <s:sink name="Status" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="inputObservationsFileXML">
    <s:description>This object represent the input observations file.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="true" unbounded="false" typename="InputFileType" name="inputObservationsFile" qname="JobInputType&gt;inputObservationsFile">
          <s:elements>
            <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
            <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
            <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
            <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="inputNetworkFileXML">
    <s:description>This object represent the input network file.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="InputFileType" name="inputNetworkFile" qname="JobInputType&gt;inputNetworkFile">
          <s:elements>
            <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
            <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
            <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
            <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="launchJob">
    <s:description>Requires all the parameters with correct type, and structures representing the input files. The structure contains the name of the input file and either the contents in Base64 encoded binary form or a MIME attachment, or simply a location (URL) to the associated file. The operation returns a Job ID that can be used to retrieve job status and outputs.</s:description>
    <s:arbitrarywsdl>
      <s:wsdl>http://webservices.genouest.org/typedservices/BioQuali.wsdl</s:wsdl>
      <s:operation>launchJob</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="launchJobInputXML">
    <s:description>This is where you define all the input data to BioQuali webservice.</s:description>
    <s:defaults>
      <s:default name="predictionsOutputFile">output.txt</s:default>
      <s:default name="xmlOutputFile">output.xml</s:default>
      <s:default name="numProcs">0</s:default>
      <s:default name="wallClockTime">3600</s:default>
    </s:defaults>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="launchJobInput" name="launchJobInput" qname="{http://nbcr.sdsc.edu/opal/types}launchJobInput">
          <s:elements>
            <s:basetype optional="true" unbounded="false" typename="boolean" name="calculateCoreNetwork" qname="JobInputType&gt;calculateCoreNetwork" />
            <s:basetype optional="true" unbounded="false" typename="boolean" name="findAllInconsistentSubgraphs" qname="JobInputType&gt;findAllInconsistentSubgraphs" />
            <s:complextype optional="false" unbounded="false" typename="InputFileType" name="inputNetworkFile" qname="JobInputType&gt;inputNetworkFile">
              <s:elements>
                <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
                <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
                <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
                <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
              </s:elements>
            </s:complextype>
            <s:complextype optional="true" unbounded="false" typename="InputFileType" name="inputObservationsFile" qname="JobInputType&gt;inputObservationsFile">
              <s:elements>
                <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="InputFileType&gt;name" />
                <s:basetype optional="true" unbounded="false" typename="base64Binary" name="contents" qname="InputFileType&gt;contents" />
                <s:basetype optional="true" unbounded="false" typename="anyURI" name="location" qname="InputFileType&gt;location" />
                <s:basetype optional="true" unbounded="false" typename="DataHandler" name="attachment" qname="InputFileType&gt;attachment" />
              </s:elements>
            </s:complextype>
            <s:basetype optional="false" unbounded="false" typename="string" name="predictionsOutputFile" qname="JobInputType&gt;predictionsOutputFile" />
            <s:basetype optional="false" unbounded="false" typename="string" name="xmlOutputFile" qname="JobInputType&gt;xmlOutputFile" />
            <s:basetype optional="true" unbounded="false" typename="int" name="numProcs" qname="JobInputType&gt;numProcs" />
            <s:basetype optional="true" unbounded="false" typename="nonNegativeInteger" name="wallClockTime" qname="JobInputType&gt;wallClockTime" />
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="launchJobOutputXML">
    <s:description>This object represent the output data produced by BioQuali.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLOutputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="launchJobOutput" name="launchJobOutput" qname="{http://nbcr.sdsc.edu/opal/types}launchJobOutput">
          <s:elements>
            <s:basetype optional="false" unbounded="false" typename="string" name="jobID" qname="JobSubOutputType&gt;jobID" />
            <s:complextype optional="false" unbounded="false" typename="StatusOutputType" name="status" qname="JobSubOutputType&gt;status">
              <s:elements>
                <s:basetype optional="false" unbounded="false" typename="int" name="code" qname="StatusOutputType&gt;code" />
                <s:basetype optional="false" unbounded="false" typename="string" name="message" qname="StatusOutputType&gt;message" />
                <s:basetype optional="false" unbounded="false" typename="anyURI" name="baseURL" qname="StatusOutputType&gt;baseURL" />
              </s:elements>
            </s:complextype>
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:processor name="getOutputs">
    <s:description>returns the outputs from a job that is identified by a Job ID. The output consists of the urls for the standard output and error, and an array of structures representing the output files. The structure contains the name of the output file and the url from where it can be downloaded.</s:description>
    <s:arbitrarywsdl>
      <s:wsdl>http://webservices.genouest.org/typedservices/BioQuali.wsdl</s:wsdl>
      <s:operation>getOutputs</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="getOutputsOutputXML">
    <s:description>These are the files generated by Tuiuiu.</s:description>
    <s:local>
      org.embl.ebi.escience.scuflworkers.java.XMLOutputSplitter
      <s:extensions>
        <s:complextype optional="false" unbounded="false" typename="getOutputsOutput" name="getOutputsOutput" qname="{http://nbcr.sdsc.edu/opal/types}getOutputsOutput">
          <s:elements>
            <s:basetype optional="true" unbounded="false" typename="anyURI" name="stdOut" qname="JobOutputType&gt;stdOut" />
            <s:basetype optional="true" unbounded="false" typename="anyURI" name="stdErr" qname="JobOutputType&gt;stdErr" />
            <s:arraytype optional="true" unbounded="true" wrapped="false" typename="OutputFileType" name="outputFile" qname="JobOutputType&gt;outputFile">
              <s:elementtype>
                <s:complextype optional="false" unbounded="false" typename="OutputFileType" name="" qname="{http://nbcr.sdsc.edu/opal/types}OutputFileType">
                  <s:elements>
                    <s:basetype optional="false" unbounded="false" typename="string" name="name" qname="OutputFileType&gt;name" />
                    <s:basetype optional="false" unbounded="false" typename="anyURI" name="url" qname="OutputFileType&gt;url" />
                  </s:elements>
                </s:complextype>
              </s:elementtype>
            </s:arraytype>
          </s:elements>
        </s:complextype>
      </s:extensions>
    </s:local>
  </s:processor>
  <s:link source="calculateCoreNetwork" sink="launchJobInputXML:calculateCoreNetwork" />
  <s:link source="contentDataInput" sink="inputObservationsFileXML:contents" />
  <s:link source="contentGraphInput" sink="inputNetworkFileXML:contents" />
  <s:link source="findAllInconsistentSubgraphs" sink="launchJobInputXML:findAllInconsistentSubgraphs" />
  <s:link source="nameDataInput" sink="inputObservationsFileXML:name" />
  <s:link source="nameGraphInput" sink="inputNetworkFileXML:name" />
  <s:link source="getOutputs:getOutputsOutput" sink="getOutputsOutputXML:input" />
  <s:link source="getOutputsOutputXML:outputFile" sink="result" />
  <s:link source="inputNetworkFileXML:output" sink="launchJobInputXML:inputNetworkFile" />
  <s:link source="inputObservationsFileXML:output" sink="launchJobInputXML:inputObservationsFile" />
  <s:link source="launchJob:launchJobOutput" sink="launchJobOutputXML:input" />
  <s:link source="launchJobInputXML:output" sink="launchJob:launchJobInput" />
  <s:link source="launchJobOutputXML:jobID" sink="PollStatus:JobID" />
  <s:link source="launchJobOutputXML:jobID" sink="getOutputs:getOutputsInput" />
  <s:source name="nameGraphInput">
    <s:metadata>
      <s:description>Name of the input network file (usually something like input.net).</s:description>
    </s:metadata>
  </s:source>
  <s:source name="contentGraphInput">
    <s:metadata>
      <s:description>Content of the input network file, loaded from a file on your hard drive.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="nameDataInput">
    <s:metadata>
      <s:description>Name of the input observations file (usually something like input.obs).</s:description>
    </s:metadata>
  </s:source>
  <s:source name="contentDataInput">
    <s:metadata>
      <s:description>Content of the input observations file, loaded from a file on your hard drive.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="calculateCoreNetwork">
    <s:metadata>
      <s:description>Calculate core network. Set to 'true' or 'false'.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="findAllInconsistentSubgraphs">
    <s:metadata>
      <s:description>Find all inconsistent subgraphs. Set to 'true' or 'false'.</s:description>
    </s:metadata>
  </s:source>
  <s:sink name="result">
    <s:metadata>
      <s:description>Result of the job. It includes exit status and URL to access output files. There are other operations defined in the WSDL to retrieve output data.</s:description>
    </s:metadata>
  </s:sink>
  <s:coordination name="getOutputs_BLOCKON_PollStatus">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>PollStatus</s:target>
    </s:condition>
    <s:action>
      <s:target>getOutputs</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
</s:scufl>

