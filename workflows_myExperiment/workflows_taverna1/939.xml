<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="" title="MY_Multi_Alignment_Phylo">This workflow performs a 'multiple' multiple sequence alignment and  phylogenetic analysis.</s:workflowdescription>
  <s:processor name="Extract_Seq_Description">
    <s:beanshell>
      <s:scriptvalue>/* Output: result; string with description of each sequence in FASTA format
*/

// Extract the FASTA description from each sequence
import java.util.regex.Pattern;
import java.util.regex.Matcher;

StringBuffer temp = new StringBuffer();
String information="";
// regular expression to extract only the sequence description
Pattern pattern = Pattern.compile ("&gt;(\\w+.*)\\s");
Matcher matcher = pattern.matcher(Sequences);

while(matcher.find()){
	information=matcher.group(1);
	temp.append(information + "\n");
}

// Output sequence description
String result = temp.toString();</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">Sequences</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="'text/plain'">result</s:beanshelloutput>
      </s:beanshelloutputlist>
      <s:dependencies s:classloader="iteration" />
    </s:beanshell>
  </s:processor>
  <s:processor name="Get_Proteins_FASTA">
    <s:description>Given a sequence or sequence entry identifer return the sequence in fasta format.

If a sequence identifier is input the EBI's WSDbfetch web service (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch) is used to retrive the sequence in fasta format. Otherwise the input is assumed to be a sequence and if passed through the Soaplab EMBOSS seqret service to force the sequence into fasta format.</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:70d8a2a8-a369-4824-879d-dbfa36fcecc8" author="Hamish McWilliam" title="Sequences_or_IDs">Given a sequence or sequence entry identifer (e.g. uniprot:wap_rat), return the sequence in fasta format.

If a sequence identifier is input the EBI's WSDbfetch web service (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch) is used to retrive the sequence in fasta format. Otherwise the input is assumed to be a sequence and if passed through the Soaplab EMBOSS seqret service to force the sequence into fasta format.</s:workflowdescription>
        <s:processor name="Fail_if_sequence">
          <s:description>Fails if the workflow input was a sequence (i.e. is an identifer).</s:description>
          <s:local>org.embl.ebi.escience.scuflworkers.java.FailIfTrue</s:local>
        </s:processor>
        <s:processor name="Fail_if_identifer">
          <s:description>Fails if the workflow input is an identifier (i.e. is an actual sequence).</s:description>
          <s:local>org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
        </s:processor>
        <s:processor name="Beanshell">
          <s:beanshell>
            <s:scriptvalue>//StringBuffer in = new StringBuffer();

String out = in.toString();</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">in</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">out</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
        </s:processor>
        <s:processor name="Is_sequence">
          <s:description>Return true if the input is a sequence or false if the input is a sequence identifer (e.g. uniprot:wap_rat).</s:description>
          <s:beanshell>
            <s:scriptvalue>lineLen = sequence.indexOf("\n");
if(lineLen &lt; 1) {
  lineLen = sequence.length();
}
if(!sequence.startsWith("&gt;") ) {
  is_sequence = "false";
} else {
  is_sequence = "true";
}</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">sequence</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">is_sequence</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
        </s:processor>
        <s:processor name="Nested_Workflow">
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="Get-Protein-FASTA">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
              <s:processor name="Merge">
                <s:defaults>
                  <s:default name="seperator" />
                </s:defaults>
                <s:local>org.embl.ebi.escience.scuflworkers.java.StringListMerge</s:local>
              </s:processor>
              <s:processor name="Get_Protein_FASTA">
                <s:local>net.sourceforge.taverna.scuflworkers.ncbi.ProteinFastaWorker</s:local>
              </s:processor>
              <s:processor name="Split">
                <s:defaults>
                  <s:default name="regex">,</s:default>
                </s:defaults>
                <s:local>org.embl.ebi.escience.scuflworkers.java.SplitByRegex</s:local>
              </s:processor>
              <s:link source="Get_Protein_FASTA:outputText" sink="Merge:stringlist" />
              <s:link source="IDs" sink="Split:string" />
              <s:link source="Split:split" sink="Get_Protein_FASTA:id" />
              <s:link source="Merge:concatenated" sink="sequences" />
              <s:source name="IDs" />
              <s:sink name="sequences" />
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:link source="Sequences_or_IDs" sink="Is_sequence:sequence" />
        <s:link source="Is_sequence:is_sequence" sink="Fail_if_identifer:test" />
        <s:link source="Is_sequence:is_sequence" sink="Fail_if_sequence:test" />
        <s:link source="Sequences_or_IDs" sink="Beanshell:in" />
        <s:link source="Sequences_or_IDs" sink="Nested_Workflow:IDs" />
        <s:link source="Beanshell:out" sink="sequences" />
        <s:link source="Nested_Workflow:sequences" sink="sequences" />
        <s:source name="Sequences_or_IDs">
          <s:metadata>
            <s:description>Either an actual sequence or an entry identifer.</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="sequences" />
        <s:coordination name="Nested_Workflow_BLOCKON_Fail_if_sequence">
          <s:condition>
            <s:state>Completed</s:state>
            <s:target>Fail_if_sequence</s:target>
          </s:condition>
          <s:action>
            <s:target>Nested_Workflow</s:target>
            <s:statechange>
              <s:from>Scheduled</s:from>
              <s:to>Running</s:to>
            </s:statechange>
          </s:action>
        </s:coordination>
        <s:coordination name="Beanshell_scripting_host_BLOCKON_Fail_if_identifer">
          <s:condition>
            <s:state>Completed</s:state>
            <s:target>Fail_if_identifer</s:target>
          </s:condition>
          <s:action>
            <s:target>Beanshell</s:target>
            <s:statechange>
              <s:from>Scheduled</s:from>
              <s:to>Running</s:to>
            </s:statechange>
          </s:action>
        </s:coordination>
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="ClustalW2">
    <s:description>Given a set of sequences perform an multiple sequence alignment and from the multiple alignment derive a phylogenetic tree. The popular ClustalW program (see http://www.clustal.org/), as implemented in the EBI's WSClustalW2 service (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2) is used to perform both tasks.</s:description>
    <s:defaults>
      <s:default name="Email_address">achille.zappa@istge.it</s:default>
    </s:defaults>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:eee9dcb0-8690-45ff-b50f-aceff7fe921f" author="Hamish McWilliam" title="EBI_ClustalW_alignment_tree">Given a set of sequences perform an multiple sequence alignment and from the multiple alignment derive a phylogenetic tree. The popular ClustalW program (see http://www.clustal.org/), as implemented in the EBI's WSClustalW2 service (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2) is used to perform both tasks.</s:workflowdescription>
        <s:processor name="ClustalW_phylogenetic_tree">
          <s:description>Create a phylogenetic tree from the alignment.</s:description>
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:9220342e-bf04-492b-ad67-7ec449f4b98b" author="Hamish McWilliam" title="EBI_ClustalW2_phylogentic_tree">Create a Neighbor-joining phylogenetic tree, with Kimura distance corrections, from a sequence alignment using the EBI's WSClustalW2 service (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2).</s:workflowdescription>
              <s:processor name="Unpack_nj_tree">
                <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
              </s:processor>
              <s:processor name="Unpack_phylip_tree">
                <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
              </s:processor>
              <s:processor name="Unpack_output">
                <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
              </s:processor>
              <s:processor name="Contents_list">
                <s:local>
                  org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
                  <s:extensions>
                    <s:arraytype optional="false" unbounded="false" wrapped="false" typename="WSArrayofData" name="content" qname="{http://www.ebi.ac.uk/WSClustalW2}WSArrayofData">
                      <s:elementtype>
                        <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSClustalW2}data">
                          <s:elements>
                            <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                            <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                          </s:elements>
                        </s:complextype>
                      </s:elementtype>
                    </s:arraytype>
                  </s:extensions>
                </s:local>
              </s:processor>
              <s:processor name="Input_data">
                <s:defaults>
                  <s:default name="type">sequence</s:default>
                </s:defaults>
                <s:local>
                  org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
                  <s:extensions>
                    <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSClustalW2}data">
                      <s:elements>
                        <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                      </s:elements>
                    </s:complextype>
                  </s:extensions>
                </s:local>
              </s:processor>
              <s:processor name="Get_phylip_tree_result">
                <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#poll_jobid_type)</s:description>
                <s:defaults>
                  <s:default name="type">toolph</s:default>
                </s:defaults>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>poll</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="Get_nj_tree_result">
                <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#poll_jobid_type)</s:description>
                <s:defaults>
                  <s:default name="type">toolnj</s:default>
                </s:defaults>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>poll</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="Get_output">
                <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#poll_jobid_type)</s:description>
                <s:defaults>
                  <s:default name="type">tooloutput</s:default>
                </s:defaults>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>poll</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="Job_params">
                <s:defaults>
                  <s:default name="outputtree">nj</s:default>
                  <s:default name="kimura">1</s:default>
                  <s:default name="tree">1</s:default>
                  <s:default name="quicktree">0</s:default>
                  <s:default name="iteration">tree</s:default>
                  <s:default name="clustering">nj</s:default>
                  <s:default name="numiter">1</s:default>
                  <s:default name="async">1</s:default>
                </s:defaults>
                <s:local>
                  org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
                  <s:extensions>
                    <s:complextype optional="false" unbounded="false" typename="inputParams" name="params" qname="{http://www.ebi.ac.uk/WSClustalW2}inputParams">
                      <s:elements>
                        <s:basetype optional="false" unbounded="false" typename="string" name="alignment" qname="inputParams&gt;alignment" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="output" qname="inputParams&gt;output" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="tossgaps" qname="inputParams&gt;tossgaps" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="ktup" qname="inputParams&gt;ktup" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="window" qname="inputParams&gt;window" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="gapopen" qname="inputParams&gt;gapopen" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="endgaps" qname="inputParams&gt;endgaps" />
                        <s:basetype optional="false" unbounded="false" typename="float" name="gapext" qname="inputParams&gt;gapext" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="gapdist" qname="inputParams&gt;gapdist" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="topdiags" qname="inputParams&gt;topdiags" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="pairgap" qname="inputParams&gt;pairgap" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="outputtree" qname="inputParams&gt;outputtree" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="matrix" qname="inputParams&gt;matrix" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="cpu" qname="inputParams&gt;cpu" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="kimura" qname="inputParams&gt;kimura" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="tree" qname="inputParams&gt;tree" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="align" qname="inputParams&gt;align" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="quicktree" qname="inputParams&gt;quicktree" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="score" qname="inputParams&gt;score" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="iteration" qname="inputParams&gt;iteration" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="clustering" qname="inputParams&gt;clustering" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="numiter" qname="inputParams&gt;numiter" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="outorder" qname="inputParams&gt;outorder" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="email" qname="inputParams&gt;email" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="async" qname="inputParams&gt;async" />
                      </s:elements>
                    </s:complextype>
                  </s:extensions>
                </s:local>
              </s:processor>
              <s:processor name="runClustalW2">
                <s:description>Submit a ClustalW analysis job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#runclustalw2_params_content)</s:description>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>runClustalW2</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="EBI_ClustalW2_poll_job" boring="true">
                <s:description>Wait for job to finish.</s:description>
                <s:workflow maxretries="1000" retrydelay="5000">
                  <s:scufl version="0.2" log="0">
                    <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:aae0d8c8-4e78-4c8c-827f-17ae9a618ee3" author="Hamish McWilliam" title="EBI_ClustalW2_poll_job">Check status of job.</s:workflowdescription>
                    <s:processor name="Success">
                      <s:description>If job not finished fail.</s:description>
                      <s:local critical="true">org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
                    </s:processor>
                    <s:processor name="Is_done">
                      <s:description>Map job status into true/false is done flag</s:description>
                      <s:beanshell>
                        <s:scriptvalue>if(job_status.equals("DONE")) {
  is_done = "true";
} else {
  is_done = "false";
}</s:scriptvalue>
                        <s:beanshellinputlist>
                          <s:beanshellinput s:syntactictype="'text/plain'">job_status</s:beanshellinput>
                        </s:beanshellinputlist>
                        <s:beanshelloutputlist>
                          <s:beanshelloutput s:syntactictype="'text/plain'">is_done</s:beanshelloutput>
                        </s:beanshelloutputlist>
                        <s:dependencies s:classloader="iteration" />
                      </s:beanshell>
                    </s:processor>
                    <s:processor name="checkStatus">
                      <s:description>Get the status of a submited job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#checkstatus_jobid)</s:description>
                      <s:arbitrarywsdl>
                        <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                        <s:operation>checkStatus</s:operation>
                      </s:arbitrarywsdl>
                    </s:processor>
                    <s:link source="Job_ID" sink="checkStatus:jobid" />
                    <s:link source="Is_done:is_done" sink="Success:test" />
                    <s:link source="checkStatus:status" sink="Is_done:job_status" />
                    <s:link source="checkStatus:status" sink="Job_status" />
                    <s:source name="Job_ID">
                      <s:metadata>
                        <s:description>EBI job identifier for the job to check.</s:description>
                      </s:metadata>
                    </s:source>
                    <s:sink name="Job_status">
                      <s:metadata>
                        <s:description>Status of the job.</s:description>
                      </s:metadata>
                    </s:sink>
                  </s:scufl>
                </s:workflow>
              </s:processor>
              <s:link source="Contents_list:output" sink="runClustalW2:content" />
              <s:link source="Email_address" sink="Job_params:email" />
              <s:link source="Get_nj_tree_result:result" sink="Unpack_nj_tree:bytes" />
              <s:link source="Get_output:result" sink="Unpack_output:bytes" />
              <s:link source="Get_phylip_tree_result:result" sink="Unpack_phylip_tree:bytes" />
              <s:link source="Input_data:output" sink="Contents_list:WSArrayofData" />
              <s:link source="Job_params:output" sink="runClustalW2:params" />
              <s:link source="Sequence_alignment" sink="Input_data:content" />
              <s:link source="runClustalW2:jobid" sink="EBI_ClustalW2_poll_job:Job_ID" />
              <s:link source="runClustalW2:jobid" sink="Get_nj_tree_result:jobid" />
              <s:link source="Unpack_nj_tree:string" sink="ClustalW_nj_tree" />
              <s:link source="Unpack_output:string" sink="ClustalW_output" />
              <s:link source="Unpack_phylip_tree:string" sink="ClustalW_phylip_tree" />
              <s:link source="runClustalW2:jobid" sink="Get_output:jobid" />
              <s:link source="runClustalW2:jobid" sink="Get_phylip_tree_result:jobid" />
              <s:link source="runClustalW2:jobid" sink="Job_ID" />
              <s:source name="Sequence_alignment">
                <s:metadata>
                  <s:description>A sequence alignment in an appropriate format (e.g. fasta, clustalw or MSF).</s:description>
                </s:metadata>
              </s:source>
              <s:source name="Email_address">
                <s:metadata>
                  <s:description>User's e-mail address.</s:description>
                </s:metadata>
              </s:source>
              <s:sink name="Job_ID">
                <s:metadata>
                  <s:description>EBI job identifier.</s:description>
                </s:metadata>
              </s:sink>
              <s:sink name="ClustalW_output">
                <s:metadata>
                  <s:description>Output from the ClustalW program. Useful for diagnosing problems.</s:description>
                </s:metadata>
              </s:sink>
              <s:sink name="ClustalW_phylip_tree">
                <s:metadata>
                  <s:description>The phylogenetic tree in PHYLIP format, for use with tree drawing tools.</s:description>
                </s:metadata>
              </s:sink>
              <s:sink name="ClustalW_nj_tree">
                <s:metadata>
                  <s:description>Description of the tree.</s:description>
                </s:metadata>
              </s:sink>
              <s:coordination name="Get_output_BLOCKON_EBI_ClustalW2_poll_job">
                <s:condition>
                  <s:state>Completed</s:state>
                  <s:target>EBI_ClustalW2_poll_job</s:target>
                </s:condition>
                <s:action>
                  <s:target>Get_output</s:target>
                  <s:statechange>
                    <s:from>Scheduled</s:from>
                    <s:to>Running</s:to>
                  </s:statechange>
                </s:action>
              </s:coordination>
              <s:coordination name="Get_phylip_tree_result_BLOCKON_EBI_ClustalW2_poll_job">
                <s:condition>
                  <s:state>Completed</s:state>
                  <s:target>EBI_ClustalW2_poll_job</s:target>
                </s:condition>
                <s:action>
                  <s:target>Get_phylip_tree_result</s:target>
                  <s:statechange>
                    <s:from>Scheduled</s:from>
                    <s:to>Running</s:to>
                  </s:statechange>
                </s:action>
              </s:coordination>
              <s:coordination name="Get_nj_tree_result_BLOCKON_EBI_ClustalW2_poll_job">
                <s:condition>
                  <s:state>Completed</s:state>
                  <s:target>EBI_ClustalW2_poll_job</s:target>
                </s:condition>
                <s:action>
                  <s:target>Get_nj_tree_result</s:target>
                  <s:statechange>
                    <s:from>Scheduled</s:from>
                    <s:to>Running</s:to>
                  </s:statechange>
                </s:action>
              </s:coordination>
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:processor name="ClustalW_alignment">
          <s:description>Align the sequences.</s:description>
          <s:workflow>
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:5822c9c0-5a58-43ef-afe4-73ff963ca984" author="Hamish McWilliam" title="EBI_ClustalW2">Perform a ClustalW multiple sequence alignment using the EBI’s WSClustalW2 service (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2). The set of sequences to align are the input, for the other parameters see Job_params.</s:workflowdescription>
              <s:processor name="Unpack_output_result">
                <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
              </s:processor>
              <s:processor name="Unpack_alignment_result">
                <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
              </s:processor>
              <s:processor name="Unpack_guide_tree_result">
                <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
              </s:processor>
              <s:processor name="Input_data">
                <s:defaults>
                  <s:default name="type">sequence</s:default>
                </s:defaults>
                <s:local>
                  org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
                  <s:extensions>
                    <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSClustalW2}data">
                      <s:elements>
                        <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                      </s:elements>
                    </s:complextype>
                  </s:extensions>
                </s:local>
              </s:processor>
              <s:processor name="Content_list">
                <s:local>
                  org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
                  <s:extensions>
                    <s:arraytype optional="false" unbounded="false" wrapped="false" typename="WSArrayofData" name="content" qname="{http://www.ebi.ac.uk/WSClustalW2}WSArrayofData">
                      <s:elementtype>
                        <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSClustalW2}data">
                          <s:elements>
                            <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                            <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                          </s:elements>
                        </s:complextype>
                      </s:elementtype>
                    </s:arraytype>
                  </s:extensions>
                </s:local>
              </s:processor>
              <s:processor name="Job_params">
                <s:defaults>
                  <s:default name="alignment">full</s:default>
                  <s:default name="output">aln1</s:default>
                  <s:default name="matrix">blosum</s:default>
                  <s:default name="align">1</s:default>
                  <s:default name="iteration">alignment</s:default>
                  <s:default name="numiter">1</s:default>
                  <s:default name="async">1</s:default>
                </s:defaults>
                <s:local>
                  org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
                  <s:extensions>
                    <s:complextype optional="false" unbounded="false" typename="inputParams" name="params" qname="{http://www.ebi.ac.uk/WSClustalW2}inputParams">
                      <s:elements>
                        <s:basetype optional="false" unbounded="false" typename="string" name="alignment" qname="inputParams&gt;alignment" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="output" qname="inputParams&gt;output" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="tossgaps" qname="inputParams&gt;tossgaps" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="ktup" qname="inputParams&gt;ktup" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="window" qname="inputParams&gt;window" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="gapopen" qname="inputParams&gt;gapopen" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="endgaps" qname="inputParams&gt;endgaps" />
                        <s:basetype optional="false" unbounded="false" typename="float" name="gapext" qname="inputParams&gt;gapext" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="gapdist" qname="inputParams&gt;gapdist" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="topdiags" qname="inputParams&gt;topdiags" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="pairgap" qname="inputParams&gt;pairgap" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="outputtree" qname="inputParams&gt;outputtree" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="matrix" qname="inputParams&gt;matrix" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="cpu" qname="inputParams&gt;cpu" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="kimura" qname="inputParams&gt;kimura" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="tree" qname="inputParams&gt;tree" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="align" qname="inputParams&gt;align" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="quicktree" qname="inputParams&gt;quicktree" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="score" qname="inputParams&gt;score" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="iteration" qname="inputParams&gt;iteration" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="clustering" qname="inputParams&gt;clustering" />
                        <s:basetype optional="false" unbounded="false" typename="int" name="numiter" qname="inputParams&gt;numiter" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="outorder" qname="inputParams&gt;outorder" />
                        <s:basetype optional="false" unbounded="false" typename="string" name="email" qname="inputParams&gt;email" />
                        <s:basetype optional="false" unbounded="false" typename="boolean" name="async" qname="inputParams&gt;async" />
                      </s:elements>
                    </s:complextype>
                  </s:extensions>
                </s:local>
              </s:processor>
              <s:processor name="runClustalW2">
                <s:description>Submit a ClustalW analysis job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#runclustalw2_params_content)</s:description>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>runClustalW2</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="Get_output_result">
                <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#poll_jobid_type)</s:description>
                <s:defaults>
                  <s:default name="type">tooloutput</s:default>
                </s:defaults>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>poll</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="Get_alignment_result">
                <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#poll_jobid_type)</s:description>
                <s:defaults>
                  <s:default name="type">toolaln</s:default>
                </s:defaults>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>poll</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="Get_guide_tree_result">
                <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#poll_jobid_type)</s:description>
                <s:defaults>
                  <s:default name="type">tooldnd</s:default>
                </s:defaults>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                  <s:operation>poll</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:processor name="EBI_ClustalW2_poll_job" boring="true">
                <s:description>Check for job status, and wait if job not finished.</s:description>
                <s:workflow maxretries="1000" retrydelay="10000">
                  <s:scufl version="0.2" log="0">
                    <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:aae0d8c8-4e78-4c8c-827f-17ae9a618ee3" author="Hamish McWilliam" title="EBI_ClustalW2_poll_job">Check status of job.</s:workflowdescription>
                    <s:processor name="Success">
                      <s:description>If job not finished fail.</s:description>
                      <s:local critical="true">org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
                    </s:processor>
                    <s:processor name="Is_done">
                      <s:description>Map job status into true/false is done flag</s:description>
                      <s:beanshell>
                        <s:scriptvalue>if(job_status.equals("DONE")) {
  is_done = "true";
} else {
  is_done = "false";
}</s:scriptvalue>
                        <s:beanshellinputlist>
                          <s:beanshellinput s:syntactictype="'text/plain'">job_status</s:beanshellinput>
                        </s:beanshellinputlist>
                        <s:beanshelloutputlist>
                          <s:beanshelloutput s:syntactictype="'text/plain'">is_done</s:beanshelloutput>
                        </s:beanshelloutputlist>
                        <s:dependencies s:classloader="iteration" />
                      </s:beanshell>
                    </s:processor>
                    <s:processor name="checkStatus">
                      <s:description>Get the status of a submited job (see http://www.ebi.ac.uk/Tools/webservices/services/clustalw2#checkstatus_jobid)</s:description>
                      <s:arbitrarywsdl>
                        <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSClustalW2.wsdl</s:wsdl>
                        <s:operation>checkStatus</s:operation>
                      </s:arbitrarywsdl>
                    </s:processor>
                    <s:link source="Job_ID" sink="checkStatus:jobid" />
                    <s:link source="Is_done:is_done" sink="Success:test" />
                    <s:link source="checkStatus:status" sink="Is_done:job_status" />
                    <s:link source="checkStatus:status" sink="Job_status" />
                    <s:source name="Job_ID">
                      <s:metadata>
                        <s:description>EBI job identifier for the job to check.</s:description>
                      </s:metadata>
                    </s:source>
                    <s:sink name="Job_status">
                      <s:metadata>
                        <s:description>Status of the job.</s:description>
                      </s:metadata>
                    </s:sink>
                  </s:scufl>
                </s:workflow>
              </s:processor>
              <s:link source="Email_address" sink="Job_params:email" />
              <s:link source="Content_list:output" sink="runClustalW2:content" />
              <s:link source="Get_alignment_result:result" sink="Unpack_alignment_result:bytes" />
              <s:link source="Get_guide_tree_result:result" sink="Unpack_guide_tree_result:bytes" />
              <s:link source="Get_output_result:result" sink="Unpack_output_result:bytes" />
              <s:link source="Input_data:output" sink="Content_list:WSArrayofData" />
              <s:link source="Job_params:output" sink="runClustalW2:params" />
              <s:link source="Sequences" sink="Input_data:content" />
              <s:link source="Unpack_alignment_result:string" sink="ClustalW_alignment" />
              <s:link source="Unpack_guide_tree_result:string" sink="ClustalW_guide_tree" />
              <s:link source="Unpack_output_result:string" sink="ClustalW_output" />
              <s:link source="runClustalW2:jobid" sink="EBI_ClustalW2_poll_job:Job_ID" />
              <s:link source="runClustalW2:jobid" sink="Get_alignment_result:jobid" />
              <s:link source="runClustalW2:jobid" sink="Get_guide_tree_result:jobid" />
              <s:link source="runClustalW2:jobid" sink="Get_output_result:jobid" />
              <s:link source="runClustalW2:jobid" sink="Job_ID" />
              <s:source name="Sequences">
                <s:metadata>
                  <s:description>Sequences to align (fasta format recommended).</s:description>
                </s:metadata>
              </s:source>
              <s:source name="Email_address">
                <s:metadata>
                  <s:description>User e-mail address.</s:description>
                </s:metadata>
              </s:source>
              <s:sink name="ClustalW_alignment">
                <s:metadata>
                  <s:description>The alignment in ClustalW format.</s:description>
                </s:metadata>
              </s:sink>
              <s:sink name="ClustalW_guide_tree">
                <s:metadata>
                  <s:description>Guide tree used to produce the final alignment.</s:description>
                </s:metadata>
              </s:sink>
              <s:sink name="Job_ID">
                <s:metadata>
                  <s:mimeTypes>
                    <s:mimeType>text/xml</s:mimeType>
                  </s:mimeTypes>
                  <s:description>EBI job identifier</s:description>
                </s:metadata>
              </s:sink>
              <s:sink name="ClustalW_output" />
              <s:coordination name="Get_alignment_result_BLOCKON_EBI_ClustalW2_poll_job">
                <s:condition>
                  <s:state>Completed</s:state>
                  <s:target>EBI_ClustalW2_poll_job</s:target>
                </s:condition>
                <s:action>
                  <s:target>Get_alignment_result</s:target>
                  <s:statechange>
                    <s:from>Scheduled</s:from>
                    <s:to>Running</s:to>
                  </s:statechange>
                </s:action>
              </s:coordination>
              <s:coordination name="Get_guide_tree_result_BLOCKON_EBI_ClustalW2_poll_job">
                <s:condition>
                  <s:state>Completed</s:state>
                  <s:target>EBI_ClustalW2_poll_job</s:target>
                </s:condition>
                <s:action>
                  <s:target>Get_guide_tree_result</s:target>
                  <s:statechange>
                    <s:from>Scheduled</s:from>
                    <s:to>Running</s:to>
                  </s:statechange>
                </s:action>
              </s:coordination>
              <s:coordination name="Get_output_result_BLOCKON_EBI_ClustalW2_poll_job">
                <s:condition>
                  <s:state>Completed</s:state>
                  <s:target>EBI_ClustalW2_poll_job</s:target>
                </s:condition>
                <s:action>
                  <s:target>Get_output_result</s:target>
                  <s:statechange>
                    <s:from>Scheduled</s:from>
                    <s:to>Running</s:to>
                  </s:statechange>
                </s:action>
              </s:coordination>
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:link source="Email_address" sink="ClustalW_alignment:Email_address" />
        <s:link source="Email_address" sink="ClustalW_phylogenetic_tree:Email_address" />
        <s:link source="Sequences" sink="ClustalW_alignment:Sequences" />
        <s:link source="ClustalW_alignment:ClustalW_alignment" sink="ClustalW_alignment" />
        <s:link source="ClustalW_alignment:ClustalW_alignment" sink="ClustalW_phylogenetic_tree:Sequence_alignment" />
        <s:link source="ClustalW_alignment:ClustalW_output" sink="ClustalW_output" />
        <s:link source="ClustalW_phylogenetic_tree:ClustalW_nj_tree" sink="ClustalW_nj_tree" />
        <s:link source="ClustalW_phylogenetic_tree:ClustalW_phylip_tree" sink="ClustalW_phylip_tree" />
        <s:source name="Sequences">
          <s:metadata>
            <s:description>Input set of sequences to be aligned.</s:description>
          </s:metadata>
        </s:source>
        <s:source name="Email_address">
          <s:metadata>
            <s:description>User e-mail address.</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="ClustalW_alignment">
          <s:metadata>
            <s:description>Multiple sequence alignment in ClustalW format.</s:description>
          </s:metadata>
        </s:sink>
        <s:sink name="ClustalW_phylip_tree">
          <s:metadata>
            <s:description>Neighbour-joining phylogenetic tree in PHYLIP format.</s:description>
          </s:metadata>
        </s:sink>
        <s:sink name="ClustalW_output" />
        <s:sink name="ClustalW_nj_tree" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Clustal_Tcoffee">
    <s:description>Perform a multiple sequence alignment using T-Coffee (see http://www.tcoffee.org/). The EBI's WSToffee web service (see http://www.ebi.ac.uk/Tools/webservices/services/tcoffee) ise used.</s:description>
    <s:defaults>
      <s:default name="Email_address">achille.zappa@istge.it</s:default>
    </s:defaults>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:356cff9b-0ede-4542-bb12-f35b46810b38" author="Hamish McWilliam" title="EBI_TCoffee">Perform a multiple sequence alignment using T-Coffee (see http://www.tcoffee.org/). The EBI's WSToffee web service (see http://www.ebi.ac.uk/Tools/webservices/services/tcoffee) ise used.</s:workflowdescription>
        <s:processor name="Input_data">
          <s:description>Add type information to input.</s:description>
          <s:defaults>
            <s:default name="type">sequence</s:default>
          </s:defaults>
          <s:local>
            org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
            <s:extensions>
              <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSTCoffee}data">
                <s:elements>
                  <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                </s:elements>
              </s:complextype>
            </s:extensions>
          </s:local>
        </s:processor>
        <s:processor name="Unpack_alignment">
          <s:description>Convert byte[] from service into string.</s:description>
          <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
        </s:processor>
        <s:processor name="Contents_list">
          <s:description>Wrap input data in list.</s:description>
          <s:local>
            org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
            <s:extensions>
              <s:arraytype optional="false" unbounded="false" wrapped="false" typename="WSArrayofData" name="content" qname="{http://www.ebi.ac.uk/WSTCoffee}WSArrayofData">
                <s:elementtype>
                  <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSTCoffee}data">
                    <s:elements>
                      <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                      <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                    </s:elements>
                  </s:complextype>
                </s:elementtype>
              </s:arraytype>
            </s:extensions>
          </s:local>
        </s:processor>
        <s:processor name="Get_alignment">
          <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/tcoffee#poll_jobid_type)</s:description>
          <s:defaults>
            <s:default name="type">tooloutput</s:default>
          </s:defaults>
          <s:arbitrarywsdl>
            <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSTCoffee.wsdl</s:wsdl>
            <s:operation>poll</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:processor name="runTCoffee">
          <s:description>Submit a T-Coffee analysis job (see http://www.ebi.ac.uk/Tools/webservices/services/tcoffee#runtcoffee_params_content)</s:description>
          <s:arbitrarywsdl>
            <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSTCoffee.wsdl</s:wsdl>
            <s:operation>runTCoffee</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:processor name="Job_params">
          <s:description>T-Coffee parameters</s:description>
          <s:defaults>
            <s:default name="async">1</s:default>
            <s:default name="matrix">blosum</s:default>
          </s:defaults>
          <s:local>
            org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
            <s:extensions>
              <s:complextype optional="false" unbounded="false" typename="inputParams" name="params" qname="{http://www.ebi.ac.uk/WSTCoffee}inputParams">
                <s:elements>
                  <s:basetype optional="false" unbounded="false" typename="string" name="email" qname="inputParams&gt;email" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="async" qname="inputParams&gt;async" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="alignment" qname="inputParams&gt;alignment" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="output" qname="inputParams&gt;output" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="tossgaps" qname="inputParams&gt;tossgaps" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="gapdist" qname="inputParams&gt;gapdist" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="topdiags" qname="inputParams&gt;topdiags" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="pairgap" qname="inputParams&gt;pairgap" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="ktup" qname="inputParams&gt;ktup" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="window" qname="inputParams&gt;window" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="gapopen" qname="inputParams&gt;gapopen" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="gapclose" qname="inputParams&gt;gapclose" />
                  <s:basetype optional="false" unbounded="false" typename="float" name="gapext" qname="inputParams&gt;gapext" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="outputtree" qname="inputParams&gt;outputtree" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="matrix" qname="inputParams&gt;matrix" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="cpu" qname="inputParams&gt;cpu" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="kimura" qname="inputParams&gt;kimura" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="tree" qname="inputParams&gt;tree" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="align" qname="inputParams&gt;align" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="quicktree" qname="inputParams&gt;quicktree" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="scores" qname="inputParams&gt;scores" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="outorder" qname="inputParams&gt;outorder" />
                </s:elements>
              </s:complextype>
            </s:extensions>
          </s:local>
        </s:processor>
        <s:processor name="EBI_TCoffee_poll_job" boring="true">
          <s:description>Check job status</s:description>
          <s:workflow maxretries="1000" retrydelay="15000">
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:02ff126f-4035-4701-aa78-962dbeb1e5cf" author="Hamish McWilliam" title="EBI_TCoffee_poll_job">Check WSTCoffee job status.</s:workflowdescription>
              <s:processor name="Success">
                <s:description>Fail if job not done.</s:description>
                <s:local critical="true">org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
              </s:processor>
              <s:processor name="Is_done">
                <s:description>Map job status to true/false</s:description>
                <s:beanshell>
                  <s:scriptvalue>if(job_status.equals("DONE")) {
  is_done = "true";
} else {
  is_done = "false";
}</s:scriptvalue>
                  <s:beanshellinputlist>
                    <s:beanshellinput s:syntactictype="'text/plain'">job_status</s:beanshellinput>
                  </s:beanshellinputlist>
                  <s:beanshelloutputlist>
                    <s:beanshelloutput s:syntactictype="'text/plain'">is_done</s:beanshelloutput>
                  </s:beanshelloutputlist>
                  <s:dependencies s:classloader="iteration" />
                </s:beanshell>
              </s:processor>
              <s:processor name="checkStatus">
                <s:description>Get the status of a submited job (see http://www.ebi.ac.uk/Tools/webservices/services/tcoffee#checkstatus_jobid)</s:description>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSTCoffee.wsdl</s:wsdl>
                  <s:operation>checkStatus</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:link source="Job_ID" sink="checkStatus:jobid" />
              <s:link source="Is_done:is_done" sink="Success:test" />
              <s:link source="checkStatus:status" sink="Is_done:job_status" />
              <s:link source="checkStatus:status" sink="Job_status" />
              <s:source name="Job_ID">
                <s:metadata>
                  <s:description>EBI job identifier.</s:description>
                </s:metadata>
              </s:source>
              <s:sink name="Job_status">
                <s:metadata>
                  <s:description>Job status</s:description>
                </s:metadata>
              </s:sink>
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:link source="Email_address" sink="Job_params:email" />
        <s:link source="Contents_list:output" sink="runTCoffee:content" />
        <s:link source="Get_alignment:output" sink="Unpack_alignment:bytes" />
        <s:link source="Input_data:output" sink="Contents_list:WSArrayofData" />
        <s:link source="Job_params:output" sink="runTCoffee:params" />
        <s:link source="Sequences" sink="Input_data:content" />
        <s:link source="Unpack_alignment:string" sink="TCoffee_alignment" />
        <s:link source="runTCoffee:jobid" sink="EBI_TCoffee_poll_job:Job_ID" />
        <s:link source="runTCoffee:jobid" sink="Get_alignment:jobid" />
        <s:link source="runTCoffee:jobid" sink="TCoffee_job_ID" />
        <s:source name="Email_address">
          <s:metadata>
            <s:description>User e-mail address.</s:description>
          </s:metadata>
        </s:source>
        <s:source name="Sequences" />
        <s:sink name="TCoffee_job_ID">
          <s:metadata>
            <s:description>EBI job identifer.</s:description>
          </s:metadata>
        </s:sink>
        <s:sink name="TCoffee_alignment">
          <s:metadata>
            <s:description>T-Coffee alignment in a ClustalW style format.</s:description>
          </s:metadata>
        </s:sink>
        <s:coordination name="Get_alignment_BLOCKON_EBI_TCoffee_poll_job">
          <s:condition>
            <s:state>Completed</s:state>
            <s:target>EBI_TCoffee_poll_job</s:target>
          </s:condition>
          <s:action>
            <s:target>Get_alignment</s:target>
            <s:statechange>
              <s:from>Scheduled</s:from>
              <s:to>Running</s:to>
            </s:statechange>
          </s:action>
        </s:coordination>
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Muscle">
    <s:description>Perform a multiple sequence alignment using the MUSCLE tool (see http://www.drive5.com/muscle/). The EBI's WSMuscle web service (see http://www.ebi.ac.uk/Tools/webservices/services/muscle) is used.</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:707a054a-88c0-41f4-b9d4-df49d9bcd2e2" author="Hamish McWilliam" title="MY_ebi_muscle_plot">Perform a multiple sequence alignment using the MUSCLE tool (see http://www.drive5.com/muscle/). The EBI's WSMuscle web service (see http://www.ebi.ac.uk/Tools/webservices/services/muscle) is used.</s:workflowdescription>
        <s:processor name="Unpack_alignment">
          <s:description>Convert byte[] from service into srting.</s:description>
          <s:local>org.embl.ebi.escience.scuflworkers.java.ByteArrayToString</s:local>
        </s:processor>
        <s:processor name="Job_params">
          <s:description>Parameters for MUSCLE.</s:description>
          <s:defaults>
            <s:default name="output">wsf</s:default>
            <s:default name="outputtree">tree2</s:default>
            <s:default name="maxiters">3</s:default>
            <s:default name="email">achille.zappa@istge.it</s:default>
            <s:default name="async">1</s:default>
          </s:defaults>
          <s:local>
            org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
            <s:extensions>
              <s:complextype optional="false" unbounded="false" typename="inputParams" name="params" qname="{http://www.ebi.ac.uk/WSMuscle}inputParams">
                <s:elements>
                  <s:basetype optional="false" unbounded="false" typename="string" name="output" qname="inputParams&gt;output" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="outputtree" qname="inputParams&gt;outputtree" />
                  <s:basetype optional="false" unbounded="false" typename="int" name="maxiters" qname="inputParams&gt;maxiters" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="diags" qname="inputParams&gt;diags" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="email" qname="inputParams&gt;email" />
                  <s:basetype optional="false" unbounded="false" typename="boolean" name="async" qname="inputParams&gt;async" />
                </s:elements>
              </s:complextype>
            </s:extensions>
          </s:local>
        </s:processor>
        <s:processor name="Contents_list">
          <s:description>Wrap input data in list</s:description>
          <s:local>
            org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
            <s:extensions>
              <s:arraytype optional="false" unbounded="false" wrapped="false" typename="WSArrayofData" name="content" qname="{http://www.ebi.ac.uk/WSMuscle}WSArrayofData">
                <s:elementtype>
                  <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSMuscle}data">
                    <s:elements>
                      <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                      <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                    </s:elements>
                  </s:complextype>
                </s:elementtype>
              </s:arraytype>
            </s:extensions>
          </s:local>
        </s:processor>
        <s:processor name="Input_data">
          <s:description>Add type to input sequences</s:description>
          <s:defaults>
            <s:default name="type">sequence</s:default>
          </s:defaults>
          <s:local>
            org.embl.ebi.escience.scuflworkers.java.XMLInputSplitter
            <s:extensions>
              <s:complextype optional="false" unbounded="false" typename="data" name="" qname="{http://www.ebi.ac.uk/WSMuscle}data">
                <s:elements>
                  <s:basetype optional="false" unbounded="false" typename="string" name="type" qname="data&gt;type" />
                  <s:basetype optional="false" unbounded="false" typename="string" name="content" qname="data&gt;content" />
                </s:elements>
              </s:complextype>
            </s:extensions>
          </s:local>
        </s:processor>
        <s:processor name="runMuscle">
          <s:description>Submit a MUSCLE analysis job (see http://www.ebi.ac.uk/Tools/webservices/services/muscle#runmuscle_params_content)</s:description>
          <s:arbitrarywsdl>
            <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSMuscle.wsdl</s:wsdl>
            <s:operation>runMuscle</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:processor name="Get_alignment">
          <s:description>Get the results of a job (see http://www.ebi.ac.uk/Tools/webservices/services/muscle#poll_jobid_type)</s:description>
          <s:defaults>
            <s:default name="type">tooloutput</s:default>
          </s:defaults>
          <s:arbitrarywsdl>
            <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSMuscle.wsdl</s:wsdl>
            <s:operation>poll</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:processor name="EBI_MUSCLE_poll_job" boring="true">
          <s:description>Check status of job.</s:description>
          <s:workflow maxretries="1000" retrydelay="15000" critical="true">
            <s:scufl version="0.2" log="0">
              <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:f8e0817e-c4de-40e6-bdc5-b0825c4c5da2" author="Hamish McWilliam" title="EBI_MUSCLE_poll_job">Check MUSCLE job status.</s:workflowdescription>
              <s:processor name="Is_done">
                <s:description>Convert status code into true/false.</s:description>
                <s:beanshell>
                  <s:scriptvalue>if(job_status.equals("DONE")) {
  is_done = "true";
} else {
  is_done = "false";
}</s:scriptvalue>
                  <s:beanshellinputlist>
                    <s:beanshellinput s:syntactictype="'text/plain'">job_status</s:beanshellinput>
                  </s:beanshellinputlist>
                  <s:beanshelloutputlist>
                    <s:beanshelloutput s:syntactictype="'text/plain'">is_done</s:beanshelloutput>
                  </s:beanshelloutputlist>
                  <s:dependencies s:classloader="iteration" />
                </s:beanshell>
              </s:processor>
              <s:processor name="Success">
                <s:description>Fail if job not complete.</s:description>
                <s:local critical="true">org.embl.ebi.escience.scuflworkers.java.FailIfFalse</s:local>
              </s:processor>
              <s:processor name="checkStatus">
                <s:description>Get the status of a submited job (see http://www.ebi.ac.uk/Tools/webservices/services/muscle#checkstatus_jobid)</s:description>
                <s:arbitrarywsdl>
                  <s:wsdl>http://www.ebi.ac.uk/Tools/webservices/wsdl/WSMuscle.wsdl</s:wsdl>
                  <s:operation>checkStatus</s:operation>
                </s:arbitrarywsdl>
              </s:processor>
              <s:link source="Job_ID" sink="checkStatus:jobid" />
              <s:link source="Is_done:is_done" sink="Success:test" />
              <s:link source="checkStatus:status" sink="Is_done:job_status" />
              <s:link source="checkStatus:status" sink="Job_status" />
              <s:source name="Job_ID">
                <s:metadata>
                  <s:description>EBI job identifer for MUSCLE job.</s:description>
                </s:metadata>
              </s:source>
              <s:sink name="Job_status">
                <s:metadata>
                  <s:description>Job status</s:description>
                </s:metadata>
              </s:sink>
            </s:scufl>
          </s:workflow>
        </s:processor>
        <s:link source="Contents_list:output" sink="runMuscle:content" />
        <s:link source="Get_alignment:output" sink="Unpack_alignment:bytes" />
        <s:link source="Input_data:output" sink="Contents_list:WSArrayofData" />
        <s:link source="Job_params:output" sink="runMuscle:params" />
        <s:link source="Sequences" sink="Input_data:content" />
        <s:link source="runMuscle:jobid" sink="EBI_MUSCLE_poll_job:Job_ID" />
        <s:link source="runMuscle:jobid" sink="Get_alignment:jobid" />
        <s:link source="Unpack_alignment:string" sink="MUSCLE_alignment" />
        <s:link source="runMuscle:jobid" sink="MUSCLE_job_ID" />
        <s:source name="Sequences" />
        <s:sink name="MUSCLE_job_ID">
          <s:metadata>
            <s:description>EBI job identifier.</s:description>
          </s:metadata>
        </s:sink>
        <s:sink name="MUSCLE_alignment">
          <s:metadata>
            <s:description>Alignment produced by MUSCLE, in fasta format.</s:description>
          </s:metadata>
        </s:sink>
        <s:coordination name="Get_alignment_BLOCKON_EBI_MUSCLE_poll_job">
          <s:condition>
            <s:state>Completed</s:state>
            <s:target>EBI_MUSCLE_poll_job</s:target>
          </s:condition>
          <s:action>
            <s:target>Get_alignment</s:target>
            <s:statechange>
              <s:from>Scheduled</s:from>
              <s:to>Running</s:to>
            </s:statechange>
          </s:action>
        </s:coordination>
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow4">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:25c27f9d-0728-4aa0-b599-91f839468f5f" author="" title="M_fproml_Max-Like" />
        <s:processor name="fproml">
          <s:description>Protein phylogeny by maximum likelihood</s:description>
          <s:soaplabwsdl interval="10000" backoff="1.0" maxinterval="10000">http://www.ebi.ac.uk/soaplab/services/phylogeny_molecular_sequence.fproml</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fproml:sequence_direct_data" />
        <s:link source="fproml:outfile" sink="Max-Like" />
        <s:link source="fproml:outtreefile" sink="ML_tree" />
        <s:source name="Alignments" />
        <s:sink name="Max-Like" />
        <s:sink name="ML_tree" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow5">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:25c27f9d-0728-4aa0-b599-91f839468f5f" author="" title="M_fproml_Max-Like" />
        <s:processor name="fproml">
          <s:description>Protein phylogeny by maximum likelihood</s:description>
          <s:soaplabwsdl interval="10000" backoff="1.0" maxinterval="10000">http://www.ebi.ac.uk/soaplab/services/phylogeny_molecular_sequence.fproml</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fproml:sequence_direct_data" />
        <s:link source="fproml:outfile" sink="Max-Like" />
        <s:link source="fproml:outtreefile" sink="ML_tree" />
        <s:source name="Alignments" />
        <s:sink name="Max-Like" />
        <s:sink name="ML_tree" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="ClustalW">
    <s:description>Multiple alignment program - interface to
                  ClustalW program</s:description>
    <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/alignment_multiple.emma</s:soaplabwsdl>
  </s:processor>
  <s:processor name="Nested_Workflow6">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:25c27f9d-0728-4aa0-b599-91f839468f5f" author="" title="M_fproml_Max-Like" />
        <s:processor name="fproml">
          <s:description>Protein phylogeny by maximum likelihood</s:description>
          <s:soaplabwsdl interval="10000" backoff="1.0" maxinterval="10000">http://www.ebi.ac.uk/soaplab/services/phylogeny_molecular_sequence.fproml</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fproml:sequence_direct_data" />
        <s:link source="fproml:outfile" sink="ML_tree" />
        <s:link source="fproml:outfile" sink="Max-Like" />
        <s:source name="Alignments" />
        <s:sink name="Max-Like" />
        <s:sink name="ML_tree" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow10">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS NJ Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">n</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="NJ" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="NJ" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow8">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS UPGMA Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">u</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="UPGMA" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="UPGMA" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow3">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:25c27f9d-0728-4aa0-b599-91f839468f5f" author="" title="M_fproml_Max-Like" />
        <s:processor name="fproml">
          <s:description>Protein phylogeny by maximum likelihood</s:description>
          <s:soaplabwsdl interval="10000" backoff="1.0" maxinterval="10000">http://www.ebi.ac.uk/soaplab/services/phylogeny_molecular_sequence.fproml</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fproml:sequence_direct_data" />
        <s:link source="fproml:outfile" sink="Max-Like" />
        <s:link source="fproml:outtreefile" sink="ML_tree" />
        <s:source name="Alignments" />
        <s:sink name="Max-Like" />
        <s:sink name="ML_tree" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow1">
    <s:description>This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS UPGMA Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">u</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="UPGMA" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="UPGMA" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow2">
    <s:description>This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS NJ Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">n</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="NJ" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="NJ" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow9">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS UPGMA Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">u</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="UPGMA" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="UPGMA" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow11">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS UPGMA Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">u</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="UPGMA" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="UPGMA" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow">
    <s:description>This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS NJ Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">n</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="NJ" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="NJ" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Nested_Workflow7">
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:1284a957-6ffd-4c8b-b0a9-2b90697d1427" author="Mariana de Oliveira Braga Teixeira Monteiro" title="EMBOSS NJ Tree">This workflow performs a generic protein sequence analysis. In order to do that a novel protein sequence enters into the software along with a list of known protein identifiers chosen by the biologist to perform a homology search, followed by a multiple sequence alignment and finally a phylogenetic analysis.</s:workflowdescription>
        <s:processor name="fprotdist">
          <s:description>Protein distance algorithm</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_molecular_sequence.fprotdist</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fneighbor">
          <s:description>Phylogenies from distance matrix by N-J or
                  UPGMA method</s:description>
          <s:defaults>
            <s:default name="treetype">n</s:default>
          </s:defaults>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_distance_matrix.fneighbor</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawgram">
          <s:description>Plots a cladogram- or phenogram-like rooted
                  tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawgram</s:soaplabwsdl>
        </s:processor>
        <s:processor name="fdrawtree">
          <s:description>Plots an unrooted tree diagram</s:description>
          <s:soaplabwsdl>http://www.ebi.ac.uk/soaplab/emboss4/services/phylogeny_tree_drawing.fdrawtree</s:soaplabwsdl>
        </s:processor>
        <s:link source="Alignments" sink="fprotdist:sequence_direct_data" />
        <s:link source="fdrawgram:plotfile" sink="Rooted" />
        <s:link source="fdrawtree:plotfile" sink="Unrooted" />
        <s:link source="fneighbor:outfile" sink="Distance" />
        <s:link source="fneighbor:outtreefile" sink="NJ" />
        <s:link source="fneighbor:outtreefile" sink="fdrawgram:intreefile_direct_data" />
        <s:link source="fneighbor:outtreefile" sink="fdrawtree:intreefile_direct_data" />
        <s:link source="fprotdist:outfile" sink="fneighbor:datafile_direct_data" />
        <s:source name="Alignments">
          <s:metadata>
            <s:description>Enter a novel protein sequence. e.g.
AITRRVACLDGVNTATNAACCALFAVRDDIQQNL
FDGGECGEEVHESLRLTFHDAIGISPSLAATGKFGG
GGADGSIMIFDDIEPNFHANNGVDEIINAQKPFVAK
HNMTAGDFIQFAGAVGVSNCPGAPQLSFFLGRPA</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="NJ" />
        <s:sink name="Distance" />
        <s:sink name="Rooted" />
        <s:sink name="Unrooted" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:link source="ClustalW2:ClustalW_alignment" sink="Nested_Workflow1:Alignments" />
  <s:link source="ClustalW2:ClustalW_alignment" sink="Nested_Workflow3:Alignments" />
  <s:link source="ClustalW2:ClustalW_alignment" sink="Nested_Workflow:Alignments" />
  <s:link source="ClustalW:outseq" sink="Clustal_Tcoffee:Sequences" />
  <s:link source="ClustalW:outseq" sink="Nested_Workflow11:Alignments" />
  <s:link source="ClustalW:outseq" sink="Nested_Workflow2:Alignments" />
  <s:link source="ClustalW:outseq" sink="Nested_Workflow5:Alignments" />
  <s:link source="Sequences_or_IDs" sink="Get_Proteins_FASTA:Sequences_or_IDs" />
  <s:link source="Clustal_Tcoffee:TCoffee_alignment" sink="Nested_Workflow10:Alignments" />
  <s:link source="Clustal_Tcoffee:TCoffee_alignment" sink="Nested_Workflow6:Alignments" />
  <s:link source="Clustal_Tcoffee:TCoffee_alignment" sink="Nested_Workflow9:Alignments" />
  <s:link source="Get_Proteins_FASTA:sequences" sink="ClustalW2:Sequences" />
  <s:link source="Get_Proteins_FASTA:sequences" sink="ClustalW:sequence_direct_data" />
  <s:link source="Get_Proteins_FASTA:sequences" sink="Extract_Seq_Description:Sequences" />
  <s:link source="Get_Proteins_FASTA:sequences" sink="Muscle:Sequences" />
  <s:link source="Muscle:MUSCLE_alignment" sink="Nested_Workflow7:Alignments" />
  <s:link source="ClustalW2:ClustalW_alignment" sink="ClustalW2 Alignment" />
  <s:link source="ClustalW2:ClustalW_nj_tree" sink="ClustalW2_nj_tree" />
  <s:link source="ClustalW2:ClustalW_output" sink="ClustalW2 result" />
  <s:link source="ClustalW2:ClustalW_phylip_tree" sink="ClustalW2_phylip_tree" />
  <s:link source="ClustalW:outseq" sink="emma result" />
  <s:link source="Clustal_Tcoffee:TCoffee_alignment" sink="Clustal T-coffee alignment" />
  <s:link source="Extract_Seq_Description:result" sink="Protein Description" />
  <s:link source="Muscle:MUSCLE_alignment" sink="Muscle_Alignment" />
  <s:link source="Muscle:MUSCLE_alignment" sink="Nested_Workflow4:Alignments" />
  <s:link source="Muscle:MUSCLE_alignment" sink="Nested_Workflow8:Alignments" />
  <s:link source="Nested_Workflow10:Distance" sink="CW_Tcoffee nj-dist" />
  <s:link source="Nested_Workflow10:NJ" sink="CW_Tcoffee NJ" />
  <s:link source="Nested_Workflow11:Distance" sink="Distance Outfile" />
  <s:link source="Nested_Workflow11:UPGMA" sink="ClustalW_UPGMA" />
  <s:link source="Nested_Workflow1:Distance" sink="ClustalW2 u-dist-out" />
  <s:link source="Nested_Workflow1:UPGMA" sink="ClustalW2 UPGMA" />
  <s:link source="Nested_Workflow2:Distance" sink="ClustalW n-dist-out" />
  <s:link source="Nested_Workflow2:NJ" sink="ClustalW NJ" />
  <s:link source="Nested_Workflow3:ML_tree" sink="4" />
  <s:link source="Nested_Workflow3:Max-Like" sink="3" />
  <s:link source="Nested_Workflow4:ML_tree" sink="6" />
  <s:link source="Nested_Workflow4:Max-Like" sink="5" />
  <s:link source="Nested_Workflow5:ML_tree" sink="8" />
  <s:link source="Nested_Workflow5:Max-Like" sink="7" />
  <s:link source="Nested_Workflow6:ML_tree" sink="2" />
  <s:link source="Nested_Workflow6:Max-Like" sink="1" />
  <s:link source="Nested_Workflow7:Distance" sink="Muscle nj-dist" />
  <s:link source="Nested_Workflow7:NJ" sink="Muscle NJ" />
  <s:link source="Nested_Workflow8:Distance" sink="Muscle u-dist" />
  <s:link source="Nested_Workflow8:UPGMA" sink="Muscle UPGMA" />
  <s:link source="Nested_Workflow9:Distance" sink="CW_T-coffee u-dist" />
  <s:link source="Nested_Workflow9:UPGMA" sink="CW_T-coffee UPGMA" />
  <s:link source="Nested_Workflow:Distance" sink="ClustalW2 dist-out" />
  <s:link source="Nested_Workflow:NJ" sink="ClustalW2 NJ" />
  <s:source name="Sequences_or_IDs" />
  <s:sink name="Protein Description" />
  <s:sink name="ClustalW_UPGMA" />
  <s:sink name="Distance Outfile" />
  <s:sink name="Muscle_Alignment" />
  <s:sink name="ClustalW2 result" />
  <s:sink name="ClustalW2 Alignment" />
  <s:sink name="ClustalW2_phylip_tree" />
  <s:sink name="emma result" />
  <s:sink name="Clustal T-coffee alignment" />
  <s:sink name="ClustalW2_nj_tree" />
  <s:sink name="ClustalW2 NJ" />
  <s:sink name="ClustalW2 dist-out" />
  <s:sink name="ClustalW2 UPGMA" />
  <s:sink name="ClustalW2 u-dist-out" />
  <s:sink name="ClustalW NJ" />
  <s:sink name="ClustalW n-dist-out" />
  <s:sink name="1" />
  <s:sink name="2" />
  <s:sink name="3" />
  <s:sink name="4" />
  <s:sink name="6" />
  <s:sink name="7" />
  <s:sink name="8" />
  <s:sink name="5" />
  <s:sink name="Muscle UPGMA" />
  <s:sink name="Muscle u-dist" />
  <s:sink name="Muscle NJ" />
  <s:sink name="Muscle nj-dist" />
  <s:sink name="CW_T-coffee UPGMA" />
  <s:sink name="CW_T-coffee u-dist" />
  <s:sink name="CW_Tcoffee NJ" />
  <s:sink name="CW_Tcoffee nj-dist" />
  <s:coordination name="Nested_Workflow_BLOCKON_Nested_Workflow3">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow3</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Nested_Workflow1_BLOCKON_Nested_Workflow">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow1</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Muscle_BLOCKON_Nested_Workflow1">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow1</s:target>
    </s:condition>
    <s:action>
      <s:target>Muscle</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Nested_Workflow7_BLOCKON_Nested_Workflow4">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow4</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow7</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Nested_Workflow8_BLOCKON_Nested_Workflow7">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow7</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow8</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="ClustalW_BLOCKON_Nested_Workflow8">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow8</s:target>
    </s:condition>
    <s:action>
      <s:target>ClustalW</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Nested_Workflow2_BLOCKON_Nested_Workflow5">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow5</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow2</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Nested_Workflow11_BLOCKON_Nested_Workflow2">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow2</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow11</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Clustal_Tcoffee_BLOCKON_Nested_Workflow11">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow11</s:target>
    </s:condition>
    <s:action>
      <s:target>Clustal_Tcoffee</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Nested_Workflow9_BLOCKON_Nested_Workflow6">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow6</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow9</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
  <s:coordination name="Nested_Workflow10_BLOCKON_Nested_Workflow9">
    <s:condition>
      <s:state>Completed</s:state>
      <s:target>Nested_Workflow9</s:target>
    </s:condition>
    <s:action>
      <s:target>Nested_Workflow10</s:target>
      <s:statechange>
        <s:from>Scheduled</s:from>
        <s:to>Running</s:to>
      </s:statechange>
    </s:action>
  </s:coordination>
</s:scufl>

