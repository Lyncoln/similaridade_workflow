<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:www.mygrid.org.uk:operation:P81DV9PQW02" author="" title="" />
  <s:processor name="getGeneInfo">
    <s:arbitrarywsdl>
      <s:wsdl>http://xml.nig.ac.jp/wsdl/Ensembl.wsdl</s:wsdl>
      <s:operation>getGeneInfo</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="comma2" boring="true">
    <s:stringconstant>,</s:stringconstant>
  </s:processor>
  <s:processor name="parse_swiss">
    <s:beanshell>
      <s:scriptvalue>String[] split = input.split("\n");
Vector nonEmpty = new Vector();

for (int i = 0; i &lt; split.length; i++) 
{
	if(split[i] == "")
	{
		continue;
	}
	else
	{
		String trimmed = split[i].trim();
		String[] trimmedSplit = trimmed.split(":");	
		nonEmpty.add(trimmedSplit[1].trim());
	}
		
}

String output = "";

for (int i = 0; i &lt; nonEmpty.size(); i++)
{
	output = output + (String) (nonEmpty.elementAt(i) + "\n");
}</s:scriptvalue>
      <s:beanshellinputlist>
        <s:beanshellinput s:syntactictype="'text/plain'">input</s:beanshellinput>
      </s:beanshellinputlist>
      <s:beanshelloutputlist>
        <s:beanshelloutput s:syntactictype="'text/plain'">output</s:beanshelloutput>
      </s:beanshelloutputlist>
    </s:beanshell>
  </s:processor>
  <s:processor name="spit_by_regex2">
    <s:local>org.embl.ebi.escience.scuflworkers.java.SplitByRegex</s:local>
  </s:processor>
  <s:processor name="lister">
    <s:arbitrarywsdl>
      <s:wsdl>http://phoebus.cs.man.ac.uk:8081/axis/EnsemblListner.jws?wsdl</s:wsdl>
      <s:operation>lister</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="regex2" boring="true">
    <s:stringconstant>\n</s:stringconstant>
  </s:processor>
  <s:processor name="FindNameList">
    <s:description>Given a list of ID from PDB, SwissProt, or PIR sequence identifiers,
 retrieves a list of gi's.
 Note that EMBL shares accession numbers with GenBank. EMBL GenInfo
 identifiers may be returned using these accessions; for example
 SHoundFindAcc(X13776) will return GI 45269. EMBL also has its own
 identifiers (which the NCBI and SeqHound refer to as 'name').
 So the same GI may be returned by SHoundFindName("PAAMIR").</s:description>
    <s:seqhound>
      <s:method>SHoundFindNameList</s:method>
      <s:server>seqhound.blueprint.org</s:server>
      <s:jseqremserver>skinner.blueprint.org:8080</s:jseqremserver>
      <s:path>/cgi-bin/seqrem</s:path>
      <s:jseqrempath>/jseqhound/jseqrem</s:jseqrempath>
    </s:seqhound>
  </s:processor>
  <s:processor name="comma_separated2">
    <s:local>org.embl.ebi.escience.scuflworkers.java.StringListMerge</s:local>
  </s:processor>
  <s:processor name="parsing_options" boring="true">
    <s:stringconstant>swiss</s:stringconstant>
  </s:processor>
  <s:processor name="parse_ddbj_gene_info">
    <s:description>extract information from geneGeneInfo processor at http://xml.nig.ac.jp/wsdl/Ensembl.wsdl</s:description>
    <s:soaplabwsdl>http://phoebus.cs.man.ac.uk:1977/axis/services/seq_analysis.parse_ddbj_gene_info</s:soaplabwsdl>
  </s:processor>
  <s:link source="comma2:value" sink="comma_separated2:seperator" />
  <s:link source="comma_separated2:concatenated" sink="FindNameList:nameList" />
  <s:link source="genes_in_region" sink="lister:file" />
  <s:link source="getGeneInfo:Result" sink="parse_ddbj_gene_info:file_direct_data" />
  <s:link source="lister:listerReturn" sink="getGeneInfo:geneId" />
  <s:link source="parse_ddbj_gene_info:output" sink="parse_swiss:input" />
  <s:link source="parse_swiss:output" sink="spit_by_regex2:string" />
  <s:link source="parsing_options:value" sink="parse_ddbj_gene_info:options" />
  <s:link source="FindNameList:result" sink="Swiss_List_to_Gi_list" />
  <s:link source="getGeneInfo:Result" sink="gene_info" />
  <s:link source="parse_ddbj_gene_info:output" sink="parsed_data" />
  <s:link source="parse_swiss:output" sink="swiss_ids" />
  <s:link source="regex2:value" sink="spit_by_regex2:regex" />
  <s:link source="spit_by_regex2:split" sink="comma_separated2:stringlist" />
  <s:source name="genes_in_region" />
  <s:sink name="genes_in_qtl" />
  <s:sink name="gene_info" />
  <s:sink name="parsed_data" />
  <s:sink name="Swiss_List_to_Gi_list" />
  <s:sink name="swiss_ids" />
</s:scufl>


